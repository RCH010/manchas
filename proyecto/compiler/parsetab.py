
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND BOOL BY CHAR COLON COMMA CTEC CTEF CTEI CTESTRING DIVIDE DO ELSE EQ EQUALS FALSE FLOAT FOR FUNCTION GE GT ID IF INT LBRACE LBRACKET LE LET LPAREN LT MAIN MEAN MEDIAN MINUS MODE NE OR PLUS PRINT PROGRAM RBRACE RBRACKET READ RETURN RPAREN SEMI STDEV TIMES TO TRUE VARIANCE VOID WHILEprogram : PROGRAM ID np_create_global SEMI vars program_1 np_end_program\n        |  PROGRAM ID np_create_global SEMI program_1 np_end_programprogram_1 : function program_1\n        | main_blockvars : vars_1vars_1 : LET vars_prima_1 vars_1\n        | LET vars_prima_1vars_prima_1 : ID COLON type np_add_vars SEMI\n        | ID  np_add_satck_vars COMMA vars_prima_1type : INT type_1\n        | FLOAT type_1\n        | CHAR type_1\n        | BOOL type_1type_1 : LBRACKET CTEI RBRACKET\n        | epsilonfunction : FUNCTION ID COLON return_type np_create_new_scope LPAREN RPAREN np_set_func_start_point block np_end_function\n        | FUNCTION ID COLON return_type np_create_new_scope LPAREN params RPAREN np_set_func_start_point block np_end_function\n        | FUNCTION ID COLON return_type np_create_new_scope LPAREN RPAREN vars np_set_func_start_point block np_end_function\n        | FUNCTION ID COLON return_type np_create_new_scope LPAREN params RPAREN vars np_set_func_start_point block np_end_functionmain_block : MAIN np_create_main_scope LPAREN RPAREN block np_end_main\n        | MAIN np_create_main_scope LPAREN RPAREN vars block np_end_mainblock : LBRACE statements RBRACEreturn_type : VOID\n        | typeparams : ID COLON type np_add_vars np_add_params_type COMMA params\n        | ID COLON type np_add_vars np_add_params_typestatements : void_function_call statements1\n        | assignment statements1\n        | condition statements1\n        | writing statements1\n        | reading statements1\n        | repetition statements1\n        | return statements1special_functions : mean\n        | median\n        | variance\n        | standard_deviationstatements1 : statements\n        | epsilonassignment : ID np_add_id LBRACKET np_check_is_array expression np_verify_array_dim RBRACKET np_get_array_address EQUALS np_add_operator expression np_assign_expression SEMI\n        | ID np_add_id EQUALS np_add_operator expression np_assign_expression SEMIcondition : IF LPAREN expression RPAREN np_condition_gotof block np_condition_end_gotof\n        |  IF LPAREN expression RPAREN np_condition_gotof block ELSE np_condition_goto_else block np_condition_end_gotofexpression : exp\n        | expression1 np_add_quadruple_logical\n        | expression0 np_add_quadruple_or_and\n    expression0 : expression AND np_add_operator expression\n        | expression OR np_add_operator expressionexpression1 : exp LT np_add_operator exp\n        | exp LE np_add_operator exp\n        | exp GT np_add_operator exp\n        | exp GE np_add_operator exp\n        | exp EQ np_add_operator exp\n        | exp NE np_add_operator expexp : term np_add_quadruple_sum_min\n        | term np_add_quadruple_sum_min exp_1exp_1 : PLUS np_add_operator exp\n        | MINUS np_add_operator expterm : factor np_add_quadruple_times_div\n        | factor np_add_quadruple_times_div term_2term_2 : TIMES np_add_operator term\n        | DIVIDE np_add_operator termfactor : LPAREN np_add_paren expression RPAREN np_pop_paren \n        | ID np_add_id LBRACKET np_check_is_array expression np_verify_array_dim RBRACKET np_get_array_address\n        | factor_prima_1\n        | function_call\n        | special_functionsfactor_prima_1 : PLUS varcte\n        | MINUS varcte\n        | varctevarcte : ID np_add_id\n        | CTEI np_add_cte_int\n        | CTEF np_add_cte_float\n        | CTEC np_add_cte_char\n        | TRUE np_add_cte_bool\n        | FALSE np_add_cte_boolwriting : PRINT LPAREN writing_1 RPAREN SEMIwriting_1 : expression np_add_print_quadruple_exp COMMA writing_1\n        | CTESTRING  np_add_print_quadruple_str COMMA writing_1\n        | expression np_add_print_quadruple_exp\n        | CTESTRING np_add_print_quadruple_strreading : READ LPAREN reading_1 RPAREN np_add_read_quadruple SEMIreading_1 : ID np_add_id\n        | ID np_add_id LBRACKET np_check_is_array expression np_verify_array_dim RBRACKET np_get_array_addressrepetition : non_conditional_loop\n        | conditional_loopconditional_loop : WHILE np_while_init LPAREN expression RPAREN np_while_expression DO block np_while_end_blocknon_conditional_loop : FOR LPAREN ID np_add_id EQUALS np_add_operator expression np_assign_expression_for TO expression np_non_conditional_limit BY expression RPAREN block np_non_conditional_endreturn : RETURN expression np_add_return_quadruple SEMIfunction_call : ID LPAREN np_check_function_call np_function_end_params RPAREN\n        | ID LPAREN np_check_function_call function_call_1 np_function_end_params RPARENvoid_function_call :  ID LPAREN np_check_function_call np_function_end_params RPAREN SEMI\n        | ID LPAREN np_check_function_call function_call_1 np_function_end_params RPAREN SEMIfunction_call_1 : expression np_function_call_add_param\n        | expression np_function_call_add_param COMMA function_call_1mean : MEAN LPAREN ID RPAREN np_add_mean_quadruple SEMImedian : MEDIAN LPAREN expression RPAREN SEMIvariance : VARIANCE LPAREN expression RPAREN SEMIstandard_deviation : STDEV LPAREN expression RPAREN SEMIepsilon : np_create_global : np_create_main_scope : np_create_new_scope : np_add_satck_vars : np_add_vars : np_add_id : np_add_cte_int : np_add_cte_float : np_add_cte_char : np_add_cte_bool : np_add_operator : np_add_paren : np_pop_paren : np_add_quadruple_sum_min : np_add_quadruple_times_div : np_add_quadruple_logical : np_add_quadruple_or_and : np_assign_expression : np_condition_gotof : np_condition_end_gotof : np_condition_goto_else : np_while_init : np_while_expression : np_while_end_block : np_assign_expression_for :  np_non_conditional_limit : np_non_conditional_end : np_add_print_quadruple_str : np_add_print_quadruple_exp : np_add_return_quadruple : np_add_params_type : np_set_func_start_point : np_end_function : np_end_main : np_end_program : np_check_function_call : np_function_call_add_param : np_function_end_params : np_check_is_array : np_verify_array_dim : np_get_array_address : np_add_read_quadruple : np_add_mean_quadruple : '
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,7,10,14,15,16,21,46,52,53,75,76,],[0,-135,-4,-135,-2,-3,-1,-134,-20,-134,-21,-22,]),'ID':([2,11,12,32,48,51,55,56,57,58,59,60,61,66,67,68,76,86,88,89,90,97,102,104,118,124,125,126,134,135,136,137,138,139,140,141,146,148,157,158,159,160,162,171,172,179,180,181,182,183,184,185,186,187,189,190,192,193,195,196,215,216,217,219,228,229,230,231,233,240,246,248,251,254,255,268,270,272,275,276,290,291,292,295,296,297,298,304,305,308,309,],[3,18,19,18,62,72,62,62,62,62,62,62,62,-85,-86,98,-22,-136,98,98,132,-112,150,150,161,98,-139,-111,-111,-111,-111,-111,-111,-111,-111,-111,98,-136,198,98,98,98,98,98,98,-89,98,98,98,98,98,98,98,98,-111,-111,-111,-111,-139,98,-77,98,98,-139,98,98,98,98,98,-111,-92,98,-120,-82,98,98,72,-93,-41,-42,-124,-111,-120,98,-87,98,-43,98,-40,-127,-88,]),'SEMI':([3,4,27,28,29,30,31,37,38,40,41,42,43,71,91,92,93,94,95,96,98,99,100,101,103,105,106,107,108,109,110,111,112,113,133,142,143,144,145,147,149,150,151,152,153,154,155,156,174,177,188,191,197,209,213,218,220,221,222,223,224,225,226,227,232,236,237,238,239,247,250,256,257,258,259,260,262,264,265,266,267,280,281,288,294,301,303,],[-101,5,-105,-100,-100,-100,-100,49,-10,-15,-11,-12,-13,-14,-130,-44,-116,-117,-114,-115,-106,-65,-66,-67,-70,-34,-35,-36,-37,-107,-108,-109,-110,-110,179,-45,-46,-55,-59,-71,-68,-106,-69,-72,-73,-74,-75,-76,215,-142,-56,-60,-71,246,-118,254,-47,-48,-49,-50,-51,-52,-53,-54,-113,-143,265,266,267,272,275,-57,-58,-61,-62,-63,-90,281,-97,-98,-99,-91,-96,-141,-64,-118,305,]),'LET':([5,17,36,44,49,73,123,],[11,11,11,-9,-8,11,11,]),'FUNCTION':([5,6,8,9,17,22,44,49,76,164,205,206,207,243,244,245,271,],[12,12,-5,12,-7,-6,-9,-8,-22,-133,-16,-133,-133,-18,-17,-133,-19,]),'MAIN':([5,6,8,9,17,22,44,49,76,164,205,206,207,243,244,245,271,],[13,13,-5,13,-7,-6,-9,-8,-22,-133,-16,-133,-133,-18,-17,-133,-19,]),'LBRACE':([8,17,22,36,44,47,49,73,121,122,123,165,166,167,173,208,214,277,283,286,307,],[-5,-7,-6,48,-9,48,-8,-132,48,-132,-132,48,48,-132,-119,48,48,-121,48,48,48,]),'LPAREN':([13,20,28,29,30,31,33,34,35,38,40,41,42,43,45,62,63,64,65,68,69,70,71,86,88,89,97,98,114,115,116,117,119,124,125,126,134,135,136,137,138,139,140,141,146,148,158,159,160,162,171,172,180,181,182,183,184,185,186,187,189,190,192,193,195,196,216,217,219,228,229,230,231,233,240,248,255,268,291,295,297,304,],[-102,26,-100,-100,-100,-100,-103,-23,-24,-10,-15,-11,-12,-13,51,86,88,89,90,97,118,-122,-14,-136,97,97,-112,148,157,158,159,160,162,97,-139,-111,-111,-111,-111,-111,-111,-111,-111,-111,97,-136,97,97,97,97,97,97,97,97,97,97,97,97,97,97,-111,-111,-111,-111,-139,97,97,97,-139,97,97,97,97,97,-111,97,97,97,-111,97,97,97,]),'COLON':([18,19,72,],[23,25,120,]),'COMMA':([18,24,28,29,30,31,38,40,41,42,43,71,92,93,94,95,96,98,99,100,101,103,105,106,107,108,109,110,111,112,113,129,130,142,143,144,145,147,149,150,151,152,153,154,155,156,163,170,175,176,188,191,197,204,211,220,221,222,223,224,225,226,227,232,242,256,257,258,259,260,262,265,266,267,280,281,288,294,],[-104,32,-100,-100,-100,-100,-10,-15,-11,-12,-13,-14,-44,-116,-117,-114,-115,-106,-65,-66,-67,-70,-34,-35,-36,-37,-107,-108,-109,-110,-110,-129,-128,-45,-46,-55,-59,-71,-68,-106,-69,-72,-73,-74,-75,-76,-105,-137,216,217,-56,-60,-71,-131,248,-47,-48,-49,-50,-51,-52,-53,-54,-113,270,-57,-58,-61,-62,-63,-90,-97,-98,-99,-91,-96,-141,-64,]),'INT':([23,25,120,],[28,28,28,]),'FLOAT':([23,25,120,],[29,29,29,]),'CHAR':([23,25,120,],[30,30,30,]),'BOOL':([23,25,120,],[31,31,31,]),'VOID':([25,],[34,]),'RPAREN':([26,28,29,30,31,38,40,41,42,43,51,71,74,86,92,93,94,95,96,98,99,100,101,103,105,106,107,108,109,110,111,112,113,124,127,128,129,130,131,132,142,143,144,145,147,148,149,150,151,152,153,154,155,156,163,168,169,170,175,176,178,188,191,194,196,197,198,199,200,201,203,204,210,211,220,221,222,223,224,225,226,227,232,234,235,242,252,253,256,257,258,259,260,262,263,265,266,267,273,280,281,284,288,293,294,299,306,],[36,-100,-100,-100,-100,-10,-15,-11,-12,-13,73,-14,123,-136,-44,-116,-117,-114,-115,-106,-65,-66,-67,-70,-34,-35,-36,-37,-107,-108,-109,-110,-110,-138,173,174,-129,-128,177,-106,-45,-46,-55,-59,-71,-136,-68,-106,-69,-72,-73,-74,-75,-76,-105,209,-138,-137,-80,-81,-83,-56,-60,232,-138,-71,236,237,238,239,241,-131,247,-94,-47,-48,-49,-50,-51,-52,-53,-54,-113,262,-138,-26,-78,-79,-57,-58,-61,-62,-63,-90,280,-97,-98,-99,-95,-91,-96,-25,-141,-141,-64,-84,307,]),'LBRACKET':([28,29,30,31,62,87,98,132,147,178,],[39,39,39,39,-106,125,-106,-106,195,219,]),'CTEI':([39,68,86,88,89,97,102,104,124,125,126,134,135,136,137,138,139,140,141,146,148,158,159,160,162,171,172,180,181,182,183,184,185,186,187,189,190,192,193,195,196,216,217,219,228,229,230,231,233,240,248,255,268,291,295,297,304,],[50,109,-136,109,109,-112,109,109,109,-139,-111,-111,-111,-111,-111,-111,-111,-111,-111,109,-136,109,109,109,109,109,109,109,109,109,109,109,109,109,109,-111,-111,-111,-111,-139,109,109,109,-139,109,109,109,109,109,-111,109,109,109,-111,109,109,109,]),'IF':([48,55,56,57,58,59,60,61,66,67,76,179,215,246,251,254,272,275,276,290,292,296,298,305,308,309,],[63,63,63,63,63,63,63,63,-85,-86,-22,-89,-77,-92,-120,-82,-93,-41,-42,-124,-120,-87,-43,-40,-127,-88,]),'PRINT':([48,55,56,57,58,59,60,61,66,67,76,179,215,246,251,254,272,275,276,290,292,296,298,305,308,309,],[64,64,64,64,64,64,64,64,-85,-86,-22,-89,-77,-92,-120,-82,-93,-41,-42,-124,-120,-87,-43,-40,-127,-88,]),'READ':([48,55,56,57,58,59,60,61,66,67,76,179,215,246,251,254,272,275,276,290,292,296,298,305,308,309,],[65,65,65,65,65,65,65,65,-85,-86,-22,-89,-77,-92,-120,-82,-93,-41,-42,-124,-120,-87,-43,-40,-127,-88,]),'RETURN':([48,55,56,57,58,59,60,61,66,67,76,179,215,246,251,254,272,275,276,290,292,296,298,305,308,309,],[68,68,68,68,68,68,68,68,-85,-86,-22,-89,-77,-92,-120,-82,-93,-41,-42,-124,-120,-87,-43,-40,-127,-88,]),'FOR':([48,55,56,57,58,59,60,61,66,67,76,179,215,246,251,254,272,275,276,290,292,296,298,305,308,309,],[69,69,69,69,69,69,69,69,-85,-86,-22,-89,-77,-92,-120,-82,-93,-41,-42,-124,-120,-87,-43,-40,-127,-88,]),'WHILE':([48,55,56,57,58,59,60,61,66,67,76,179,215,246,251,254,272,275,276,290,292,296,298,305,308,309,],[70,70,70,70,70,70,70,70,-85,-86,-22,-89,-77,-92,-120,-82,-93,-41,-42,-124,-120,-87,-43,-40,-127,-88,]),'RBRACKET':([50,92,93,94,95,96,98,99,100,101,103,105,106,107,108,109,110,111,112,113,142,143,144,145,147,149,150,151,152,153,154,155,156,188,191,197,212,220,221,222,223,224,225,226,227,232,249,256,257,258,259,260,261,262,265,266,267,278,279,280,281,287,288,294,],[71,-44,-116,-117,-114,-115,-106,-65,-66,-67,-70,-34,-35,-36,-37,-107,-108,-109,-110,-110,-45,-46,-55,-59,-71,-68,-106,-69,-72,-73,-74,-75,-76,-56,-60,-71,-140,-47,-48,-49,-50,-51,-52,-53,-54,-113,274,-57,-58,-61,-62,-63,-140,-90,-97,-98,-99,-140,288,-91,-96,293,-141,-64,]),'RBRACE':([54,55,56,57,58,59,60,61,66,67,76,77,78,79,80,81,82,83,84,85,179,215,246,251,254,272,275,276,290,292,296,298,305,308,309,],[76,-100,-100,-100,-100,-100,-100,-100,-85,-86,-22,-27,-38,-39,-28,-29,-30,-31,-32,-33,-89,-77,-92,-120,-82,-93,-41,-42,-124,-120,-87,-43,-40,-127,-88,]),'EQUALS':([62,87,161,202,274,285,],[-106,126,-106,240,-141,291,]),'PLUS':([68,86,88,89,95,96,97,98,99,100,101,103,105,106,107,108,109,110,111,112,113,124,125,126,134,135,136,137,138,139,140,141,144,145,146,147,148,149,150,151,152,153,154,155,156,158,159,160,162,171,172,180,181,182,183,184,185,186,187,189,190,191,192,193,195,196,197,216,217,219,228,229,230,231,232,233,240,248,255,258,259,260,262,265,266,267,268,280,281,288,291,294,295,297,304,],[102,-136,102,102,-114,-115,-112,-106,-65,-66,-67,-70,-34,-35,-36,-37,-107,-108,-109,-110,-110,102,-139,-111,-111,-111,-111,-111,-111,-111,-111,-111,189,-59,102,-71,-136,-68,-106,-69,-72,-73,-74,-75,-76,102,102,102,102,102,102,102,102,102,102,102,102,102,102,-111,-111,-60,-111,-111,-139,102,-71,102,102,-139,102,102,102,102,-113,102,-111,102,102,-61,-62,-63,-90,-97,-98,-99,102,-91,-96,-141,-111,-64,102,102,102,]),'MINUS':([68,86,88,89,95,96,97,98,99,100,101,103,105,106,107,108,109,110,111,112,113,124,125,126,134,135,136,137,138,139,140,141,144,145,146,147,148,149,150,151,152,153,154,155,156,158,159,160,162,171,172,180,181,182,183,184,185,186,187,189,190,191,192,193,195,196,197,216,217,219,228,229,230,231,232,233,240,248,255,258,259,260,262,265,266,267,268,280,281,288,291,294,295,297,304,],[104,-136,104,104,-114,-115,-112,-106,-65,-66,-67,-70,-34,-35,-36,-37,-107,-108,-109,-110,-110,104,-139,-111,-111,-111,-111,-111,-111,-111,-111,-111,190,-59,104,-71,-136,-68,-106,-69,-72,-73,-74,-75,-76,104,104,104,104,104,104,104,104,104,104,104,104,104,104,-111,-111,-60,-111,-111,-139,104,-71,104,104,-139,104,104,104,104,-113,104,-111,104,104,-61,-62,-63,-90,-97,-98,-99,104,-91,-96,-141,-111,-64,104,104,104,]),'CTEF':([68,86,88,89,97,102,104,124,125,126,134,135,136,137,138,139,140,141,146,148,158,159,160,162,171,172,180,181,182,183,184,185,186,187,189,190,192,193,195,196,216,217,219,228,229,230,231,233,240,248,255,268,291,295,297,304,],[110,-136,110,110,-112,110,110,110,-139,-111,-111,-111,-111,-111,-111,-111,-111,-111,110,-136,110,110,110,110,110,110,110,110,110,110,110,110,110,110,-111,-111,-111,-111,-139,110,110,110,-139,110,110,110,110,110,-111,110,110,110,-111,110,110,110,]),'CTEC':([68,86,88,89,97,102,104,124,125,126,134,135,136,137,138,139,140,141,146,148,158,159,160,162,171,172,180,181,182,183,184,185,186,187,189,190,192,193,195,196,216,217,219,228,229,230,231,233,240,248,255,268,291,295,297,304,],[111,-136,111,111,-112,111,111,111,-139,-111,-111,-111,-111,-111,-111,-111,-111,-111,111,-136,111,111,111,111,111,111,111,111,111,111,111,111,111,111,-111,-111,-111,-111,-139,111,111,111,-139,111,111,111,111,111,-111,111,111,111,-111,111,111,111,]),'TRUE':([68,86,88,89,97,102,104,124,125,126,134,135,136,137,138,139,140,141,146,148,158,159,160,162,171,172,180,181,182,183,184,185,186,187,189,190,192,193,195,196,216,217,219,228,229,230,231,233,240,248,255,268,291,295,297,304,],[112,-136,112,112,-112,112,112,112,-139,-111,-111,-111,-111,-111,-111,-111,-111,-111,112,-136,112,112,112,112,112,112,112,112,112,112,112,112,112,112,-111,-111,-111,-111,-139,112,112,112,-139,112,112,112,112,112,-111,112,112,112,-111,112,112,112,]),'FALSE':([68,86,88,89,97,102,104,124,125,126,134,135,136,137,138,139,140,141,146,148,158,159,160,162,171,172,180,181,182,183,184,185,186,187,189,190,192,193,195,196,216,217,219,228,229,230,231,233,240,248,255,268,291,295,297,304,],[113,-136,113,113,-112,113,113,113,-139,-111,-111,-111,-111,-111,-111,-111,-111,-111,113,-136,113,113,113,113,113,113,113,113,113,113,113,113,113,113,-111,-111,-111,-111,-139,113,113,113,-139,113,113,113,113,113,-111,113,113,113,-111,113,113,113,]),'MEAN':([68,86,88,89,97,124,125,126,134,135,136,137,138,139,140,141,146,148,158,159,160,162,171,172,180,181,182,183,184,185,186,187,189,190,192,193,195,196,216,217,219,228,229,230,231,233,240,248,255,268,291,295,297,304,],[114,-136,114,114,-112,114,-139,-111,-111,-111,-111,-111,-111,-111,-111,-111,114,-136,114,114,114,114,114,114,114,114,114,114,114,114,114,114,-111,-111,-111,-111,-139,114,114,114,-139,114,114,114,114,114,-111,114,114,114,-111,114,114,114,]),'MEDIAN':([68,86,88,89,97,124,125,126,134,135,136,137,138,139,140,141,146,148,158,159,160,162,171,172,180,181,182,183,184,185,186,187,189,190,192,193,195,196,216,217,219,228,229,230,231,233,240,248,255,268,291,295,297,304,],[115,-136,115,115,-112,115,-139,-111,-111,-111,-111,-111,-111,-111,-111,-111,115,-136,115,115,115,115,115,115,115,115,115,115,115,115,115,115,-111,-111,-111,-111,-139,115,115,115,-139,115,115,115,115,115,-111,115,115,115,-111,115,115,115,]),'VARIANCE':([68,86,88,89,97,124,125,126,134,135,136,137,138,139,140,141,146,148,158,159,160,162,171,172,180,181,182,183,184,185,186,187,189,190,192,193,195,196,216,217,219,228,229,230,231,233,240,248,255,268,291,295,297,304,],[116,-136,116,116,-112,116,-139,-111,-111,-111,-111,-111,-111,-111,-111,-111,116,-136,116,116,116,116,116,116,116,116,116,116,116,116,116,116,-111,-111,-111,-111,-139,116,116,116,-139,116,116,116,116,116,-111,116,116,116,-111,116,116,116,]),'STDEV':([68,86,88,89,97,124,125,126,134,135,136,137,138,139,140,141,146,148,158,159,160,162,171,172,180,181,182,183,184,185,186,187,189,190,192,193,195,196,216,217,219,228,229,230,231,233,240,248,255,268,291,295,297,304,],[117,-136,117,117,-112,117,-139,-111,-111,-111,-111,-111,-111,-111,-111,-111,117,-136,117,117,117,117,117,117,117,117,117,117,117,117,117,117,-111,-111,-111,-111,-139,117,117,117,-139,117,117,117,117,117,-111,117,117,117,-111,117,117,117,]),'ELSE':([76,251,],[-22,277,]),'CTESTRING':([89,216,217,],[130,130,130,]),'AND':([91,92,93,94,95,96,98,99,100,101,103,105,106,107,108,109,110,111,112,113,127,129,142,143,144,145,147,149,150,151,152,153,154,155,156,170,188,191,194,197,199,200,201,203,212,213,220,221,222,223,224,225,226,227,232,256,257,258,259,260,261,262,265,266,267,278,280,281,282,288,294,300,301,306,],[134,-44,-116,-117,-114,-115,-106,-65,-66,-67,-70,-34,-35,-36,-37,-107,-108,-109,-110,-110,134,134,-45,-46,-55,-59,-71,-68,-106,-69,-72,-73,-74,-75,-76,134,-56,-60,134,-71,134,134,134,134,134,134,134,134,-49,-50,-51,-52,-53,-54,-113,-57,-58,-61,-62,-63,134,-90,-97,-98,-99,134,-91,-96,134,-141,-64,134,134,134,]),'OR':([91,92,93,94,95,96,98,99,100,101,103,105,106,107,108,109,110,111,112,113,127,129,142,143,144,145,147,149,150,151,152,153,154,155,156,170,188,191,194,197,199,200,201,203,212,213,220,221,222,223,224,225,226,227,232,256,257,258,259,260,261,262,265,266,267,278,280,281,282,288,294,300,301,306,],[135,-44,-116,-117,-114,-115,-106,-65,-66,-67,-70,-34,-35,-36,-37,-107,-108,-109,-110,-110,135,135,-45,-46,-55,-59,-71,-68,-106,-69,-72,-73,-74,-75,-76,135,-56,-60,135,-71,135,135,135,135,135,135,135,135,-49,-50,-51,-52,-53,-54,-113,-57,-58,-61,-62,-63,135,-90,-97,-98,-99,135,-91,-96,135,-141,-64,135,135,135,]),'TO':([92,93,94,95,96,98,99,100,101,103,105,106,107,108,109,110,111,112,113,142,143,144,145,147,149,150,151,152,153,154,155,156,188,191,197,220,221,222,223,224,225,226,227,232,256,257,258,259,260,262,265,266,267,280,281,282,288,289,294,],[-44,-116,-117,-114,-115,-106,-65,-66,-67,-70,-34,-35,-36,-37,-107,-108,-109,-110,-110,-45,-46,-55,-59,-71,-68,-106,-69,-72,-73,-74,-75,-76,-56,-60,-71,-47,-48,-49,-50,-51,-52,-53,-54,-113,-57,-58,-61,-62,-63,-90,-97,-98,-99,-91,-96,-125,-141,295,-64,]),'BY':([92,93,94,95,96,98,99,100,101,103,105,106,107,108,109,110,111,112,113,142,143,144,145,147,149,150,151,152,153,154,155,156,188,191,197,220,221,222,223,224,225,226,227,232,256,257,258,259,260,262,265,266,267,280,281,288,294,300,302,],[-44,-116,-117,-114,-115,-106,-65,-66,-67,-70,-34,-35,-36,-37,-107,-108,-109,-110,-110,-45,-46,-55,-59,-71,-68,-106,-69,-72,-73,-74,-75,-76,-56,-60,-71,-47,-48,-49,-50,-51,-52,-53,-54,-113,-57,-58,-61,-62,-63,-90,-97,-98,-99,-91,-96,-141,-64,-126,304,]),'LT':([92,95,96,98,99,100,101,103,105,106,107,108,109,110,111,112,113,144,145,147,149,150,151,152,153,154,155,156,188,191,197,232,256,257,258,259,260,262,265,266,267,280,281,288,294,],[136,-114,-115,-106,-65,-66,-67,-70,-34,-35,-36,-37,-107,-108,-109,-110,-110,-55,-59,-71,-68,-106,-69,-72,-73,-74,-75,-76,-56,-60,-71,-113,-57,-58,-61,-62,-63,-90,-97,-98,-99,-91,-96,-141,-64,]),'LE':([92,95,96,98,99,100,101,103,105,106,107,108,109,110,111,112,113,144,145,147,149,150,151,152,153,154,155,156,188,191,197,232,256,257,258,259,260,262,265,266,267,280,281,288,294,],[137,-114,-115,-106,-65,-66,-67,-70,-34,-35,-36,-37,-107,-108,-109,-110,-110,-55,-59,-71,-68,-106,-69,-72,-73,-74,-75,-76,-56,-60,-71,-113,-57,-58,-61,-62,-63,-90,-97,-98,-99,-91,-96,-141,-64,]),'GT':([92,95,96,98,99,100,101,103,105,106,107,108,109,110,111,112,113,144,145,147,149,150,151,152,153,154,155,156,188,191,197,232,256,257,258,259,260,262,265,266,267,280,281,288,294,],[138,-114,-115,-106,-65,-66,-67,-70,-34,-35,-36,-37,-107,-108,-109,-110,-110,-55,-59,-71,-68,-106,-69,-72,-73,-74,-75,-76,-56,-60,-71,-113,-57,-58,-61,-62,-63,-90,-97,-98,-99,-91,-96,-141,-64,]),'GE':([92,95,96,98,99,100,101,103,105,106,107,108,109,110,111,112,113,144,145,147,149,150,151,152,153,154,155,156,188,191,197,232,256,257,258,259,260,262,265,266,267,280,281,288,294,],[139,-114,-115,-106,-65,-66,-67,-70,-34,-35,-36,-37,-107,-108,-109,-110,-110,-55,-59,-71,-68,-106,-69,-72,-73,-74,-75,-76,-56,-60,-71,-113,-57,-58,-61,-62,-63,-90,-97,-98,-99,-91,-96,-141,-64,]),'EQ':([92,95,96,98,99,100,101,103,105,106,107,108,109,110,111,112,113,144,145,147,149,150,151,152,153,154,155,156,188,191,197,232,256,257,258,259,260,262,265,266,267,280,281,288,294,],[140,-114,-115,-106,-65,-66,-67,-70,-34,-35,-36,-37,-107,-108,-109,-110,-110,-55,-59,-71,-68,-106,-69,-72,-73,-74,-75,-76,-56,-60,-71,-113,-57,-58,-61,-62,-63,-90,-97,-98,-99,-91,-96,-141,-64,]),'NE':([92,95,96,98,99,100,101,103,105,106,107,108,109,110,111,112,113,144,145,147,149,150,151,152,153,154,155,156,188,191,197,232,256,257,258,259,260,262,265,266,267,280,281,288,294,],[141,-114,-115,-106,-65,-66,-67,-70,-34,-35,-36,-37,-107,-108,-109,-110,-110,-55,-59,-71,-68,-106,-69,-72,-73,-74,-75,-76,-56,-60,-71,-113,-57,-58,-61,-62,-63,-90,-97,-98,-99,-91,-96,-141,-64,]),'TIMES':([96,98,99,100,101,103,105,106,107,108,109,110,111,112,113,145,147,149,150,151,152,153,154,155,156,197,232,260,262,265,266,267,280,281,288,294,],[-115,-106,-65,-66,-67,-70,-34,-35,-36,-37,-107,-108,-109,-110,-110,192,-71,-68,-106,-69,-72,-73,-74,-75,-76,-71,-113,-63,-90,-97,-98,-99,-91,-96,-141,-64,]),'DIVIDE':([96,98,99,100,101,103,105,106,107,108,109,110,111,112,113,145,147,149,150,151,152,153,154,155,156,197,232,260,262,265,266,267,280,281,288,294,],[-115,-106,-65,-66,-67,-70,-34,-35,-36,-37,-107,-108,-109,-110,-110,193,-71,-68,-106,-69,-72,-73,-74,-75,-76,-71,-113,-63,-90,-97,-98,-99,-91,-96,-141,-64,]),'DO':([241,269,],[-123,283,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'np_create_global':([3,],[4,]),'vars':([5,36,73,123,],[6,47,122,167,]),'program_1':([5,6,9,],[7,14,16,]),'vars_1':([5,17,36,73,123,],[8,22,8,8,8,]),'function':([5,6,9,],[9,9,9,]),'main_block':([5,6,9,],[10,10,10,]),'np_end_program':([7,14,],[15,21,]),'vars_prima_1':([11,32,],[17,44,]),'np_create_main_scope':([13,],[20,]),'np_add_satck_vars':([18,],[24,]),'type':([23,25,120,],[27,35,163,]),'return_type':([25,],[33,]),'np_add_vars':([27,163,],[37,204,]),'type_1':([28,29,30,31,],[38,41,42,43,]),'epsilon':([28,29,30,31,55,56,57,58,59,60,61,],[40,40,40,40,79,79,79,79,79,79,79,]),'np_create_new_scope':([33,],[45,]),'block':([36,47,121,165,166,208,214,283,286,307,],[46,53,164,206,207,245,251,290,292,308,]),'np_end_main':([46,53,],[52,75,]),'statements':([48,55,56,57,58,59,60,61,],[54,78,78,78,78,78,78,78,]),'void_function_call':([48,55,56,57,58,59,60,61,],[55,55,55,55,55,55,55,55,]),'assignment':([48,55,56,57,58,59,60,61,],[56,56,56,56,56,56,56,56,]),'condition':([48,55,56,57,58,59,60,61,],[57,57,57,57,57,57,57,57,]),'writing':([48,55,56,57,58,59,60,61,],[58,58,58,58,58,58,58,58,]),'reading':([48,55,56,57,58,59,60,61,],[59,59,59,59,59,59,59,59,]),'repetition':([48,55,56,57,58,59,60,61,],[60,60,60,60,60,60,60,60,]),'return':([48,55,56,57,58,59,60,61,],[61,61,61,61,61,61,61,61,]),'non_conditional_loop':([48,55,56,57,58,59,60,61,],[66,66,66,66,66,66,66,66,]),'conditional_loop':([48,55,56,57,58,59,60,61,],[67,67,67,67,67,67,67,67,]),'params':([51,270,],[74,284,]),'statements1':([55,56,57,58,59,60,61,],[77,80,81,82,83,84,85,]),'np_add_id':([62,98,132,150,161,],[87,147,178,197,202,]),'expression':([68,88,89,124,146,158,159,160,162,171,172,180,181,196,216,217,233,248,255,268,295,297,304,],[91,127,129,170,194,199,200,201,203,212,213,220,221,170,129,129,261,170,278,282,300,301,306,]),'exp':([68,88,89,124,146,158,159,160,162,171,172,180,181,182,183,184,185,186,187,196,216,217,228,229,233,248,255,268,295,297,304,],[92,92,92,92,92,92,92,92,92,92,92,92,92,222,223,224,225,226,227,92,92,92,256,257,92,92,92,92,92,92,92,]),'expression1':([68,88,89,124,146,158,159,160,162,171,172,180,181,196,216,217,233,248,255,268,295,297,304,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'expression0':([68,88,89,124,146,158,159,160,162,171,172,180,181,196,216,217,233,248,255,268,295,297,304,],[94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'term':([68,88,89,124,146,158,159,160,162,171,172,180,181,182,183,184,185,186,187,196,216,217,228,229,230,231,233,248,255,268,295,297,304,],[95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,258,259,95,95,95,95,95,95,95,]),'factor':([68,88,89,124,146,158,159,160,162,171,172,180,181,182,183,184,185,186,187,196,216,217,228,229,230,231,233,248,255,268,295,297,304,],[96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'factor_prima_1':([68,88,89,124,146,158,159,160,162,171,172,180,181,182,183,184,185,186,187,196,216,217,228,229,230,231,233,248,255,268,295,297,304,],[99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'function_call':([68,88,89,124,146,158,159,160,162,171,172,180,181,182,183,184,185,186,187,196,216,217,228,229,230,231,233,248,255,268,295,297,304,],[100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,]),'special_functions':([68,88,89,124,146,158,159,160,162,171,172,180,181,182,183,184,185,186,187,196,216,217,228,229,230,231,233,248,255,268,295,297,304,],[101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,]),'varcte':([68,88,89,102,104,124,146,158,159,160,162,171,172,180,181,182,183,184,185,186,187,196,216,217,228,229,230,231,233,248,255,268,295,297,304,],[103,103,103,149,151,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,]),'mean':([68,88,89,124,146,158,159,160,162,171,172,180,181,182,183,184,185,186,187,196,216,217,228,229,230,231,233,248,255,268,295,297,304,],[105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,]),'median':([68,88,89,124,146,158,159,160,162,171,172,180,181,182,183,184,185,186,187,196,216,217,228,229,230,231,233,248,255,268,295,297,304,],[106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,]),'variance':([68,88,89,124,146,158,159,160,162,171,172,180,181,182,183,184,185,186,187,196,216,217,228,229,230,231,233,248,255,268,295,297,304,],[107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,]),'standard_deviation':([68,88,89,124,146,158,159,160,162,171,172,180,181,182,183,184,185,186,187,196,216,217,228,229,230,231,233,248,255,268,295,297,304,],[108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,]),'np_while_init':([70,],[119,]),'np_set_func_start_point':([73,122,123,167,],[121,165,166,208,]),'np_check_function_call':([86,148,],[124,196,]),'writing_1':([89,216,217,],[128,252,253,]),'reading_1':([90,],[131,]),'np_add_return_quadruple':([91,],[133,]),'np_add_quadruple_logical':([93,],[142,]),'np_add_quadruple_or_and':([94,],[143,]),'np_add_quadruple_sum_min':([95,],[144,]),'np_add_quadruple_times_div':([96,],[145,]),'np_add_paren':([97,],[146,]),'np_add_cte_int':([109,],[152,]),'np_add_cte_float':([110,],[153,]),'np_add_cte_char':([111,],[154,]),'np_add_cte_bool':([112,113,],[155,156,]),'np_function_end_params':([124,169,196,235,],[168,210,234,263,]),'function_call_1':([124,196,248,],[169,235,273,]),'np_check_is_array':([125,195,219,],[171,233,255,]),'np_add_operator':([126,134,135,136,137,138,139,140,141,189,190,192,193,240,291,],[172,180,181,182,183,184,185,186,187,228,229,230,231,268,297,]),'np_add_print_quadruple_exp':([129,],[175,]),'np_add_print_quadruple_str':([130,],[176,]),'exp_1':([144,],[188,]),'term_2':([145,],[191,]),'np_end_function':([164,206,207,245,],[205,243,244,271,]),'np_function_call_add_param':([170,],[211,]),'np_condition_gotof':([173,],[214,]),'np_add_read_quadruple':([177,],[218,]),'np_add_params_type':([204,],[242,]),'np_verify_array_dim':([212,261,278,],[249,279,287,]),'np_assign_expression':([213,301,],[250,303,]),'np_pop_paren':([232,],[260,]),'np_add_mean_quadruple':([236,],[264,]),'np_while_expression':([241,],[269,]),'np_condition_end_gotof':([251,292,],[276,298,]),'np_get_array_address':([274,288,293,],[285,294,299,]),'np_condition_goto_else':([277,],[286,]),'np_assign_expression_for':([282,],[289,]),'np_while_end_block':([290,],[296,]),'np_non_conditional_limit':([300,],[302,]),'np_non_conditional_end':([308,],[309,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID np_create_global SEMI vars program_1 np_end_program','program',7,'p_program','parser.py',52),
  ('program -> PROGRAM ID np_create_global SEMI program_1 np_end_program','program',6,'p_program','parser.py',53),
  ('program_1 -> function program_1','program_1',2,'p_program_1','parser.py',57),
  ('program_1 -> main_block','program_1',1,'p_program_1','parser.py',58),
  ('vars -> vars_1','vars',1,'p_vars','parser.py',63),
  ('vars_1 -> LET vars_prima_1 vars_1','vars_1',3,'p_vars_1','parser.py',67),
  ('vars_1 -> LET vars_prima_1','vars_1',2,'p_vars_1','parser.py',68),
  ('vars_prima_1 -> ID COLON type np_add_vars SEMI','vars_prima_1',5,'p_vars_prima_1','parser.py',72),
  ('vars_prima_1 -> ID np_add_satck_vars COMMA vars_prima_1','vars_prima_1',4,'p_vars_prima_1','parser.py',73),
  ('type -> INT type_1','type',2,'p_type','parser.py',77),
  ('type -> FLOAT type_1','type',2,'p_type','parser.py',78),
  ('type -> CHAR type_1','type',2,'p_type','parser.py',79),
  ('type -> BOOL type_1','type',2,'p_type','parser.py',80),
  ('type_1 -> LBRACKET CTEI RBRACKET','type_1',3,'p_type_1','parser.py',84),
  ('type_1 -> epsilon','type_1',1,'p_type_1','parser.py',85),
  ('function -> FUNCTION ID COLON return_type np_create_new_scope LPAREN RPAREN np_set_func_start_point block np_end_function','function',10,'p_function','parser.py',100),
  ('function -> FUNCTION ID COLON return_type np_create_new_scope LPAREN params RPAREN np_set_func_start_point block np_end_function','function',11,'p_function','parser.py',101),
  ('function -> FUNCTION ID COLON return_type np_create_new_scope LPAREN RPAREN vars np_set_func_start_point block np_end_function','function',11,'p_function','parser.py',102),
  ('function -> FUNCTION ID COLON return_type np_create_new_scope LPAREN params RPAREN vars np_set_func_start_point block np_end_function','function',12,'p_function','parser.py',103),
  ('main_block -> MAIN np_create_main_scope LPAREN RPAREN block np_end_main','main_block',6,'p_main_block','parser.py',107),
  ('main_block -> MAIN np_create_main_scope LPAREN RPAREN vars block np_end_main','main_block',7,'p_main_block','parser.py',108),
  ('block -> LBRACE statements RBRACE','block',3,'p_block','parser.py',111),
  ('return_type -> VOID','return_type',1,'p_return_type','parser.py',114),
  ('return_type -> type','return_type',1,'p_return_type','parser.py',115),
  ('params -> ID COLON type np_add_vars np_add_params_type COMMA params','params',7,'p_params','parser.py',119),
  ('params -> ID COLON type np_add_vars np_add_params_type','params',5,'p_params','parser.py',120),
  ('statements -> void_function_call statements1','statements',2,'p_statements','parser.py',124),
  ('statements -> assignment statements1','statements',2,'p_statements','parser.py',125),
  ('statements -> condition statements1','statements',2,'p_statements','parser.py',126),
  ('statements -> writing statements1','statements',2,'p_statements','parser.py',127),
  ('statements -> reading statements1','statements',2,'p_statements','parser.py',128),
  ('statements -> repetition statements1','statements',2,'p_statements','parser.py',129),
  ('statements -> return statements1','statements',2,'p_statements','parser.py',130),
  ('special_functions -> mean','special_functions',1,'p_special_functions','parser.py',134),
  ('special_functions -> median','special_functions',1,'p_special_functions','parser.py',135),
  ('special_functions -> variance','special_functions',1,'p_special_functions','parser.py',136),
  ('special_functions -> standard_deviation','special_functions',1,'p_special_functions','parser.py',137),
  ('statements1 -> statements','statements1',1,'p_statements1','parser.py',140),
  ('statements1 -> epsilon','statements1',1,'p_statements1','parser.py',141),
  ('assignment -> ID np_add_id LBRACKET np_check_is_array expression np_verify_array_dim RBRACKET np_get_array_address EQUALS np_add_operator expression np_assign_expression SEMI','assignment',13,'p_assignment','parser.py',145),
  ('assignment -> ID np_add_id EQUALS np_add_operator expression np_assign_expression SEMI','assignment',7,'p_assignment','parser.py',146),
  ('condition -> IF LPAREN expression RPAREN np_condition_gotof block np_condition_end_gotof','condition',7,'p_condition','parser.py',149),
  ('condition -> IF LPAREN expression RPAREN np_condition_gotof block ELSE np_condition_goto_else block np_condition_end_gotof','condition',10,'p_condition','parser.py',150),
  ('expression -> exp','expression',1,'p_expression','parser.py',154),
  ('expression -> expression1 np_add_quadruple_logical','expression',2,'p_expression','parser.py',155),
  ('expression -> expression0 np_add_quadruple_or_and','expression',2,'p_expression','parser.py',156),
  ('expression0 -> expression AND np_add_operator expression','expression0',4,'p_expression0','parser.py',161),
  ('expression0 -> expression OR np_add_operator expression','expression0',4,'p_expression0','parser.py',162),
  ('expression1 -> exp LT np_add_operator exp','expression1',4,'p_expression1','parser.py',165),
  ('expression1 -> exp LE np_add_operator exp','expression1',4,'p_expression1','parser.py',166),
  ('expression1 -> exp GT np_add_operator exp','expression1',4,'p_expression1','parser.py',167),
  ('expression1 -> exp GE np_add_operator exp','expression1',4,'p_expression1','parser.py',168),
  ('expression1 -> exp EQ np_add_operator exp','expression1',4,'p_expression1','parser.py',169),
  ('expression1 -> exp NE np_add_operator exp','expression1',4,'p_expression1','parser.py',170),
  ('exp -> term np_add_quadruple_sum_min','exp',2,'p_exp','parser.py',174),
  ('exp -> term np_add_quadruple_sum_min exp_1','exp',3,'p_exp','parser.py',175),
  ('exp_1 -> PLUS np_add_operator exp','exp_1',3,'p_exp_1','parser.py',178),
  ('exp_1 -> MINUS np_add_operator exp','exp_1',3,'p_exp_1','parser.py',179),
  ('term -> factor np_add_quadruple_times_div','term',2,'p_term','parser.py',182),
  ('term -> factor np_add_quadruple_times_div term_2','term',3,'p_term','parser.py',183),
  ('term_2 -> TIMES np_add_operator term','term_2',3,'p_term_2','parser.py',186),
  ('term_2 -> DIVIDE np_add_operator term','term_2',3,'p_term_2','parser.py',187),
  ('factor -> LPAREN np_add_paren expression RPAREN np_pop_paren','factor',5,'p_factor','parser.py',190),
  ('factor -> ID np_add_id LBRACKET np_check_is_array expression np_verify_array_dim RBRACKET np_get_array_address','factor',8,'p_factor','parser.py',191),
  ('factor -> factor_prima_1','factor',1,'p_factor','parser.py',192),
  ('factor -> function_call','factor',1,'p_factor','parser.py',193),
  ('factor -> special_functions','factor',1,'p_factor','parser.py',194),
  ('factor_prima_1 -> PLUS varcte','factor_prima_1',2,'p_factor_prima_1','parser.py',197),
  ('factor_prima_1 -> MINUS varcte','factor_prima_1',2,'p_factor_prima_1','parser.py',198),
  ('factor_prima_1 -> varcte','factor_prima_1',1,'p_factor_prima_1','parser.py',199),
  ('varcte -> ID np_add_id','varcte',2,'p_varcte','parser.py',202),
  ('varcte -> CTEI np_add_cte_int','varcte',2,'p_varcte','parser.py',203),
  ('varcte -> CTEF np_add_cte_float','varcte',2,'p_varcte','parser.py',204),
  ('varcte -> CTEC np_add_cte_char','varcte',2,'p_varcte','parser.py',205),
  ('varcte -> TRUE np_add_cte_bool','varcte',2,'p_varcte','parser.py',206),
  ('varcte -> FALSE np_add_cte_bool','varcte',2,'p_varcte','parser.py',207),
  ('writing -> PRINT LPAREN writing_1 RPAREN SEMI','writing',5,'p_writing','parser.py',211),
  ('writing_1 -> expression np_add_print_quadruple_exp COMMA writing_1','writing_1',4,'p_writing_1','parser.py',214),
  ('writing_1 -> CTESTRING np_add_print_quadruple_str COMMA writing_1','writing_1',4,'p_writing_1','parser.py',215),
  ('writing_1 -> expression np_add_print_quadruple_exp','writing_1',2,'p_writing_1','parser.py',216),
  ('writing_1 -> CTESTRING np_add_print_quadruple_str','writing_1',2,'p_writing_1','parser.py',217),
  ('reading -> READ LPAREN reading_1 RPAREN np_add_read_quadruple SEMI','reading',6,'p_reading','parser.py',220),
  ('reading_1 -> ID np_add_id','reading_1',2,'p_reading_1','parser.py',223),
  ('reading_1 -> ID np_add_id LBRACKET np_check_is_array expression np_verify_array_dim RBRACKET np_get_array_address','reading_1',8,'p_reading_1','parser.py',224),
  ('repetition -> non_conditional_loop','repetition',1,'p_repetition','parser.py',227),
  ('repetition -> conditional_loop','repetition',1,'p_repetition','parser.py',228),
  ('conditional_loop -> WHILE np_while_init LPAREN expression RPAREN np_while_expression DO block np_while_end_block','conditional_loop',9,'p_conditional_loop','parser.py',231),
  ('non_conditional_loop -> FOR LPAREN ID np_add_id EQUALS np_add_operator expression np_assign_expression_for TO expression np_non_conditional_limit BY expression RPAREN block np_non_conditional_end','non_conditional_loop',16,'p_non_conditional_loop','parser.py',234),
  ('return -> RETURN expression np_add_return_quadruple SEMI','return',4,'p_return','parser.py',237),
  ('function_call -> ID LPAREN np_check_function_call np_function_end_params RPAREN','function_call',5,'p_function_call','parser.py',240),
  ('function_call -> ID LPAREN np_check_function_call function_call_1 np_function_end_params RPAREN','function_call',6,'p_function_call','parser.py',241),
  ('void_function_call -> ID LPAREN np_check_function_call np_function_end_params RPAREN SEMI','void_function_call',6,'p_void_function_call','parser.py',244),
  ('void_function_call -> ID LPAREN np_check_function_call function_call_1 np_function_end_params RPAREN SEMI','void_function_call',7,'p_void_function_call','parser.py',245),
  ('function_call_1 -> expression np_function_call_add_param','function_call_1',2,'p_function_call_1','parser.py',248),
  ('function_call_1 -> expression np_function_call_add_param COMMA function_call_1','function_call_1',4,'p_function_call_1','parser.py',249),
  ('mean -> MEAN LPAREN ID RPAREN np_add_mean_quadruple SEMI','mean',6,'p_mean','parser.py',252),
  ('median -> MEDIAN LPAREN expression RPAREN SEMI','median',5,'p_median','parser.py',255),
  ('variance -> VARIANCE LPAREN expression RPAREN SEMI','variance',5,'p_variance','parser.py',258),
  ('standard_deviation -> STDEV LPAREN expression RPAREN SEMI','standard_deviation',5,'p_standard_deviation','parser.py',261),
  ('epsilon -> <empty>','epsilon',0,'p_epsilon','parser.py',264),
  ('np_create_global -> <empty>','np_create_global',0,'p_np_create_global','parser.py',288),
  ('np_create_main_scope -> <empty>','np_create_main_scope',0,'p_np_create_main_scope','parser.py',302),
  ('np_create_new_scope -> <empty>','np_create_new_scope',0,'p_np_create_new_scope','parser.py',319),
  ('np_add_satck_vars -> <empty>','np_add_satck_vars',0,'p_np_add_satck_vars','parser.py',341),
  ('np_add_vars -> <empty>','np_add_vars',0,'p_np_add_vars','parser.py',347),
  ('np_add_id -> <empty>','np_add_id',0,'p_np_add_id','parser.py',373),
  ('np_add_cte_int -> <empty>','np_add_cte_int',0,'p_np_add_cte_int','parser.py',389),
  ('np_add_cte_float -> <empty>','np_add_cte_float',0,'p_np_add_cte_float','parser.py',406),
  ('np_add_cte_char -> <empty>','np_add_cte_char',0,'p_np_add_cte_char','parser.py',423),
  ('np_add_cte_bool -> <empty>','np_add_cte_bool',0,'p_np_add_cte_bool','parser.py',441),
  ('np_add_operator -> <empty>','np_add_operator',0,'p_np_add_operator','parser.py',454),
  ('np_add_paren -> <empty>','np_add_paren',0,'p_np_add_paren','parser.py',460),
  ('np_pop_paren -> <empty>','np_pop_paren',0,'p_np_pop_paren','parser.py',466),
  ('np_add_quadruple_sum_min -> <empty>','np_add_quadruple_sum_min',0,'p_np_add_quadruple_sum_min','parser.py',475),
  ('np_add_quadruple_times_div -> <empty>','np_add_quadruple_times_div',0,'p_np_add_quadruple_times_div','parser.py',479),
  ('np_add_quadruple_logical -> <empty>','np_add_quadruple_logical',0,'p_np_add_quadruple_logical','parser.py',483),
  ('np_add_quadruple_or_and -> <empty>','np_add_quadruple_or_and',0,'p_np_add_quadruple_or_and','parser.py',487),
  ('np_assign_expression -> <empty>','np_assign_expression',0,'p_np_assign_expression','parser.py',491),
  ('np_condition_gotof -> <empty>','np_condition_gotof',0,'p_np_condition_gotof','parser.py',505),
  ('np_condition_end_gotof -> <empty>','np_condition_end_gotof',0,'p_np_condition_end_gotof','parser.py',516),
  ('np_condition_goto_else -> <empty>','np_condition_goto_else',0,'p_np_condition_goto_else','parser.py',524),
  ('np_while_init -> <empty>','np_while_init',0,'p_np_while_init','parser.py',538),
  ('np_while_expression -> <empty>','np_while_expression',0,'p_np_while_expression','parser.py',543),
  ('np_while_end_block -> <empty>','np_while_end_block',0,'p_np_while_end_block','parser.py',553),
  ('np_assign_expression_for -> <empty>','np_assign_expression_for',0,'p_np_assign_expression_for','parser.py',578),
  ('np_non_conditional_limit -> <empty>','np_non_conditional_limit',0,'p_np_non_conditional_limit','parser.py',597),
  ('np_non_conditional_end -> <empty>','np_non_conditional_end',0,'p_np_non_conditional_end','parser.py',609),
  ('np_add_print_quadruple_str -> <empty>','np_add_print_quadruple_str',0,'p_np_add_print_quadruple_str','parser.py',641),
  ('np_add_print_quadruple_exp -> <empty>','np_add_print_quadruple_exp',0,'p_np_add_print_quadruple_exp','parser.py',646),
  ('np_add_return_quadruple -> <empty>','np_add_return_quadruple',0,'p_np_add_return_quadruple','parser.py',661),
  ('np_add_params_type -> <empty>','np_add_params_type',0,'p_np_add_params_type','parser.py',679),
  ('np_set_func_start_point -> <empty>','np_set_func_start_point',0,'p_np_set_func_start_point','parser.py',687),
  ('np_end_function -> <empty>','np_end_function',0,'p_np_end_function','parser.py',692),
  ('np_end_main -> <empty>','np_end_main',0,'p_np_end_main','parser.py',703),
  ('np_end_program -> <empty>','np_end_program',0,'p_np_end_program','parser.py',710),
  ('np_check_function_call -> <empty>','np_check_function_call',0,'p_np_check_function_call','parser.py',715),
  ('np_function_call_add_param -> <empty>','np_function_call_add_param',0,'p_np_function_call_add_param','parser.py',727),
  ('np_function_end_params -> <empty>','np_function_end_params',0,'p_np_function_end_params','parser.py',746),
  ('np_check_is_array -> <empty>','np_check_is_array',0,'p_np_check_is_array','parser.py',785),
  ('np_verify_array_dim -> <empty>','np_verify_array_dim',0,'p_np_verify_array_dim','parser.py',808),
  ('np_get_array_address -> <empty>','np_get_array_address',0,'p_np_get_array_address','parser.py',830),
  ('np_add_read_quadruple -> <empty>','np_add_read_quadruple',0,'p_np_add_read_quadruple','parser.py',859),
  ('np_add_mean_quadruple -> <empty>','np_add_mean_quadruple',0,'p_np_add_mean_quadruple','parser.py',873),
]
