Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID np_create_global SEMI vars program_1 np_end_program
Rule 2     program -> PROGRAM ID np_create_global SEMI program_1 np_end_program
Rule 3     program_1 -> function program_1
Rule 4     program_1 -> main_block
Rule 5     vars -> vars_1
Rule 6     vars_1 -> LET vars_prima_1 vars_1
Rule 7     vars_1 -> LET vars_prima_1
Rule 8     vars_prima_1 -> ID COLON type np_add_vars SEMI
Rule 9     vars_prima_1 -> ID np_add_satck_vars COMMA vars_prima_1
Rule 10    type -> INT type_1
Rule 11    type -> FLOAT type_1
Rule 12    type -> CHAR type_1
Rule 13    type -> BOOL type_1
Rule 14    type_1 -> LBRACKET CTEI RBRACKET
Rule 15    type_1 -> epsilon
Rule 16    function -> FUNCTION ID COLON return_type np_create_new_scope LPAREN RPAREN np_set_func_start_point block np_end_function
Rule 17    function -> FUNCTION ID COLON return_type np_create_new_scope LPAREN params RPAREN np_set_func_start_point block np_end_function
Rule 18    function -> FUNCTION ID COLON return_type np_create_new_scope LPAREN RPAREN vars np_set_func_start_point block np_end_function
Rule 19    function -> FUNCTION ID COLON return_type np_create_new_scope LPAREN params RPAREN vars np_set_func_start_point block np_end_function
Rule 20    main_block -> MAIN np_create_main_scope LPAREN RPAREN block np_end_main
Rule 21    main_block -> MAIN np_create_main_scope LPAREN RPAREN vars block np_end_main
Rule 22    block -> LBRACE statements RBRACE
Rule 23    return_type -> VOID
Rule 24    return_type -> type
Rule 25    params -> ID COLON type np_add_vars np_add_params_type COMMA params
Rule 26    params -> ID COLON type np_add_vars np_add_params_type
Rule 27    statements -> void_function_call statements1
Rule 28    statements -> assignment statements1
Rule 29    statements -> condition statements1
Rule 30    statements -> writing statements1
Rule 31    statements -> reading statements1
Rule 32    statements -> repetition statements1
Rule 33    statements -> return statements1
Rule 34    special_functions -> mean
Rule 35    special_functions -> median
Rule 36    special_functions -> variance
Rule 37    special_functions -> p_variance
Rule 38    special_functions -> standard_deviation
Rule 39    special_functions -> p_standard_deviation
Rule 40    statements1 -> statements
Rule 41    statements1 -> epsilon
Rule 42    assignment -> ID np_add_id LBRACKET np_check_is_array expression np_verify_array_dim RBRACKET np_get_array_address EQUALS np_add_operator expression np_assign_expression SEMI
Rule 43    assignment -> ID np_add_id EQUALS np_add_operator expression np_assign_expression SEMI
Rule 44    condition -> IF LPAREN expression RPAREN np_condition_gotof block np_condition_end_gotof
Rule 45    condition -> IF LPAREN expression RPAREN np_condition_gotof block ELSE np_condition_goto_else block np_condition_end_gotof
Rule 46    expression -> exp
Rule 47    expression -> expression1 np_add_quadruple_logical
Rule 48    expression -> expression0 np_add_quadruple_or_and
Rule 49    expression0 -> expression AND np_add_operator expression
Rule 50    expression0 -> expression OR np_add_operator expression
Rule 51    expression1 -> exp LT np_add_operator exp
Rule 52    expression1 -> exp LE np_add_operator exp
Rule 53    expression1 -> exp GT np_add_operator exp
Rule 54    expression1 -> exp GE np_add_operator exp
Rule 55    expression1 -> exp EQ np_add_operator exp
Rule 56    expression1 -> exp NE np_add_operator exp
Rule 57    exp -> term np_add_quadruple_sum_min
Rule 58    exp -> term np_add_quadruple_sum_min exp_1
Rule 59    exp_1 -> PLUS np_add_operator exp
Rule 60    exp_1 -> MINUS np_add_operator exp
Rule 61    term -> factor np_add_quadruple_times_div
Rule 62    term -> factor np_add_quadruple_times_div term_2
Rule 63    term_2 -> TIMES np_add_operator term
Rule 64    term_2 -> DIVIDE np_add_operator term
Rule 65    factor -> LPAREN np_add_paren expression RPAREN np_pop_paren
Rule 66    factor -> ID np_add_id LBRACKET np_check_is_array expression np_verify_array_dim RBRACKET np_get_array_address
Rule 67    factor -> factor_prima_1
Rule 68    factor -> function_call
Rule 69    factor -> special_functions
Rule 70    factor_prima_1 -> PLUS varcte
Rule 71    factor_prima_1 -> MINUS np_set_as_negative varcte
Rule 72    factor_prima_1 -> varcte
Rule 73    varcte -> ID np_add_id
Rule 74    varcte -> CTEI np_add_cte_int
Rule 75    varcte -> CTEF np_add_cte_float
Rule 76    varcte -> CTEC np_add_cte_char
Rule 77    varcte -> TRUE np_add_cte_bool
Rule 78    varcte -> FALSE np_add_cte_bool
Rule 79    writing -> PRINT LPAREN writing_1 RPAREN SEMI
Rule 80    writing -> PRINTLN LPAREN writing_2 RPAREN SEMI
Rule 81    writing_1 -> expression np_add_print_quadruple_exp COMMA writing_1
Rule 82    writing_1 -> CTESTRING np_add_print_quadruple_str COMMA writing_1
Rule 83    writing_1 -> expression np_add_print_quadruple_exp
Rule 84    writing_1 -> CTESTRING np_add_print_quadruple_str
Rule 85    writing_2 -> expression np_add_println_quadruple_exp COMMA writing_2
Rule 86    writing_2 -> CTESTRING np_add_println_quadruple_str COMMA writing_2
Rule 87    writing_2 -> expression np_add_println_quadruple_exp
Rule 88    writing_2 -> CTESTRING np_add_println_quadruple_str
Rule 89    reading -> READ LPAREN reading_1 RPAREN np_add_read_quadruple SEMI
Rule 90    reading_1 -> ID np_add_id
Rule 91    reading_1 -> ID np_add_id LBRACKET np_check_is_array expression np_verify_array_dim RBRACKET np_get_array_address
Rule 92    repetition -> non_conditional_loop
Rule 93    repetition -> conditional_loop
Rule 94    conditional_loop -> WHILE np_while_init LPAREN expression RPAREN np_while_expression DO block np_while_end_block
Rule 95    non_conditional_loop -> FOR LPAREN ID np_add_id EQUALS np_add_operator expression np_assign_expression_for TO expression np_non_conditional_limit BY expression RPAREN block np_non_conditional_end
Rule 96    return -> RETURN expression np_add_return_quadruple SEMI
Rule 97    function_call -> ID LPAREN np_check_function_call np_function_end_params RPAREN
Rule 98    function_call -> ID LPAREN np_check_function_call function_call_1 np_function_end_params RPAREN
Rule 99    void_function_call -> ID LPAREN np_check_function_call np_function_end_params RPAREN SEMI
Rule 100   void_function_call -> ID LPAREN np_check_function_call function_call_1 np_function_end_params RPAREN SEMI
Rule 101   function_call_1 -> expression np_function_call_add_param
Rule 102   function_call_1 -> expression np_function_call_add_param COMMA function_call_1
Rule 103   mean -> MEAN LPAREN ID RPAREN np_add_mean_quadruple
Rule 104   median -> MEDIAN LPAREN ID RPAREN np_add_median_quadruple
Rule 105   variance -> VARIANCE LPAREN ID RPAREN np_add_variance_quadruple
Rule 106   p_variance -> PVARIANCE LPAREN ID RPAREN np_add_p_variance_quadruple
Rule 107   standard_deviation -> STDEV LPAREN ID RPAREN np_add_stdev_quadruple
Rule 108   p_standard_deviation -> PSTDEV LPAREN ID RPAREN np_add_p_stdev_quadruple
Rule 109   epsilon -> <empty>
Rule 110   np_create_global -> <empty>
Rule 111   np_create_main_scope -> <empty>
Rule 112   np_create_new_scope -> <empty>
Rule 113   np_add_satck_vars -> <empty>
Rule 114   np_add_vars -> <empty>
Rule 115   np_add_id -> <empty>
Rule 116   np_add_cte_int -> <empty>
Rule 117   np_add_cte_float -> <empty>
Rule 118   np_add_cte_char -> <empty>
Rule 119   np_add_cte_bool -> <empty>
Rule 120   np_set_as_negative -> <empty>
Rule 121   np_add_operator -> <empty>
Rule 122   np_add_paren -> <empty>
Rule 123   np_pop_paren -> <empty>
Rule 124   np_add_quadruple_sum_min -> <empty>
Rule 125   np_add_quadruple_times_div -> <empty>
Rule 126   np_add_quadruple_logical -> <empty>
Rule 127   np_add_quadruple_or_and -> <empty>
Rule 128   np_assign_expression -> <empty>
Rule 129   np_condition_gotof -> <empty>
Rule 130   np_condition_end_gotof -> <empty>
Rule 131   np_condition_goto_else -> <empty>
Rule 132   np_while_init -> <empty>
Rule 133   np_while_expression -> <empty>
Rule 134   np_while_end_block -> <empty>
Rule 135   np_assign_expression_for -> <empty>
Rule 136   np_non_conditional_limit -> <empty>
Rule 137   np_non_conditional_end -> <empty>
Rule 138   np_add_print_quadruple_str -> <empty>
Rule 139   np_add_print_quadruple_exp -> <empty>
Rule 140   np_add_println_quadruple_str -> <empty>
Rule 141   np_add_println_quadruple_exp -> <empty>
Rule 142   np_add_return_quadruple -> <empty>
Rule 143   np_add_params_type -> <empty>
Rule 144   np_set_func_start_point -> <empty>
Rule 145   np_end_function -> <empty>
Rule 146   np_end_main -> <empty>
Rule 147   np_end_program -> <empty>
Rule 148   np_check_function_call -> <empty>
Rule 149   np_function_call_add_param -> <empty>
Rule 150   np_function_end_params -> <empty>
Rule 151   np_check_is_array -> <empty>
Rule 152   np_verify_array_dim -> <empty>
Rule 153   np_get_array_address -> <empty>
Rule 154   np_add_read_quadruple -> <empty>
Rule 155   np_add_mean_quadruple -> <empty>
Rule 156   np_add_median_quadruple -> <empty>
Rule 157   np_add_variance_quadruple -> <empty>
Rule 158   np_add_p_variance_quadruple -> <empty>
Rule 159   np_add_stdev_quadruple -> <empty>
Rule 160   np_add_p_stdev_quadruple -> <empty>

Terminals, with rules where they appear

AND                  : 49
BOOL                 : 13
BY                   : 95
CHAR                 : 12
COLON                : 8 16 17 18 19 25 26
COMMA                : 9 25 81 82 85 86 102
CTEC                 : 76
CTEF                 : 75
CTEI                 : 14 74
CTESTRING            : 82 84 86 88
DIVIDE               : 64
DO                   : 94
ELSE                 : 45
EQ                   : 55
EQUALS               : 42 43 95
FALSE                : 78
FLOAT                : 11
FOR                  : 95
FUNCTION             : 16 17 18 19
GE                   : 54
GT                   : 53
ID                   : 1 2 8 9 16 17 18 19 25 26 42 43 66 73 90 91 95 97 98 99 100 103 104 105 106 107 108
IF                   : 44 45
INT                  : 10
LBRACE               : 22
LBRACKET             : 14 42 66 91
LE                   : 52
LET                  : 6 7
LPAREN               : 16 17 18 19 20 21 44 45 65 79 80 89 94 95 97 98 99 100 103 104 105 106 107 108
LT                   : 51
MAIN                 : 20 21
MEAN                 : 103
MEDIAN               : 104
MINUS                : 60 71
NE                   : 56
OR                   : 50
PLUS                 : 59 70
PRINT                : 79
PRINTLN              : 80
PROGRAM              : 1 2
PSTDEV               : 108
PVARIANCE            : 106
RBRACE               : 22
RBRACKET             : 14 42 66 91
READ                 : 89
RETURN               : 96
RPAREN               : 16 17 18 19 20 21 44 45 65 79 80 89 94 95 97 98 99 100 103 104 105 106 107 108
SEMI                 : 1 2 8 42 43 79 80 89 96 99 100
STDEV                : 107
TIMES                : 63
TO                   : 95
TRUE                 : 77
VARIANCE             : 105
VOID                 : 23
WHILE                : 94
error                : 

Nonterminals, with rules where they appear

assignment           : 28
block                : 16 17 18 19 20 21 44 45 45 94 95
condition            : 29
conditional_loop     : 93
epsilon              : 15 41
exp                  : 46 51 51 52 52 53 53 54 54 55 55 56 56 59 60
exp_1                : 58
expression           : 42 42 43 44 45 49 49 50 50 65 66 81 83 85 87 91 94 95 95 95 96 101 102
expression0          : 48
expression1          : 47
factor               : 61 62
factor_prima_1       : 67
function             : 3
function_call        : 68
function_call_1      : 98 100 102
main_block           : 4
mean                 : 34
median               : 35
non_conditional_loop : 92
np_add_cte_bool      : 77 78
np_add_cte_char      : 76
np_add_cte_float     : 75
np_add_cte_int       : 74
np_add_id            : 42 43 66 73 90 91 95
np_add_mean_quadruple : 103
np_add_median_quadruple : 104
np_add_operator      : 42 43 49 50 51 52 53 54 55 56 59 60 63 64 95
np_add_p_stdev_quadruple : 108
np_add_p_variance_quadruple : 106
np_add_params_type   : 25 26
np_add_paren         : 65
np_add_print_quadruple_exp : 81 83
np_add_print_quadruple_str : 82 84
np_add_println_quadruple_exp : 85 87
np_add_println_quadruple_str : 86 88
np_add_quadruple_logical : 47
np_add_quadruple_or_and : 48
np_add_quadruple_sum_min : 57 58
np_add_quadruple_times_div : 61 62
np_add_read_quadruple : 89
np_add_return_quadruple : 96
np_add_satck_vars    : 9
np_add_stdev_quadruple : 107
np_add_variance_quadruple : 105
np_add_vars          : 8 25 26
np_assign_expression : 42 43
np_assign_expression_for : 95
np_check_function_call : 97 98 99 100
np_check_is_array    : 42 66 91
np_condition_end_gotof : 44 45
np_condition_goto_else : 45
np_condition_gotof   : 44 45
np_create_global     : 1 2
np_create_main_scope : 20 21
np_create_new_scope  : 16 17 18 19
np_end_function      : 16 17 18 19
np_end_main          : 20 21
np_end_program       : 1 2
np_function_call_add_param : 101 102
np_function_end_params : 97 98 99 100
np_get_array_address : 42 66 91
np_non_conditional_end : 95
np_non_conditional_limit : 95
np_pop_paren         : 65
np_set_as_negative   : 71
np_set_func_start_point : 16 17 18 19
np_verify_array_dim  : 42 66 91
np_while_end_block   : 94
np_while_expression  : 94
np_while_init        : 94
p_standard_deviation : 39
p_variance           : 37
params               : 17 19 25
program              : 0
program_1            : 1 2 3
reading              : 31
reading_1            : 89
repetition           : 32
return               : 33
return_type          : 16 17 18 19
special_functions    : 69
standard_deviation   : 38
statements           : 22 40
statements1          : 27 28 29 30 31 32 33
term                 : 57 58 63 64
term_2               : 62
type                 : 8 24 25 26
type_1               : 10 11 12 13
varcte               : 70 71 72
variance             : 36
vars                 : 1 18 19 21
vars_1               : 5 6
vars_prima_1         : 6 7 9
void_function_call   : 27
writing              : 30
writing_1            : 79 81 82
writing_2            : 80 85 86

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID np_create_global SEMI vars program_1 np_end_program
    (2) program -> . PROGRAM ID np_create_global SEMI program_1 np_end_program

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID np_create_global SEMI vars program_1 np_end_program
    (2) program -> PROGRAM . ID np_create_global SEMI program_1 np_end_program

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . np_create_global SEMI vars program_1 np_end_program
    (2) program -> PROGRAM ID . np_create_global SEMI program_1 np_end_program
    (110) np_create_global -> .

    SEMI            reduce using rule 110 (np_create_global -> .)

    np_create_global               shift and go to state 4

state 4

    (1) program -> PROGRAM ID np_create_global . SEMI vars program_1 np_end_program
    (2) program -> PROGRAM ID np_create_global . SEMI program_1 np_end_program

    SEMI            shift and go to state 5


state 5

    (1) program -> PROGRAM ID np_create_global SEMI . vars program_1 np_end_program
    (2) program -> PROGRAM ID np_create_global SEMI . program_1 np_end_program
    (5) vars -> . vars_1
    (3) program_1 -> . function program_1
    (4) program_1 -> . main_block
    (6) vars_1 -> . LET vars_prima_1 vars_1
    (7) vars_1 -> . LET vars_prima_1
    (16) function -> . FUNCTION ID COLON return_type np_create_new_scope LPAREN RPAREN np_set_func_start_point block np_end_function
    (17) function -> . FUNCTION ID COLON return_type np_create_new_scope LPAREN params RPAREN np_set_func_start_point block np_end_function
    (18) function -> . FUNCTION ID COLON return_type np_create_new_scope LPAREN RPAREN vars np_set_func_start_point block np_end_function
    (19) function -> . FUNCTION ID COLON return_type np_create_new_scope LPAREN params RPAREN vars np_set_func_start_point block np_end_function
    (20) main_block -> . MAIN np_create_main_scope LPAREN RPAREN block np_end_main
    (21) main_block -> . MAIN np_create_main_scope LPAREN RPAREN vars block np_end_main

    LET             shift and go to state 11
    FUNCTION        shift and go to state 12
    MAIN            shift and go to state 13

    vars                           shift and go to state 6
    program_1                      shift and go to state 7
    vars_1                         shift and go to state 8
    function                       shift and go to state 9
    main_block                     shift and go to state 10

state 6

    (1) program -> PROGRAM ID np_create_global SEMI vars . program_1 np_end_program
    (3) program_1 -> . function program_1
    (4) program_1 -> . main_block
    (16) function -> . FUNCTION ID COLON return_type np_create_new_scope LPAREN RPAREN np_set_func_start_point block np_end_function
    (17) function -> . FUNCTION ID COLON return_type np_create_new_scope LPAREN params RPAREN np_set_func_start_point block np_end_function
    (18) function -> . FUNCTION ID COLON return_type np_create_new_scope LPAREN RPAREN vars np_set_func_start_point block np_end_function
    (19) function -> . FUNCTION ID COLON return_type np_create_new_scope LPAREN params RPAREN vars np_set_func_start_point block np_end_function
    (20) main_block -> . MAIN np_create_main_scope LPAREN RPAREN block np_end_main
    (21) main_block -> . MAIN np_create_main_scope LPAREN RPAREN vars block np_end_main

    FUNCTION        shift and go to state 12
    MAIN            shift and go to state 13

    program_1                      shift and go to state 14
    function                       shift and go to state 9
    main_block                     shift and go to state 10

state 7

    (2) program -> PROGRAM ID np_create_global SEMI program_1 . np_end_program
    (147) np_end_program -> .

    $end            reduce using rule 147 (np_end_program -> .)

    np_end_program                 shift and go to state 15

state 8

    (5) vars -> vars_1 .

    FUNCTION        reduce using rule 5 (vars -> vars_1 .)
    MAIN            reduce using rule 5 (vars -> vars_1 .)
    LBRACE          reduce using rule 5 (vars -> vars_1 .)


state 9

    (3) program_1 -> function . program_1
    (3) program_1 -> . function program_1
    (4) program_1 -> . main_block
    (16) function -> . FUNCTION ID COLON return_type np_create_new_scope LPAREN RPAREN np_set_func_start_point block np_end_function
    (17) function -> . FUNCTION ID COLON return_type np_create_new_scope LPAREN params RPAREN np_set_func_start_point block np_end_function
    (18) function -> . FUNCTION ID COLON return_type np_create_new_scope LPAREN RPAREN vars np_set_func_start_point block np_end_function
    (19) function -> . FUNCTION ID COLON return_type np_create_new_scope LPAREN params RPAREN vars np_set_func_start_point block np_end_function
    (20) main_block -> . MAIN np_create_main_scope LPAREN RPAREN block np_end_main
    (21) main_block -> . MAIN np_create_main_scope LPAREN RPAREN vars block np_end_main

    FUNCTION        shift and go to state 12
    MAIN            shift and go to state 13

    function                       shift and go to state 9
    program_1                      shift and go to state 16
    main_block                     shift and go to state 10

state 10

    (4) program_1 -> main_block .

    $end            reduce using rule 4 (program_1 -> main_block .)


state 11

    (6) vars_1 -> LET . vars_prima_1 vars_1
    (7) vars_1 -> LET . vars_prima_1
    (8) vars_prima_1 -> . ID COLON type np_add_vars SEMI
    (9) vars_prima_1 -> . ID np_add_satck_vars COMMA vars_prima_1

    ID              shift and go to state 18

    vars_prima_1                   shift and go to state 17

state 12

    (16) function -> FUNCTION . ID COLON return_type np_create_new_scope LPAREN RPAREN np_set_func_start_point block np_end_function
    (17) function -> FUNCTION . ID COLON return_type np_create_new_scope LPAREN params RPAREN np_set_func_start_point block np_end_function
    (18) function -> FUNCTION . ID COLON return_type np_create_new_scope LPAREN RPAREN vars np_set_func_start_point block np_end_function
    (19) function -> FUNCTION . ID COLON return_type np_create_new_scope LPAREN params RPAREN vars np_set_func_start_point block np_end_function

    ID              shift and go to state 19


state 13

    (20) main_block -> MAIN . np_create_main_scope LPAREN RPAREN block np_end_main
    (21) main_block -> MAIN . np_create_main_scope LPAREN RPAREN vars block np_end_main
    (111) np_create_main_scope -> .

    LPAREN          reduce using rule 111 (np_create_main_scope -> .)

    np_create_main_scope           shift and go to state 20

state 14

    (1) program -> PROGRAM ID np_create_global SEMI vars program_1 . np_end_program
    (147) np_end_program -> .

    $end            reduce using rule 147 (np_end_program -> .)

    np_end_program                 shift and go to state 21

state 15

    (2) program -> PROGRAM ID np_create_global SEMI program_1 np_end_program .

    $end            reduce using rule 2 (program -> PROGRAM ID np_create_global SEMI program_1 np_end_program .)


state 16

    (3) program_1 -> function program_1 .

    $end            reduce using rule 3 (program_1 -> function program_1 .)


state 17

    (6) vars_1 -> LET vars_prima_1 . vars_1
    (7) vars_1 -> LET vars_prima_1 .
    (6) vars_1 -> . LET vars_prima_1 vars_1
    (7) vars_1 -> . LET vars_prima_1

    FUNCTION        reduce using rule 7 (vars_1 -> LET vars_prima_1 .)
    MAIN            reduce using rule 7 (vars_1 -> LET vars_prima_1 .)
    LBRACE          reduce using rule 7 (vars_1 -> LET vars_prima_1 .)
    LET             shift and go to state 11

    vars_1                         shift and go to state 22

state 18

    (8) vars_prima_1 -> ID . COLON type np_add_vars SEMI
    (9) vars_prima_1 -> ID . np_add_satck_vars COMMA vars_prima_1
    (113) np_add_satck_vars -> .

    COLON           shift and go to state 23
    COMMA           reduce using rule 113 (np_add_satck_vars -> .)

    np_add_satck_vars              shift and go to state 24

state 19

    (16) function -> FUNCTION ID . COLON return_type np_create_new_scope LPAREN RPAREN np_set_func_start_point block np_end_function
    (17) function -> FUNCTION ID . COLON return_type np_create_new_scope LPAREN params RPAREN np_set_func_start_point block np_end_function
    (18) function -> FUNCTION ID . COLON return_type np_create_new_scope LPAREN RPAREN vars np_set_func_start_point block np_end_function
    (19) function -> FUNCTION ID . COLON return_type np_create_new_scope LPAREN params RPAREN vars np_set_func_start_point block np_end_function

    COLON           shift and go to state 25


state 20

    (20) main_block -> MAIN np_create_main_scope . LPAREN RPAREN block np_end_main
    (21) main_block -> MAIN np_create_main_scope . LPAREN RPAREN vars block np_end_main

    LPAREN          shift and go to state 26


state 21

    (1) program -> PROGRAM ID np_create_global SEMI vars program_1 np_end_program .

    $end            reduce using rule 1 (program -> PROGRAM ID np_create_global SEMI vars program_1 np_end_program .)


state 22

    (6) vars_1 -> LET vars_prima_1 vars_1 .

    FUNCTION        reduce using rule 6 (vars_1 -> LET vars_prima_1 vars_1 .)
    MAIN            reduce using rule 6 (vars_1 -> LET vars_prima_1 vars_1 .)
    LBRACE          reduce using rule 6 (vars_1 -> LET vars_prima_1 vars_1 .)


state 23

    (8) vars_prima_1 -> ID COLON . type np_add_vars SEMI
    (10) type -> . INT type_1
    (11) type -> . FLOAT type_1
    (12) type -> . CHAR type_1
    (13) type -> . BOOL type_1

    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    CHAR            shift and go to state 30
    BOOL            shift and go to state 31

    type                           shift and go to state 27

state 24

    (9) vars_prima_1 -> ID np_add_satck_vars . COMMA vars_prima_1

    COMMA           shift and go to state 32


state 25

    (16) function -> FUNCTION ID COLON . return_type np_create_new_scope LPAREN RPAREN np_set_func_start_point block np_end_function
    (17) function -> FUNCTION ID COLON . return_type np_create_new_scope LPAREN params RPAREN np_set_func_start_point block np_end_function
    (18) function -> FUNCTION ID COLON . return_type np_create_new_scope LPAREN RPAREN vars np_set_func_start_point block np_end_function
    (19) function -> FUNCTION ID COLON . return_type np_create_new_scope LPAREN params RPAREN vars np_set_func_start_point block np_end_function
    (23) return_type -> . VOID
    (24) return_type -> . type
    (10) type -> . INT type_1
    (11) type -> . FLOAT type_1
    (12) type -> . CHAR type_1
    (13) type -> . BOOL type_1

    VOID            shift and go to state 34
    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    CHAR            shift and go to state 30
    BOOL            shift and go to state 31

    return_type                    shift and go to state 33
    type                           shift and go to state 35

state 26

    (20) main_block -> MAIN np_create_main_scope LPAREN . RPAREN block np_end_main
    (21) main_block -> MAIN np_create_main_scope LPAREN . RPAREN vars block np_end_main

    RPAREN          shift and go to state 36


state 27

    (8) vars_prima_1 -> ID COLON type . np_add_vars SEMI
    (114) np_add_vars -> .

    SEMI            reduce using rule 114 (np_add_vars -> .)

    np_add_vars                    shift and go to state 37

state 28

    (10) type -> INT . type_1
    (14) type_1 -> . LBRACKET CTEI RBRACKET
    (15) type_1 -> . epsilon
    (109) epsilon -> .

    LBRACKET        shift and go to state 39
    SEMI            reduce using rule 109 (epsilon -> .)
    LPAREN          reduce using rule 109 (epsilon -> .)
    COMMA           reduce using rule 109 (epsilon -> .)
    RPAREN          reduce using rule 109 (epsilon -> .)

    type_1                         shift and go to state 38
    epsilon                        shift and go to state 40

state 29

    (11) type -> FLOAT . type_1
    (14) type_1 -> . LBRACKET CTEI RBRACKET
    (15) type_1 -> . epsilon
    (109) epsilon -> .

    LBRACKET        shift and go to state 39
    SEMI            reduce using rule 109 (epsilon -> .)
    LPAREN          reduce using rule 109 (epsilon -> .)
    COMMA           reduce using rule 109 (epsilon -> .)
    RPAREN          reduce using rule 109 (epsilon -> .)

    type_1                         shift and go to state 41
    epsilon                        shift and go to state 40

state 30

    (12) type -> CHAR . type_1
    (14) type_1 -> . LBRACKET CTEI RBRACKET
    (15) type_1 -> . epsilon
    (109) epsilon -> .

    LBRACKET        shift and go to state 39
    SEMI            reduce using rule 109 (epsilon -> .)
    LPAREN          reduce using rule 109 (epsilon -> .)
    COMMA           reduce using rule 109 (epsilon -> .)
    RPAREN          reduce using rule 109 (epsilon -> .)

    type_1                         shift and go to state 42
    epsilon                        shift and go to state 40

state 31

    (13) type -> BOOL . type_1
    (14) type_1 -> . LBRACKET CTEI RBRACKET
    (15) type_1 -> . epsilon
    (109) epsilon -> .

    LBRACKET        shift and go to state 39
    SEMI            reduce using rule 109 (epsilon -> .)
    LPAREN          reduce using rule 109 (epsilon -> .)
    COMMA           reduce using rule 109 (epsilon -> .)
    RPAREN          reduce using rule 109 (epsilon -> .)

    type_1                         shift and go to state 43
    epsilon                        shift and go to state 40

state 32

    (9) vars_prima_1 -> ID np_add_satck_vars COMMA . vars_prima_1
    (8) vars_prima_1 -> . ID COLON type np_add_vars SEMI
    (9) vars_prima_1 -> . ID np_add_satck_vars COMMA vars_prima_1

    ID              shift and go to state 18

    vars_prima_1                   shift and go to state 44

state 33

    (16) function -> FUNCTION ID COLON return_type . np_create_new_scope LPAREN RPAREN np_set_func_start_point block np_end_function
    (17) function -> FUNCTION ID COLON return_type . np_create_new_scope LPAREN params RPAREN np_set_func_start_point block np_end_function
    (18) function -> FUNCTION ID COLON return_type . np_create_new_scope LPAREN RPAREN vars np_set_func_start_point block np_end_function
    (19) function -> FUNCTION ID COLON return_type . np_create_new_scope LPAREN params RPAREN vars np_set_func_start_point block np_end_function
    (112) np_create_new_scope -> .

    LPAREN          reduce using rule 112 (np_create_new_scope -> .)

    np_create_new_scope            shift and go to state 45

state 34

    (23) return_type -> VOID .

    LPAREN          reduce using rule 23 (return_type -> VOID .)


state 35

    (24) return_type -> type .

    LPAREN          reduce using rule 24 (return_type -> type .)


state 36

    (20) main_block -> MAIN np_create_main_scope LPAREN RPAREN . block np_end_main
    (21) main_block -> MAIN np_create_main_scope LPAREN RPAREN . vars block np_end_main
    (22) block -> . LBRACE statements RBRACE
    (5) vars -> . vars_1
    (6) vars_1 -> . LET vars_prima_1 vars_1
    (7) vars_1 -> . LET vars_prima_1

    LBRACE          shift and go to state 48
    LET             shift and go to state 11

    block                          shift and go to state 46
    vars                           shift and go to state 47
    vars_1                         shift and go to state 8

state 37

    (8) vars_prima_1 -> ID COLON type np_add_vars . SEMI

    SEMI            shift and go to state 49


state 38

    (10) type -> INT type_1 .

    SEMI            reduce using rule 10 (type -> INT type_1 .)
    LPAREN          reduce using rule 10 (type -> INT type_1 .)
    COMMA           reduce using rule 10 (type -> INT type_1 .)
    RPAREN          reduce using rule 10 (type -> INT type_1 .)


state 39

    (14) type_1 -> LBRACKET . CTEI RBRACKET

    CTEI            shift and go to state 50


state 40

    (15) type_1 -> epsilon .

    SEMI            reduce using rule 15 (type_1 -> epsilon .)
    LPAREN          reduce using rule 15 (type_1 -> epsilon .)
    COMMA           reduce using rule 15 (type_1 -> epsilon .)
    RPAREN          reduce using rule 15 (type_1 -> epsilon .)


state 41

    (11) type -> FLOAT type_1 .

    SEMI            reduce using rule 11 (type -> FLOAT type_1 .)
    LPAREN          reduce using rule 11 (type -> FLOAT type_1 .)
    COMMA           reduce using rule 11 (type -> FLOAT type_1 .)
    RPAREN          reduce using rule 11 (type -> FLOAT type_1 .)


state 42

    (12) type -> CHAR type_1 .

    SEMI            reduce using rule 12 (type -> CHAR type_1 .)
    LPAREN          reduce using rule 12 (type -> CHAR type_1 .)
    COMMA           reduce using rule 12 (type -> CHAR type_1 .)
    RPAREN          reduce using rule 12 (type -> CHAR type_1 .)


state 43

    (13) type -> BOOL type_1 .

    SEMI            reduce using rule 13 (type -> BOOL type_1 .)
    LPAREN          reduce using rule 13 (type -> BOOL type_1 .)
    COMMA           reduce using rule 13 (type -> BOOL type_1 .)
    RPAREN          reduce using rule 13 (type -> BOOL type_1 .)


state 44

    (9) vars_prima_1 -> ID np_add_satck_vars COMMA vars_prima_1 .

    LET             reduce using rule 9 (vars_prima_1 -> ID np_add_satck_vars COMMA vars_prima_1 .)
    FUNCTION        reduce using rule 9 (vars_prima_1 -> ID np_add_satck_vars COMMA vars_prima_1 .)
    MAIN            reduce using rule 9 (vars_prima_1 -> ID np_add_satck_vars COMMA vars_prima_1 .)
    LBRACE          reduce using rule 9 (vars_prima_1 -> ID np_add_satck_vars COMMA vars_prima_1 .)


state 45

    (16) function -> FUNCTION ID COLON return_type np_create_new_scope . LPAREN RPAREN np_set_func_start_point block np_end_function
    (17) function -> FUNCTION ID COLON return_type np_create_new_scope . LPAREN params RPAREN np_set_func_start_point block np_end_function
    (18) function -> FUNCTION ID COLON return_type np_create_new_scope . LPAREN RPAREN vars np_set_func_start_point block np_end_function
    (19) function -> FUNCTION ID COLON return_type np_create_new_scope . LPAREN params RPAREN vars np_set_func_start_point block np_end_function

    LPAREN          shift and go to state 51


state 46

    (20) main_block -> MAIN np_create_main_scope LPAREN RPAREN block . np_end_main
    (146) np_end_main -> .

    $end            reduce using rule 146 (np_end_main -> .)

    np_end_main                    shift and go to state 52

state 47

    (21) main_block -> MAIN np_create_main_scope LPAREN RPAREN vars . block np_end_main
    (22) block -> . LBRACE statements RBRACE

    LBRACE          shift and go to state 48

    block                          shift and go to state 53

state 48

    (22) block -> LBRACE . statements RBRACE
    (27) statements -> . void_function_call statements1
    (28) statements -> . assignment statements1
    (29) statements -> . condition statements1
    (30) statements -> . writing statements1
    (31) statements -> . reading statements1
    (32) statements -> . repetition statements1
    (33) statements -> . return statements1
    (99) void_function_call -> . ID LPAREN np_check_function_call np_function_end_params RPAREN SEMI
    (100) void_function_call -> . ID LPAREN np_check_function_call function_call_1 np_function_end_params RPAREN SEMI
    (42) assignment -> . ID np_add_id LBRACKET np_check_is_array expression np_verify_array_dim RBRACKET np_get_array_address EQUALS np_add_operator expression np_assign_expression SEMI
    (43) assignment -> . ID np_add_id EQUALS np_add_operator expression np_assign_expression SEMI
    (44) condition -> . IF LPAREN expression RPAREN np_condition_gotof block np_condition_end_gotof
    (45) condition -> . IF LPAREN expression RPAREN np_condition_gotof block ELSE np_condition_goto_else block np_condition_end_gotof
    (79) writing -> . PRINT LPAREN writing_1 RPAREN SEMI
    (80) writing -> . PRINTLN LPAREN writing_2 RPAREN SEMI
    (89) reading -> . READ LPAREN reading_1 RPAREN np_add_read_quadruple SEMI
    (92) repetition -> . non_conditional_loop
    (93) repetition -> . conditional_loop
    (96) return -> . RETURN expression np_add_return_quadruple SEMI
    (95) non_conditional_loop -> . FOR LPAREN ID np_add_id EQUALS np_add_operator expression np_assign_expression_for TO expression np_non_conditional_limit BY expression RPAREN block np_non_conditional_end
    (94) conditional_loop -> . WHILE np_while_init LPAREN expression RPAREN np_while_expression DO block np_while_end_block

    ID              shift and go to state 62
    IF              shift and go to state 63
    PRINT           shift and go to state 64
    PRINTLN         shift and go to state 65
    READ            shift and go to state 66
    RETURN          shift and go to state 69
    FOR             shift and go to state 70
    WHILE           shift and go to state 71

    statements                     shift and go to state 54
    void_function_call             shift and go to state 55
    assignment                     shift and go to state 56
    condition                      shift and go to state 57
    writing                        shift and go to state 58
    reading                        shift and go to state 59
    repetition                     shift and go to state 60
    return                         shift and go to state 61
    non_conditional_loop           shift and go to state 67
    conditional_loop               shift and go to state 68

state 49

    (8) vars_prima_1 -> ID COLON type np_add_vars SEMI .

    LET             reduce using rule 8 (vars_prima_1 -> ID COLON type np_add_vars SEMI .)
    FUNCTION        reduce using rule 8 (vars_prima_1 -> ID COLON type np_add_vars SEMI .)
    MAIN            reduce using rule 8 (vars_prima_1 -> ID COLON type np_add_vars SEMI .)
    LBRACE          reduce using rule 8 (vars_prima_1 -> ID COLON type np_add_vars SEMI .)


state 50

    (14) type_1 -> LBRACKET CTEI . RBRACKET

    RBRACKET        shift and go to state 72


state 51

    (16) function -> FUNCTION ID COLON return_type np_create_new_scope LPAREN . RPAREN np_set_func_start_point block np_end_function
    (17) function -> FUNCTION ID COLON return_type np_create_new_scope LPAREN . params RPAREN np_set_func_start_point block np_end_function
    (18) function -> FUNCTION ID COLON return_type np_create_new_scope LPAREN . RPAREN vars np_set_func_start_point block np_end_function
    (19) function -> FUNCTION ID COLON return_type np_create_new_scope LPAREN . params RPAREN vars np_set_func_start_point block np_end_function
    (25) params -> . ID COLON type np_add_vars np_add_params_type COMMA params
    (26) params -> . ID COLON type np_add_vars np_add_params_type

    RPAREN          shift and go to state 74
    ID              shift and go to state 73

    params                         shift and go to state 75

state 52

    (20) main_block -> MAIN np_create_main_scope LPAREN RPAREN block np_end_main .

    $end            reduce using rule 20 (main_block -> MAIN np_create_main_scope LPAREN RPAREN block np_end_main .)


state 53

    (21) main_block -> MAIN np_create_main_scope LPAREN RPAREN vars block . np_end_main
    (146) np_end_main -> .

    $end            reduce using rule 146 (np_end_main -> .)

    np_end_main                    shift and go to state 76

state 54

    (22) block -> LBRACE statements . RBRACE

    RBRACE          shift and go to state 77


state 55

    (27) statements -> void_function_call . statements1
    (40) statements1 -> . statements
    (41) statements1 -> . epsilon
    (27) statements -> . void_function_call statements1
    (28) statements -> . assignment statements1
    (29) statements -> . condition statements1
    (30) statements -> . writing statements1
    (31) statements -> . reading statements1
    (32) statements -> . repetition statements1
    (33) statements -> . return statements1
    (109) epsilon -> .
    (99) void_function_call -> . ID LPAREN np_check_function_call np_function_end_params RPAREN SEMI
    (100) void_function_call -> . ID LPAREN np_check_function_call function_call_1 np_function_end_params RPAREN SEMI
    (42) assignment -> . ID np_add_id LBRACKET np_check_is_array expression np_verify_array_dim RBRACKET np_get_array_address EQUALS np_add_operator expression np_assign_expression SEMI
    (43) assignment -> . ID np_add_id EQUALS np_add_operator expression np_assign_expression SEMI
    (44) condition -> . IF LPAREN expression RPAREN np_condition_gotof block np_condition_end_gotof
    (45) condition -> . IF LPAREN expression RPAREN np_condition_gotof block ELSE np_condition_goto_else block np_condition_end_gotof
    (79) writing -> . PRINT LPAREN writing_1 RPAREN SEMI
    (80) writing -> . PRINTLN LPAREN writing_2 RPAREN SEMI
    (89) reading -> . READ LPAREN reading_1 RPAREN np_add_read_quadruple SEMI
    (92) repetition -> . non_conditional_loop
    (93) repetition -> . conditional_loop
    (96) return -> . RETURN expression np_add_return_quadruple SEMI
    (95) non_conditional_loop -> . FOR LPAREN ID np_add_id EQUALS np_add_operator expression np_assign_expression_for TO expression np_non_conditional_limit BY expression RPAREN block np_non_conditional_end
    (94) conditional_loop -> . WHILE np_while_init LPAREN expression RPAREN np_while_expression DO block np_while_end_block

    RBRACE          reduce using rule 109 (epsilon -> .)
    ID              shift and go to state 62
    IF              shift and go to state 63
    PRINT           shift and go to state 64
    PRINTLN         shift and go to state 65
    READ            shift and go to state 66
    RETURN          shift and go to state 69
    FOR             shift and go to state 70
    WHILE           shift and go to state 71

    void_function_call             shift and go to state 55
    statements1                    shift and go to state 78
    statements                     shift and go to state 79
    epsilon                        shift and go to state 80
    assignment                     shift and go to state 56
    condition                      shift and go to state 57
    writing                        shift and go to state 58
    reading                        shift and go to state 59
    repetition                     shift and go to state 60
    return                         shift and go to state 61
    non_conditional_loop           shift and go to state 67
    conditional_loop               shift and go to state 68

state 56

    (28) statements -> assignment . statements1
    (40) statements1 -> . statements
    (41) statements1 -> . epsilon
    (27) statements -> . void_function_call statements1
    (28) statements -> . assignment statements1
    (29) statements -> . condition statements1
    (30) statements -> . writing statements1
    (31) statements -> . reading statements1
    (32) statements -> . repetition statements1
    (33) statements -> . return statements1
    (109) epsilon -> .
    (99) void_function_call -> . ID LPAREN np_check_function_call np_function_end_params RPAREN SEMI
    (100) void_function_call -> . ID LPAREN np_check_function_call function_call_1 np_function_end_params RPAREN SEMI
    (42) assignment -> . ID np_add_id LBRACKET np_check_is_array expression np_verify_array_dim RBRACKET np_get_array_address EQUALS np_add_operator expression np_assign_expression SEMI
    (43) assignment -> . ID np_add_id EQUALS np_add_operator expression np_assign_expression SEMI
    (44) condition -> . IF LPAREN expression RPAREN np_condition_gotof block np_condition_end_gotof
    (45) condition -> . IF LPAREN expression RPAREN np_condition_gotof block ELSE np_condition_goto_else block np_condition_end_gotof
    (79) writing -> . PRINT LPAREN writing_1 RPAREN SEMI
    (80) writing -> . PRINTLN LPAREN writing_2 RPAREN SEMI
    (89) reading -> . READ LPAREN reading_1 RPAREN np_add_read_quadruple SEMI
    (92) repetition -> . non_conditional_loop
    (93) repetition -> . conditional_loop
    (96) return -> . RETURN expression np_add_return_quadruple SEMI
    (95) non_conditional_loop -> . FOR LPAREN ID np_add_id EQUALS np_add_operator expression np_assign_expression_for TO expression np_non_conditional_limit BY expression RPAREN block np_non_conditional_end
    (94) conditional_loop -> . WHILE np_while_init LPAREN expression RPAREN np_while_expression DO block np_while_end_block

    RBRACE          reduce using rule 109 (epsilon -> .)
    ID              shift and go to state 62
    IF              shift and go to state 63
    PRINT           shift and go to state 64
    PRINTLN         shift and go to state 65
    READ            shift and go to state 66
    RETURN          shift and go to state 69
    FOR             shift and go to state 70
    WHILE           shift and go to state 71

    assignment                     shift and go to state 56
    statements1                    shift and go to state 81
    statements                     shift and go to state 79
    epsilon                        shift and go to state 80
    void_function_call             shift and go to state 55
    condition                      shift and go to state 57
    writing                        shift and go to state 58
    reading                        shift and go to state 59
    repetition                     shift and go to state 60
    return                         shift and go to state 61
    non_conditional_loop           shift and go to state 67
    conditional_loop               shift and go to state 68

state 57

    (29) statements -> condition . statements1
    (40) statements1 -> . statements
    (41) statements1 -> . epsilon
    (27) statements -> . void_function_call statements1
    (28) statements -> . assignment statements1
    (29) statements -> . condition statements1
    (30) statements -> . writing statements1
    (31) statements -> . reading statements1
    (32) statements -> . repetition statements1
    (33) statements -> . return statements1
    (109) epsilon -> .
    (99) void_function_call -> . ID LPAREN np_check_function_call np_function_end_params RPAREN SEMI
    (100) void_function_call -> . ID LPAREN np_check_function_call function_call_1 np_function_end_params RPAREN SEMI
    (42) assignment -> . ID np_add_id LBRACKET np_check_is_array expression np_verify_array_dim RBRACKET np_get_array_address EQUALS np_add_operator expression np_assign_expression SEMI
    (43) assignment -> . ID np_add_id EQUALS np_add_operator expression np_assign_expression SEMI
    (44) condition -> . IF LPAREN expression RPAREN np_condition_gotof block np_condition_end_gotof
    (45) condition -> . IF LPAREN expression RPAREN np_condition_gotof block ELSE np_condition_goto_else block np_condition_end_gotof
    (79) writing -> . PRINT LPAREN writing_1 RPAREN SEMI
    (80) writing -> . PRINTLN LPAREN writing_2 RPAREN SEMI
    (89) reading -> . READ LPAREN reading_1 RPAREN np_add_read_quadruple SEMI
    (92) repetition -> . non_conditional_loop
    (93) repetition -> . conditional_loop
    (96) return -> . RETURN expression np_add_return_quadruple SEMI
    (95) non_conditional_loop -> . FOR LPAREN ID np_add_id EQUALS np_add_operator expression np_assign_expression_for TO expression np_non_conditional_limit BY expression RPAREN block np_non_conditional_end
    (94) conditional_loop -> . WHILE np_while_init LPAREN expression RPAREN np_while_expression DO block np_while_end_block

    RBRACE          reduce using rule 109 (epsilon -> .)
    ID              shift and go to state 62
    IF              shift and go to state 63
    PRINT           shift and go to state 64
    PRINTLN         shift and go to state 65
    READ            shift and go to state 66
    RETURN          shift and go to state 69
    FOR             shift and go to state 70
    WHILE           shift and go to state 71

    condition                      shift and go to state 57
    statements1                    shift and go to state 82
    statements                     shift and go to state 79
    epsilon                        shift and go to state 80
    void_function_call             shift and go to state 55
    assignment                     shift and go to state 56
    writing                        shift and go to state 58
    reading                        shift and go to state 59
    repetition                     shift and go to state 60
    return                         shift and go to state 61
    non_conditional_loop           shift and go to state 67
    conditional_loop               shift and go to state 68

state 58

    (30) statements -> writing . statements1
    (40) statements1 -> . statements
    (41) statements1 -> . epsilon
    (27) statements -> . void_function_call statements1
    (28) statements -> . assignment statements1
    (29) statements -> . condition statements1
    (30) statements -> . writing statements1
    (31) statements -> . reading statements1
    (32) statements -> . repetition statements1
    (33) statements -> . return statements1
    (109) epsilon -> .
    (99) void_function_call -> . ID LPAREN np_check_function_call np_function_end_params RPAREN SEMI
    (100) void_function_call -> . ID LPAREN np_check_function_call function_call_1 np_function_end_params RPAREN SEMI
    (42) assignment -> . ID np_add_id LBRACKET np_check_is_array expression np_verify_array_dim RBRACKET np_get_array_address EQUALS np_add_operator expression np_assign_expression SEMI
    (43) assignment -> . ID np_add_id EQUALS np_add_operator expression np_assign_expression SEMI
    (44) condition -> . IF LPAREN expression RPAREN np_condition_gotof block np_condition_end_gotof
    (45) condition -> . IF LPAREN expression RPAREN np_condition_gotof block ELSE np_condition_goto_else block np_condition_end_gotof
    (79) writing -> . PRINT LPAREN writing_1 RPAREN SEMI
    (80) writing -> . PRINTLN LPAREN writing_2 RPAREN SEMI
    (89) reading -> . READ LPAREN reading_1 RPAREN np_add_read_quadruple SEMI
    (92) repetition -> . non_conditional_loop
    (93) repetition -> . conditional_loop
    (96) return -> . RETURN expression np_add_return_quadruple SEMI
    (95) non_conditional_loop -> . FOR LPAREN ID np_add_id EQUALS np_add_operator expression np_assign_expression_for TO expression np_non_conditional_limit BY expression RPAREN block np_non_conditional_end
    (94) conditional_loop -> . WHILE np_while_init LPAREN expression RPAREN np_while_expression DO block np_while_end_block

    RBRACE          reduce using rule 109 (epsilon -> .)
    ID              shift and go to state 62
    IF              shift and go to state 63
    PRINT           shift and go to state 64
    PRINTLN         shift and go to state 65
    READ            shift and go to state 66
    RETURN          shift and go to state 69
    FOR             shift and go to state 70
    WHILE           shift and go to state 71

    writing                        shift and go to state 58
    statements1                    shift and go to state 83
    statements                     shift and go to state 79
    epsilon                        shift and go to state 80
    void_function_call             shift and go to state 55
    assignment                     shift and go to state 56
    condition                      shift and go to state 57
    reading                        shift and go to state 59
    repetition                     shift and go to state 60
    return                         shift and go to state 61
    non_conditional_loop           shift and go to state 67
    conditional_loop               shift and go to state 68

state 59

    (31) statements -> reading . statements1
    (40) statements1 -> . statements
    (41) statements1 -> . epsilon
    (27) statements -> . void_function_call statements1
    (28) statements -> . assignment statements1
    (29) statements -> . condition statements1
    (30) statements -> . writing statements1
    (31) statements -> . reading statements1
    (32) statements -> . repetition statements1
    (33) statements -> . return statements1
    (109) epsilon -> .
    (99) void_function_call -> . ID LPAREN np_check_function_call np_function_end_params RPAREN SEMI
    (100) void_function_call -> . ID LPAREN np_check_function_call function_call_1 np_function_end_params RPAREN SEMI
    (42) assignment -> . ID np_add_id LBRACKET np_check_is_array expression np_verify_array_dim RBRACKET np_get_array_address EQUALS np_add_operator expression np_assign_expression SEMI
    (43) assignment -> . ID np_add_id EQUALS np_add_operator expression np_assign_expression SEMI
    (44) condition -> . IF LPAREN expression RPAREN np_condition_gotof block np_condition_end_gotof
    (45) condition -> . IF LPAREN expression RPAREN np_condition_gotof block ELSE np_condition_goto_else block np_condition_end_gotof
    (79) writing -> . PRINT LPAREN writing_1 RPAREN SEMI
    (80) writing -> . PRINTLN LPAREN writing_2 RPAREN SEMI
    (89) reading -> . READ LPAREN reading_1 RPAREN np_add_read_quadruple SEMI
    (92) repetition -> . non_conditional_loop
    (93) repetition -> . conditional_loop
    (96) return -> . RETURN expression np_add_return_quadruple SEMI
    (95) non_conditional_loop -> . FOR LPAREN ID np_add_id EQUALS np_add_operator expression np_assign_expression_for TO expression np_non_conditional_limit BY expression RPAREN block np_non_conditional_end
    (94) conditional_loop -> . WHILE np_while_init LPAREN expression RPAREN np_while_expression DO block np_while_end_block

    RBRACE          reduce using rule 109 (epsilon -> .)
    ID              shift and go to state 62
    IF              shift and go to state 63
    PRINT           shift and go to state 64
    PRINTLN         shift and go to state 65
    READ            shift and go to state 66
    RETURN          shift and go to state 69
    FOR             shift and go to state 70
    WHILE           shift and go to state 71

    reading                        shift and go to state 59
    statements1                    shift and go to state 84
    statements                     shift and go to state 79
    epsilon                        shift and go to state 80
    void_function_call             shift and go to state 55
    assignment                     shift and go to state 56
    condition                      shift and go to state 57
    writing                        shift and go to state 58
    repetition                     shift and go to state 60
    return                         shift and go to state 61
    non_conditional_loop           shift and go to state 67
    conditional_loop               shift and go to state 68

state 60

    (32) statements -> repetition . statements1
    (40) statements1 -> . statements
    (41) statements1 -> . epsilon
    (27) statements -> . void_function_call statements1
    (28) statements -> . assignment statements1
    (29) statements -> . condition statements1
    (30) statements -> . writing statements1
    (31) statements -> . reading statements1
    (32) statements -> . repetition statements1
    (33) statements -> . return statements1
    (109) epsilon -> .
    (99) void_function_call -> . ID LPAREN np_check_function_call np_function_end_params RPAREN SEMI
    (100) void_function_call -> . ID LPAREN np_check_function_call function_call_1 np_function_end_params RPAREN SEMI
    (42) assignment -> . ID np_add_id LBRACKET np_check_is_array expression np_verify_array_dim RBRACKET np_get_array_address EQUALS np_add_operator expression np_assign_expression SEMI
    (43) assignment -> . ID np_add_id EQUALS np_add_operator expression np_assign_expression SEMI
    (44) condition -> . IF LPAREN expression RPAREN np_condition_gotof block np_condition_end_gotof
    (45) condition -> . IF LPAREN expression RPAREN np_condition_gotof block ELSE np_condition_goto_else block np_condition_end_gotof
    (79) writing -> . PRINT LPAREN writing_1 RPAREN SEMI
    (80) writing -> . PRINTLN LPAREN writing_2 RPAREN SEMI
    (89) reading -> . READ LPAREN reading_1 RPAREN np_add_read_quadruple SEMI
    (92) repetition -> . non_conditional_loop
    (93) repetition -> . conditional_loop
    (96) return -> . RETURN expression np_add_return_quadruple SEMI
    (95) non_conditional_loop -> . FOR LPAREN ID np_add_id EQUALS np_add_operator expression np_assign_expression_for TO expression np_non_conditional_limit BY expression RPAREN block np_non_conditional_end
    (94) conditional_loop -> . WHILE np_while_init LPAREN expression RPAREN np_while_expression DO block np_while_end_block

    RBRACE          reduce using rule 109 (epsilon -> .)
    ID              shift and go to state 62
    IF              shift and go to state 63
    PRINT           shift and go to state 64
    PRINTLN         shift and go to state 65
    READ            shift and go to state 66
    RETURN          shift and go to state 69
    FOR             shift and go to state 70
    WHILE           shift and go to state 71

    repetition                     shift and go to state 60
    statements1                    shift and go to state 85
    statements                     shift and go to state 79
    epsilon                        shift and go to state 80
    void_function_call             shift and go to state 55
    assignment                     shift and go to state 56
    condition                      shift and go to state 57
    writing                        shift and go to state 58
    reading                        shift and go to state 59
    return                         shift and go to state 61
    non_conditional_loop           shift and go to state 67
    conditional_loop               shift and go to state 68

state 61

    (33) statements -> return . statements1
    (40) statements1 -> . statements
    (41) statements1 -> . epsilon
    (27) statements -> . void_function_call statements1
    (28) statements -> . assignment statements1
    (29) statements -> . condition statements1
    (30) statements -> . writing statements1
    (31) statements -> . reading statements1
    (32) statements -> . repetition statements1
    (33) statements -> . return statements1
    (109) epsilon -> .
    (99) void_function_call -> . ID LPAREN np_check_function_call np_function_end_params RPAREN SEMI
    (100) void_function_call -> . ID LPAREN np_check_function_call function_call_1 np_function_end_params RPAREN SEMI
    (42) assignment -> . ID np_add_id LBRACKET np_check_is_array expression np_verify_array_dim RBRACKET np_get_array_address EQUALS np_add_operator expression np_assign_expression SEMI
    (43) assignment -> . ID np_add_id EQUALS np_add_operator expression np_assign_expression SEMI
    (44) condition -> . IF LPAREN expression RPAREN np_condition_gotof block np_condition_end_gotof
    (45) condition -> . IF LPAREN expression RPAREN np_condition_gotof block ELSE np_condition_goto_else block np_condition_end_gotof
    (79) writing -> . PRINT LPAREN writing_1 RPAREN SEMI
    (80) writing -> . PRINTLN LPAREN writing_2 RPAREN SEMI
    (89) reading -> . READ LPAREN reading_1 RPAREN np_add_read_quadruple SEMI
    (92) repetition -> . non_conditional_loop
    (93) repetition -> . conditional_loop
    (96) return -> . RETURN expression np_add_return_quadruple SEMI
    (95) non_conditional_loop -> . FOR LPAREN ID np_add_id EQUALS np_add_operator expression np_assign_expression_for TO expression np_non_conditional_limit BY expression RPAREN block np_non_conditional_end
    (94) conditional_loop -> . WHILE np_while_init LPAREN expression RPAREN np_while_expression DO block np_while_end_block

    RBRACE          reduce using rule 109 (epsilon -> .)
    ID              shift and go to state 62
    IF              shift and go to state 63
    PRINT           shift and go to state 64
    PRINTLN         shift and go to state 65
    READ            shift and go to state 66
    RETURN          shift and go to state 69
    FOR             shift and go to state 70
    WHILE           shift and go to state 71

    return                         shift and go to state 61
    statements1                    shift and go to state 86
    statements                     shift and go to state 79
    epsilon                        shift and go to state 80
    void_function_call             shift and go to state 55
    assignment                     shift and go to state 56
    condition                      shift and go to state 57
    writing                        shift and go to state 58
    reading                        shift and go to state 59
    repetition                     shift and go to state 60
    non_conditional_loop           shift and go to state 67
    conditional_loop               shift and go to state 68

state 62

    (99) void_function_call -> ID . LPAREN np_check_function_call np_function_end_params RPAREN SEMI
    (100) void_function_call -> ID . LPAREN np_check_function_call function_call_1 np_function_end_params RPAREN SEMI
    (42) assignment -> ID . np_add_id LBRACKET np_check_is_array expression np_verify_array_dim RBRACKET np_get_array_address EQUALS np_add_operator expression np_assign_expression SEMI
    (43) assignment -> ID . np_add_id EQUALS np_add_operator expression np_assign_expression SEMI
    (115) np_add_id -> .

    LPAREN          shift and go to state 87
    LBRACKET        reduce using rule 115 (np_add_id -> .)
    EQUALS          reduce using rule 115 (np_add_id -> .)

    np_add_id                      shift and go to state 88

state 63

    (44) condition -> IF . LPAREN expression RPAREN np_condition_gotof block np_condition_end_gotof
    (45) condition -> IF . LPAREN expression RPAREN np_condition_gotof block ELSE np_condition_goto_else block np_condition_end_gotof

    LPAREN          shift and go to state 89


state 64

    (79) writing -> PRINT . LPAREN writing_1 RPAREN SEMI

    LPAREN          shift and go to state 90


state 65

    (80) writing -> PRINTLN . LPAREN writing_2 RPAREN SEMI

    LPAREN          shift and go to state 91


state 66

    (89) reading -> READ . LPAREN reading_1 RPAREN np_add_read_quadruple SEMI

    LPAREN          shift and go to state 92


state 67

    (92) repetition -> non_conditional_loop .

    ID              reduce using rule 92 (repetition -> non_conditional_loop .)
    IF              reduce using rule 92 (repetition -> non_conditional_loop .)
    PRINT           reduce using rule 92 (repetition -> non_conditional_loop .)
    PRINTLN         reduce using rule 92 (repetition -> non_conditional_loop .)
    READ            reduce using rule 92 (repetition -> non_conditional_loop .)
    RETURN          reduce using rule 92 (repetition -> non_conditional_loop .)
    FOR             reduce using rule 92 (repetition -> non_conditional_loop .)
    WHILE           reduce using rule 92 (repetition -> non_conditional_loop .)
    RBRACE          reduce using rule 92 (repetition -> non_conditional_loop .)


state 68

    (93) repetition -> conditional_loop .

    ID              reduce using rule 93 (repetition -> conditional_loop .)
    IF              reduce using rule 93 (repetition -> conditional_loop .)
    PRINT           reduce using rule 93 (repetition -> conditional_loop .)
    PRINTLN         reduce using rule 93 (repetition -> conditional_loop .)
    READ            reduce using rule 93 (repetition -> conditional_loop .)
    RETURN          reduce using rule 93 (repetition -> conditional_loop .)
    FOR             reduce using rule 93 (repetition -> conditional_loop .)
    WHILE           reduce using rule 93 (repetition -> conditional_loop .)
    RBRACE          reduce using rule 93 (repetition -> conditional_loop .)


state 69

    (96) return -> RETURN . expression np_add_return_quadruple SEMI
    (46) expression -> . exp
    (47) expression -> . expression1 np_add_quadruple_logical
    (48) expression -> . expression0 np_add_quadruple_or_and
    (57) exp -> . term np_add_quadruple_sum_min
    (58) exp -> . term np_add_quadruple_sum_min exp_1
    (51) expression1 -> . exp LT np_add_operator exp
    (52) expression1 -> . exp LE np_add_operator exp
    (53) expression1 -> . exp GT np_add_operator exp
    (54) expression1 -> . exp GE np_add_operator exp
    (55) expression1 -> . exp EQ np_add_operator exp
    (56) expression1 -> . exp NE np_add_operator exp
    (49) expression0 -> . expression AND np_add_operator expression
    (50) expression0 -> . expression OR np_add_operator expression
    (61) term -> . factor np_add_quadruple_times_div
    (62) term -> . factor np_add_quadruple_times_div term_2
    (65) factor -> . LPAREN np_add_paren expression RPAREN np_pop_paren
    (66) factor -> . ID np_add_id LBRACKET np_check_is_array expression np_verify_array_dim RBRACKET np_get_array_address
    (67) factor -> . factor_prima_1
    (68) factor -> . function_call
    (69) factor -> . special_functions
    (70) factor_prima_1 -> . PLUS varcte
    (71) factor_prima_1 -> . MINUS np_set_as_negative varcte
    (72) factor_prima_1 -> . varcte
    (97) function_call -> . ID LPAREN np_check_function_call np_function_end_params RPAREN
    (98) function_call -> . ID LPAREN np_check_function_call function_call_1 np_function_end_params RPAREN
    (34) special_functions -> . mean
    (35) special_functions -> . median
    (36) special_functions -> . variance
    (37) special_functions -> . p_variance
    (38) special_functions -> . standard_deviation
    (39) special_functions -> . p_standard_deviation
    (73) varcte -> . ID np_add_id
    (74) varcte -> . CTEI np_add_cte_int
    (75) varcte -> . CTEF np_add_cte_float
    (76) varcte -> . CTEC np_add_cte_char
    (77) varcte -> . TRUE np_add_cte_bool
    (78) varcte -> . FALSE np_add_cte_bool
    (103) mean -> . MEAN LPAREN ID RPAREN np_add_mean_quadruple
    (104) median -> . MEDIAN LPAREN ID RPAREN np_add_median_quadruple
    (105) variance -> . VARIANCE LPAREN ID RPAREN np_add_variance_quadruple
    (106) p_variance -> . PVARIANCE LPAREN ID RPAREN np_add_p_variance_quadruple
    (107) standard_deviation -> . STDEV LPAREN ID RPAREN np_add_stdev_quadruple
    (108) p_standard_deviation -> . PSTDEV LPAREN ID RPAREN np_add_p_stdev_quadruple

    LPAREN          shift and go to state 99
    ID              shift and go to state 100
    PLUS            shift and go to state 104
    MINUS           shift and go to state 106
    CTEI            shift and go to state 113
    CTEF            shift and go to state 114
    CTEC            shift and go to state 115
    TRUE            shift and go to state 116
    FALSE           shift and go to state 117
    MEAN            shift and go to state 118
    MEDIAN          shift and go to state 119
    VARIANCE        shift and go to state 120
    PVARIANCE       shift and go to state 121
    STDEV           shift and go to state 122
    PSTDEV          shift and go to state 123

    expression                     shift and go to state 93
    exp                            shift and go to state 94
    expression1                    shift and go to state 95
    expression0                    shift and go to state 96
    term                           shift and go to state 97
    factor                         shift and go to state 98
    factor_prima_1                 shift and go to state 101
    function_call                  shift and go to state 102
    special_functions              shift and go to state 103
    varcte                         shift and go to state 105
    mean                           shift and go to state 107
    median                         shift and go to state 108
    variance                       shift and go to state 109
    p_variance                     shift and go to state 110
    standard_deviation             shift and go to state 111
    p_standard_deviation           shift and go to state 112

state 70

    (95) non_conditional_loop -> FOR . LPAREN ID np_add_id EQUALS np_add_operator expression np_assign_expression_for TO expression np_non_conditional_limit BY expression RPAREN block np_non_conditional_end

    LPAREN          shift and go to state 124


state 71

    (94) conditional_loop -> WHILE . np_while_init LPAREN expression RPAREN np_while_expression DO block np_while_end_block
    (132) np_while_init -> .

    LPAREN          reduce using rule 132 (np_while_init -> .)

    np_while_init                  shift and go to state 125

state 72

    (14) type_1 -> LBRACKET CTEI RBRACKET .

    SEMI            reduce using rule 14 (type_1 -> LBRACKET CTEI RBRACKET .)
    LPAREN          reduce using rule 14 (type_1 -> LBRACKET CTEI RBRACKET .)
    COMMA           reduce using rule 14 (type_1 -> LBRACKET CTEI RBRACKET .)
    RPAREN          reduce using rule 14 (type_1 -> LBRACKET CTEI RBRACKET .)


state 73

    (25) params -> ID . COLON type np_add_vars np_add_params_type COMMA params
    (26) params -> ID . COLON type np_add_vars np_add_params_type

    COLON           shift and go to state 126


state 74

    (16) function -> FUNCTION ID COLON return_type np_create_new_scope LPAREN RPAREN . np_set_func_start_point block np_end_function
    (18) function -> FUNCTION ID COLON return_type np_create_new_scope LPAREN RPAREN . vars np_set_func_start_point block np_end_function
    (144) np_set_func_start_point -> .
    (5) vars -> . vars_1
    (6) vars_1 -> . LET vars_prima_1 vars_1
    (7) vars_1 -> . LET vars_prima_1

    LBRACE          reduce using rule 144 (np_set_func_start_point -> .)
    LET             shift and go to state 11

    np_set_func_start_point        shift and go to state 127
    vars                           shift and go to state 128
    vars_1                         shift and go to state 8

state 75

    (17) function -> FUNCTION ID COLON return_type np_create_new_scope LPAREN params . RPAREN np_set_func_start_point block np_end_function
    (19) function -> FUNCTION ID COLON return_type np_create_new_scope LPAREN params . RPAREN vars np_set_func_start_point block np_end_function

    RPAREN          shift and go to state 129


state 76

    (21) main_block -> MAIN np_create_main_scope LPAREN RPAREN vars block np_end_main .

    $end            reduce using rule 21 (main_block -> MAIN np_create_main_scope LPAREN RPAREN vars block np_end_main .)


state 77

    (22) block -> LBRACE statements RBRACE .

    $end            reduce using rule 22 (block -> LBRACE statements RBRACE .)
    FUNCTION        reduce using rule 22 (block -> LBRACE statements RBRACE .)
    MAIN            reduce using rule 22 (block -> LBRACE statements RBRACE .)
    ELSE            reduce using rule 22 (block -> LBRACE statements RBRACE .)
    ID              reduce using rule 22 (block -> LBRACE statements RBRACE .)
    IF              reduce using rule 22 (block -> LBRACE statements RBRACE .)
    PRINT           reduce using rule 22 (block -> LBRACE statements RBRACE .)
    PRINTLN         reduce using rule 22 (block -> LBRACE statements RBRACE .)
    READ            reduce using rule 22 (block -> LBRACE statements RBRACE .)
    RETURN          reduce using rule 22 (block -> LBRACE statements RBRACE .)
    FOR             reduce using rule 22 (block -> LBRACE statements RBRACE .)
    WHILE           reduce using rule 22 (block -> LBRACE statements RBRACE .)
    RBRACE          reduce using rule 22 (block -> LBRACE statements RBRACE .)


state 78

    (27) statements -> void_function_call statements1 .

    RBRACE          reduce using rule 27 (statements -> void_function_call statements1 .)


state 79

    (40) statements1 -> statements .

    RBRACE          reduce using rule 40 (statements1 -> statements .)


state 80

    (41) statements1 -> epsilon .

    RBRACE          reduce using rule 41 (statements1 -> epsilon .)


state 81

    (28) statements -> assignment statements1 .

    RBRACE          reduce using rule 28 (statements -> assignment statements1 .)


state 82

    (29) statements -> condition statements1 .

    RBRACE          reduce using rule 29 (statements -> condition statements1 .)


state 83

    (30) statements -> writing statements1 .

    RBRACE          reduce using rule 30 (statements -> writing statements1 .)


state 84

    (31) statements -> reading statements1 .

    RBRACE          reduce using rule 31 (statements -> reading statements1 .)


state 85

    (32) statements -> repetition statements1 .

    RBRACE          reduce using rule 32 (statements -> repetition statements1 .)


state 86

    (33) statements -> return statements1 .

    RBRACE          reduce using rule 33 (statements -> return statements1 .)


state 87

    (99) void_function_call -> ID LPAREN . np_check_function_call np_function_end_params RPAREN SEMI
    (100) void_function_call -> ID LPAREN . np_check_function_call function_call_1 np_function_end_params RPAREN SEMI
    (148) np_check_function_call -> .

    LPAREN          reduce using rule 148 (np_check_function_call -> .)
    ID              reduce using rule 148 (np_check_function_call -> .)
    PLUS            reduce using rule 148 (np_check_function_call -> .)
    MINUS           reduce using rule 148 (np_check_function_call -> .)
    CTEI            reduce using rule 148 (np_check_function_call -> .)
    CTEF            reduce using rule 148 (np_check_function_call -> .)
    CTEC            reduce using rule 148 (np_check_function_call -> .)
    TRUE            reduce using rule 148 (np_check_function_call -> .)
    FALSE           reduce using rule 148 (np_check_function_call -> .)
    MEAN            reduce using rule 148 (np_check_function_call -> .)
    MEDIAN          reduce using rule 148 (np_check_function_call -> .)
    VARIANCE        reduce using rule 148 (np_check_function_call -> .)
    PVARIANCE       reduce using rule 148 (np_check_function_call -> .)
    STDEV           reduce using rule 148 (np_check_function_call -> .)
    PSTDEV          reduce using rule 148 (np_check_function_call -> .)
    RPAREN          reduce using rule 148 (np_check_function_call -> .)

    np_check_function_call         shift and go to state 130

state 88

    (42) assignment -> ID np_add_id . LBRACKET np_check_is_array expression np_verify_array_dim RBRACKET np_get_array_address EQUALS np_add_operator expression np_assign_expression SEMI
    (43) assignment -> ID np_add_id . EQUALS np_add_operator expression np_assign_expression SEMI

    LBRACKET        shift and go to state 131
    EQUALS          shift and go to state 132


state 89

    (44) condition -> IF LPAREN . expression RPAREN np_condition_gotof block np_condition_end_gotof
    (45) condition -> IF LPAREN . expression RPAREN np_condition_gotof block ELSE np_condition_goto_else block np_condition_end_gotof
    (46) expression -> . exp
    (47) expression -> . expression1 np_add_quadruple_logical
    (48) expression -> . expression0 np_add_quadruple_or_and
    (57) exp -> . term np_add_quadruple_sum_min
    (58) exp -> . term np_add_quadruple_sum_min exp_1
    (51) expression1 -> . exp LT np_add_operator exp
    (52) expression1 -> . exp LE np_add_operator exp
    (53) expression1 -> . exp GT np_add_operator exp
    (54) expression1 -> . exp GE np_add_operator exp
    (55) expression1 -> . exp EQ np_add_operator exp
    (56) expression1 -> . exp NE np_add_operator exp
    (49) expression0 -> . expression AND np_add_operator expression
    (50) expression0 -> . expression OR np_add_operator expression
    (61) term -> . factor np_add_quadruple_times_div
    (62) term -> . factor np_add_quadruple_times_div term_2
    (65) factor -> . LPAREN np_add_paren expression RPAREN np_pop_paren
    (66) factor -> . ID np_add_id LBRACKET np_check_is_array expression np_verify_array_dim RBRACKET np_get_array_address
    (67) factor -> . factor_prima_1
    (68) factor -> . function_call
    (69) factor -> . special_functions
    (70) factor_prima_1 -> . PLUS varcte
    (71) factor_prima_1 -> . MINUS np_set_as_negative varcte
    (72) factor_prima_1 -> . varcte
    (97) function_call -> . ID LPAREN np_check_function_call np_function_end_params RPAREN
    (98) function_call -> . ID LPAREN np_check_function_call function_call_1 np_function_end_params RPAREN
    (34) special_functions -> . mean
    (35) special_functions -> . median
    (36) special_functions -> . variance
    (37) special_functions -> . p_variance
    (38) special_functions -> . standard_deviation
    (39) special_functions -> . p_standard_deviation
    (73) varcte -> . ID np_add_id
    (74) varcte -> . CTEI np_add_cte_int
    (75) varcte -> . CTEF np_add_cte_float
    (76) varcte -> . CTEC np_add_cte_char
    (77) varcte -> . TRUE np_add_cte_bool
    (78) varcte -> . FALSE np_add_cte_bool
    (103) mean -> . MEAN LPAREN ID RPAREN np_add_mean_quadruple
    (104) median -> . MEDIAN LPAREN ID RPAREN np_add_median_quadruple
    (105) variance -> . VARIANCE LPAREN ID RPAREN np_add_variance_quadruple
    (106) p_variance -> . PVARIANCE LPAREN ID RPAREN np_add_p_variance_quadruple
    (107) standard_deviation -> . STDEV LPAREN ID RPAREN np_add_stdev_quadruple
    (108) p_standard_deviation -> . PSTDEV LPAREN ID RPAREN np_add_p_stdev_quadruple

    LPAREN          shift and go to state 99
    ID              shift and go to state 100
    PLUS            shift and go to state 104
    MINUS           shift and go to state 106
    CTEI            shift and go to state 113
    CTEF            shift and go to state 114
    CTEC            shift and go to state 115
    TRUE            shift and go to state 116
    FALSE           shift and go to state 117
    MEAN            shift and go to state 118
    MEDIAN          shift and go to state 119
    VARIANCE        shift and go to state 120
    PVARIANCE       shift and go to state 121
    STDEV           shift and go to state 122
    PSTDEV          shift and go to state 123

    expression                     shift and go to state 133
    exp                            shift and go to state 94
    expression1                    shift and go to state 95
    expression0                    shift and go to state 96
    term                           shift and go to state 97
    factor                         shift and go to state 98
    factor_prima_1                 shift and go to state 101
    function_call                  shift and go to state 102
    special_functions              shift and go to state 103
    varcte                         shift and go to state 105
    mean                           shift and go to state 107
    median                         shift and go to state 108
    variance                       shift and go to state 109
    p_variance                     shift and go to state 110
    standard_deviation             shift and go to state 111
    p_standard_deviation           shift and go to state 112

state 90

    (79) writing -> PRINT LPAREN . writing_1 RPAREN SEMI
    (81) writing_1 -> . expression np_add_print_quadruple_exp COMMA writing_1
    (82) writing_1 -> . CTESTRING np_add_print_quadruple_str COMMA writing_1
    (83) writing_1 -> . expression np_add_print_quadruple_exp
    (84) writing_1 -> . CTESTRING np_add_print_quadruple_str
    (46) expression -> . exp
    (47) expression -> . expression1 np_add_quadruple_logical
    (48) expression -> . expression0 np_add_quadruple_or_and
    (57) exp -> . term np_add_quadruple_sum_min
    (58) exp -> . term np_add_quadruple_sum_min exp_1
    (51) expression1 -> . exp LT np_add_operator exp
    (52) expression1 -> . exp LE np_add_operator exp
    (53) expression1 -> . exp GT np_add_operator exp
    (54) expression1 -> . exp GE np_add_operator exp
    (55) expression1 -> . exp EQ np_add_operator exp
    (56) expression1 -> . exp NE np_add_operator exp
    (49) expression0 -> . expression AND np_add_operator expression
    (50) expression0 -> . expression OR np_add_operator expression
    (61) term -> . factor np_add_quadruple_times_div
    (62) term -> . factor np_add_quadruple_times_div term_2
    (65) factor -> . LPAREN np_add_paren expression RPAREN np_pop_paren
    (66) factor -> . ID np_add_id LBRACKET np_check_is_array expression np_verify_array_dim RBRACKET np_get_array_address
    (67) factor -> . factor_prima_1
    (68) factor -> . function_call
    (69) factor -> . special_functions
    (70) factor_prima_1 -> . PLUS varcte
    (71) factor_prima_1 -> . MINUS np_set_as_negative varcte
    (72) factor_prima_1 -> . varcte
    (97) function_call -> . ID LPAREN np_check_function_call np_function_end_params RPAREN
    (98) function_call -> . ID LPAREN np_check_function_call function_call_1 np_function_end_params RPAREN
    (34) special_functions -> . mean
    (35) special_functions -> . median
    (36) special_functions -> . variance
    (37) special_functions -> . p_variance
    (38) special_functions -> . standard_deviation
    (39) special_functions -> . p_standard_deviation
    (73) varcte -> . ID np_add_id
    (74) varcte -> . CTEI np_add_cte_int
    (75) varcte -> . CTEF np_add_cte_float
    (76) varcte -> . CTEC np_add_cte_char
    (77) varcte -> . TRUE np_add_cte_bool
    (78) varcte -> . FALSE np_add_cte_bool
    (103) mean -> . MEAN LPAREN ID RPAREN np_add_mean_quadruple
    (104) median -> . MEDIAN LPAREN ID RPAREN np_add_median_quadruple
    (105) variance -> . VARIANCE LPAREN ID RPAREN np_add_variance_quadruple
    (106) p_variance -> . PVARIANCE LPAREN ID RPAREN np_add_p_variance_quadruple
    (107) standard_deviation -> . STDEV LPAREN ID RPAREN np_add_stdev_quadruple
    (108) p_standard_deviation -> . PSTDEV LPAREN ID RPAREN np_add_p_stdev_quadruple

    CTESTRING       shift and go to state 136
    LPAREN          shift and go to state 99
    ID              shift and go to state 100
    PLUS            shift and go to state 104
    MINUS           shift and go to state 106
    CTEI            shift and go to state 113
    CTEF            shift and go to state 114
    CTEC            shift and go to state 115
    TRUE            shift and go to state 116
    FALSE           shift and go to state 117
    MEAN            shift and go to state 118
    MEDIAN          shift and go to state 119
    VARIANCE        shift and go to state 120
    PVARIANCE       shift and go to state 121
    STDEV           shift and go to state 122
    PSTDEV          shift and go to state 123

    writing_1                      shift and go to state 134
    expression                     shift and go to state 135
    exp                            shift and go to state 94
    expression1                    shift and go to state 95
    expression0                    shift and go to state 96
    term                           shift and go to state 97
    factor                         shift and go to state 98
    factor_prima_1                 shift and go to state 101
    function_call                  shift and go to state 102
    special_functions              shift and go to state 103
    varcte                         shift and go to state 105
    mean                           shift and go to state 107
    median                         shift and go to state 108
    variance                       shift and go to state 109
    p_variance                     shift and go to state 110
    standard_deviation             shift and go to state 111
    p_standard_deviation           shift and go to state 112

state 91

    (80) writing -> PRINTLN LPAREN . writing_2 RPAREN SEMI
    (85) writing_2 -> . expression np_add_println_quadruple_exp COMMA writing_2
    (86) writing_2 -> . CTESTRING np_add_println_quadruple_str COMMA writing_2
    (87) writing_2 -> . expression np_add_println_quadruple_exp
    (88) writing_2 -> . CTESTRING np_add_println_quadruple_str
    (46) expression -> . exp
    (47) expression -> . expression1 np_add_quadruple_logical
    (48) expression -> . expression0 np_add_quadruple_or_and
    (57) exp -> . term np_add_quadruple_sum_min
    (58) exp -> . term np_add_quadruple_sum_min exp_1
    (51) expression1 -> . exp LT np_add_operator exp
    (52) expression1 -> . exp LE np_add_operator exp
    (53) expression1 -> . exp GT np_add_operator exp
    (54) expression1 -> . exp GE np_add_operator exp
    (55) expression1 -> . exp EQ np_add_operator exp
    (56) expression1 -> . exp NE np_add_operator exp
    (49) expression0 -> . expression AND np_add_operator expression
    (50) expression0 -> . expression OR np_add_operator expression
    (61) term -> . factor np_add_quadruple_times_div
    (62) term -> . factor np_add_quadruple_times_div term_2
    (65) factor -> . LPAREN np_add_paren expression RPAREN np_pop_paren
    (66) factor -> . ID np_add_id LBRACKET np_check_is_array expression np_verify_array_dim RBRACKET np_get_array_address
    (67) factor -> . factor_prima_1
    (68) factor -> . function_call
    (69) factor -> . special_functions
    (70) factor_prima_1 -> . PLUS varcte
    (71) factor_prima_1 -> . MINUS np_set_as_negative varcte
    (72) factor_prima_1 -> . varcte
    (97) function_call -> . ID LPAREN np_check_function_call np_function_end_params RPAREN
    (98) function_call -> . ID LPAREN np_check_function_call function_call_1 np_function_end_params RPAREN
    (34) special_functions -> . mean
    (35) special_functions -> . median
    (36) special_functions -> . variance
    (37) special_functions -> . p_variance
    (38) special_functions -> . standard_deviation
    (39) special_functions -> . p_standard_deviation
    (73) varcte -> . ID np_add_id
    (74) varcte -> . CTEI np_add_cte_int
    (75) varcte -> . CTEF np_add_cte_float
    (76) varcte -> . CTEC np_add_cte_char
    (77) varcte -> . TRUE np_add_cte_bool
    (78) varcte -> . FALSE np_add_cte_bool
    (103) mean -> . MEAN LPAREN ID RPAREN np_add_mean_quadruple
    (104) median -> . MEDIAN LPAREN ID RPAREN np_add_median_quadruple
    (105) variance -> . VARIANCE LPAREN ID RPAREN np_add_variance_quadruple
    (106) p_variance -> . PVARIANCE LPAREN ID RPAREN np_add_p_variance_quadruple
    (107) standard_deviation -> . STDEV LPAREN ID RPAREN np_add_stdev_quadruple
    (108) p_standard_deviation -> . PSTDEV LPAREN ID RPAREN np_add_p_stdev_quadruple

    CTESTRING       shift and go to state 139
    LPAREN          shift and go to state 99
    ID              shift and go to state 100
    PLUS            shift and go to state 104
    MINUS           shift and go to state 106
    CTEI            shift and go to state 113
    CTEF            shift and go to state 114
    CTEC            shift and go to state 115
    TRUE            shift and go to state 116
    FALSE           shift and go to state 117
    MEAN            shift and go to state 118
    MEDIAN          shift and go to state 119
    VARIANCE        shift and go to state 120
    PVARIANCE       shift and go to state 121
    STDEV           shift and go to state 122
    PSTDEV          shift and go to state 123

    writing_2                      shift and go to state 137
    expression                     shift and go to state 138
    exp                            shift and go to state 94
    expression1                    shift and go to state 95
    expression0                    shift and go to state 96
    term                           shift and go to state 97
    factor                         shift and go to state 98
    factor_prima_1                 shift and go to state 101
    function_call                  shift and go to state 102
    special_functions              shift and go to state 103
    varcte                         shift and go to state 105
    mean                           shift and go to state 107
    median                         shift and go to state 108
    variance                       shift and go to state 109
    p_variance                     shift and go to state 110
    standard_deviation             shift and go to state 111
    p_standard_deviation           shift and go to state 112

state 92

    (89) reading -> READ LPAREN . reading_1 RPAREN np_add_read_quadruple SEMI
    (90) reading_1 -> . ID np_add_id
    (91) reading_1 -> . ID np_add_id LBRACKET np_check_is_array expression np_verify_array_dim RBRACKET np_get_array_address

    ID              shift and go to state 141

    reading_1                      shift and go to state 140

state 93

    (96) return -> RETURN expression . np_add_return_quadruple SEMI
    (49) expression0 -> expression . AND np_add_operator expression
    (50) expression0 -> expression . OR np_add_operator expression
    (142) np_add_return_quadruple -> .

    AND             shift and go to state 143
    OR              shift and go to state 144
    SEMI            reduce using rule 142 (np_add_return_quadruple -> .)

    np_add_return_quadruple        shift and go to state 142

state 94

    (46) expression -> exp .
    (51) expression1 -> exp . LT np_add_operator exp
    (52) expression1 -> exp . LE np_add_operator exp
    (53) expression1 -> exp . GT np_add_operator exp
    (54) expression1 -> exp . GE np_add_operator exp
    (55) expression1 -> exp . EQ np_add_operator exp
    (56) expression1 -> exp . NE np_add_operator exp

    AND             reduce using rule 46 (expression -> exp .)
    OR              reduce using rule 46 (expression -> exp .)
    SEMI            reduce using rule 46 (expression -> exp .)
    RPAREN          reduce using rule 46 (expression -> exp .)
    COMMA           reduce using rule 46 (expression -> exp .)
    RBRACKET        reduce using rule 46 (expression -> exp .)
    TO              reduce using rule 46 (expression -> exp .)
    BY              reduce using rule 46 (expression -> exp .)
    LT              shift and go to state 145
    LE              shift and go to state 146
    GT              shift and go to state 147
    GE              shift and go to state 148
    EQ              shift and go to state 149
    NE              shift and go to state 150


state 95

    (47) expression -> expression1 . np_add_quadruple_logical
    (126) np_add_quadruple_logical -> .

    AND             reduce using rule 126 (np_add_quadruple_logical -> .)
    OR              reduce using rule 126 (np_add_quadruple_logical -> .)
    SEMI            reduce using rule 126 (np_add_quadruple_logical -> .)
    RPAREN          reduce using rule 126 (np_add_quadruple_logical -> .)
    COMMA           reduce using rule 126 (np_add_quadruple_logical -> .)
    RBRACKET        reduce using rule 126 (np_add_quadruple_logical -> .)
    TO              reduce using rule 126 (np_add_quadruple_logical -> .)
    BY              reduce using rule 126 (np_add_quadruple_logical -> .)

    np_add_quadruple_logical       shift and go to state 151

state 96

    (48) expression -> expression0 . np_add_quadruple_or_and
    (127) np_add_quadruple_or_and -> .

    AND             reduce using rule 127 (np_add_quadruple_or_and -> .)
    OR              reduce using rule 127 (np_add_quadruple_or_and -> .)
    SEMI            reduce using rule 127 (np_add_quadruple_or_and -> .)
    RPAREN          reduce using rule 127 (np_add_quadruple_or_and -> .)
    COMMA           reduce using rule 127 (np_add_quadruple_or_and -> .)
    RBRACKET        reduce using rule 127 (np_add_quadruple_or_and -> .)
    TO              reduce using rule 127 (np_add_quadruple_or_and -> .)
    BY              reduce using rule 127 (np_add_quadruple_or_and -> .)

    np_add_quadruple_or_and        shift and go to state 152

state 97

    (57) exp -> term . np_add_quadruple_sum_min
    (58) exp -> term . np_add_quadruple_sum_min exp_1
    (124) np_add_quadruple_sum_min -> .

    PLUS            reduce using rule 124 (np_add_quadruple_sum_min -> .)
    MINUS           reduce using rule 124 (np_add_quadruple_sum_min -> .)
    LT              reduce using rule 124 (np_add_quadruple_sum_min -> .)
    LE              reduce using rule 124 (np_add_quadruple_sum_min -> .)
    GT              reduce using rule 124 (np_add_quadruple_sum_min -> .)
    GE              reduce using rule 124 (np_add_quadruple_sum_min -> .)
    EQ              reduce using rule 124 (np_add_quadruple_sum_min -> .)
    NE              reduce using rule 124 (np_add_quadruple_sum_min -> .)
    AND             reduce using rule 124 (np_add_quadruple_sum_min -> .)
    OR              reduce using rule 124 (np_add_quadruple_sum_min -> .)
    SEMI            reduce using rule 124 (np_add_quadruple_sum_min -> .)
    RPAREN          reduce using rule 124 (np_add_quadruple_sum_min -> .)
    COMMA           reduce using rule 124 (np_add_quadruple_sum_min -> .)
    RBRACKET        reduce using rule 124 (np_add_quadruple_sum_min -> .)
    TO              reduce using rule 124 (np_add_quadruple_sum_min -> .)
    BY              reduce using rule 124 (np_add_quadruple_sum_min -> .)

    np_add_quadruple_sum_min       shift and go to state 153

state 98

    (61) term -> factor . np_add_quadruple_times_div
    (62) term -> factor . np_add_quadruple_times_div term_2
    (125) np_add_quadruple_times_div -> .

    TIMES           reduce using rule 125 (np_add_quadruple_times_div -> .)
    DIVIDE          reduce using rule 125 (np_add_quadruple_times_div -> .)
    PLUS            reduce using rule 125 (np_add_quadruple_times_div -> .)
    MINUS           reduce using rule 125 (np_add_quadruple_times_div -> .)
    LT              reduce using rule 125 (np_add_quadruple_times_div -> .)
    LE              reduce using rule 125 (np_add_quadruple_times_div -> .)
    GT              reduce using rule 125 (np_add_quadruple_times_div -> .)
    GE              reduce using rule 125 (np_add_quadruple_times_div -> .)
    EQ              reduce using rule 125 (np_add_quadruple_times_div -> .)
    NE              reduce using rule 125 (np_add_quadruple_times_div -> .)
    AND             reduce using rule 125 (np_add_quadruple_times_div -> .)
    OR              reduce using rule 125 (np_add_quadruple_times_div -> .)
    SEMI            reduce using rule 125 (np_add_quadruple_times_div -> .)
    RPAREN          reduce using rule 125 (np_add_quadruple_times_div -> .)
    COMMA           reduce using rule 125 (np_add_quadruple_times_div -> .)
    RBRACKET        reduce using rule 125 (np_add_quadruple_times_div -> .)
    TO              reduce using rule 125 (np_add_quadruple_times_div -> .)
    BY              reduce using rule 125 (np_add_quadruple_times_div -> .)

    np_add_quadruple_times_div     shift and go to state 154

state 99

    (65) factor -> LPAREN . np_add_paren expression RPAREN np_pop_paren
    (122) np_add_paren -> .

    LPAREN          reduce using rule 122 (np_add_paren -> .)
    ID              reduce using rule 122 (np_add_paren -> .)
    PLUS            reduce using rule 122 (np_add_paren -> .)
    MINUS           reduce using rule 122 (np_add_paren -> .)
    CTEI            reduce using rule 122 (np_add_paren -> .)
    CTEF            reduce using rule 122 (np_add_paren -> .)
    CTEC            reduce using rule 122 (np_add_paren -> .)
    TRUE            reduce using rule 122 (np_add_paren -> .)
    FALSE           reduce using rule 122 (np_add_paren -> .)
    MEAN            reduce using rule 122 (np_add_paren -> .)
    MEDIAN          reduce using rule 122 (np_add_paren -> .)
    VARIANCE        reduce using rule 122 (np_add_paren -> .)
    PVARIANCE       reduce using rule 122 (np_add_paren -> .)
    STDEV           reduce using rule 122 (np_add_paren -> .)
    PSTDEV          reduce using rule 122 (np_add_paren -> .)

    np_add_paren                   shift and go to state 155

state 100

    (66) factor -> ID . np_add_id LBRACKET np_check_is_array expression np_verify_array_dim RBRACKET np_get_array_address
    (97) function_call -> ID . LPAREN np_check_function_call np_function_end_params RPAREN
    (98) function_call -> ID . LPAREN np_check_function_call function_call_1 np_function_end_params RPAREN
    (73) varcte -> ID . np_add_id
    (115) np_add_id -> .

    LPAREN          shift and go to state 157
    LBRACKET        reduce using rule 115 (np_add_id -> .)
    TIMES           reduce using rule 115 (np_add_id -> .)
    DIVIDE          reduce using rule 115 (np_add_id -> .)
    PLUS            reduce using rule 115 (np_add_id -> .)
    MINUS           reduce using rule 115 (np_add_id -> .)
    LT              reduce using rule 115 (np_add_id -> .)
    LE              reduce using rule 115 (np_add_id -> .)
    GT              reduce using rule 115 (np_add_id -> .)
    GE              reduce using rule 115 (np_add_id -> .)
    EQ              reduce using rule 115 (np_add_id -> .)
    NE              reduce using rule 115 (np_add_id -> .)
    AND             reduce using rule 115 (np_add_id -> .)
    OR              reduce using rule 115 (np_add_id -> .)
    SEMI            reduce using rule 115 (np_add_id -> .)
    RPAREN          reduce using rule 115 (np_add_id -> .)
    COMMA           reduce using rule 115 (np_add_id -> .)
    RBRACKET        reduce using rule 115 (np_add_id -> .)
    TO              reduce using rule 115 (np_add_id -> .)
    BY              reduce using rule 115 (np_add_id -> .)

    np_add_id                      shift and go to state 156

state 101

    (67) factor -> factor_prima_1 .

    TIMES           reduce using rule 67 (factor -> factor_prima_1 .)
    DIVIDE          reduce using rule 67 (factor -> factor_prima_1 .)
    PLUS            reduce using rule 67 (factor -> factor_prima_1 .)
    MINUS           reduce using rule 67 (factor -> factor_prima_1 .)
    LT              reduce using rule 67 (factor -> factor_prima_1 .)
    LE              reduce using rule 67 (factor -> factor_prima_1 .)
    GT              reduce using rule 67 (factor -> factor_prima_1 .)
    GE              reduce using rule 67 (factor -> factor_prima_1 .)
    EQ              reduce using rule 67 (factor -> factor_prima_1 .)
    NE              reduce using rule 67 (factor -> factor_prima_1 .)
    AND             reduce using rule 67 (factor -> factor_prima_1 .)
    OR              reduce using rule 67 (factor -> factor_prima_1 .)
    SEMI            reduce using rule 67 (factor -> factor_prima_1 .)
    RPAREN          reduce using rule 67 (factor -> factor_prima_1 .)
    COMMA           reduce using rule 67 (factor -> factor_prima_1 .)
    RBRACKET        reduce using rule 67 (factor -> factor_prima_1 .)
    TO              reduce using rule 67 (factor -> factor_prima_1 .)
    BY              reduce using rule 67 (factor -> factor_prima_1 .)


state 102

    (68) factor -> function_call .

    TIMES           reduce using rule 68 (factor -> function_call .)
    DIVIDE          reduce using rule 68 (factor -> function_call .)
    PLUS            reduce using rule 68 (factor -> function_call .)
    MINUS           reduce using rule 68 (factor -> function_call .)
    LT              reduce using rule 68 (factor -> function_call .)
    LE              reduce using rule 68 (factor -> function_call .)
    GT              reduce using rule 68 (factor -> function_call .)
    GE              reduce using rule 68 (factor -> function_call .)
    EQ              reduce using rule 68 (factor -> function_call .)
    NE              reduce using rule 68 (factor -> function_call .)
    AND             reduce using rule 68 (factor -> function_call .)
    OR              reduce using rule 68 (factor -> function_call .)
    SEMI            reduce using rule 68 (factor -> function_call .)
    RPAREN          reduce using rule 68 (factor -> function_call .)
    COMMA           reduce using rule 68 (factor -> function_call .)
    RBRACKET        reduce using rule 68 (factor -> function_call .)
    TO              reduce using rule 68 (factor -> function_call .)
    BY              reduce using rule 68 (factor -> function_call .)


state 103

    (69) factor -> special_functions .

    TIMES           reduce using rule 69 (factor -> special_functions .)
    DIVIDE          reduce using rule 69 (factor -> special_functions .)
    PLUS            reduce using rule 69 (factor -> special_functions .)
    MINUS           reduce using rule 69 (factor -> special_functions .)
    LT              reduce using rule 69 (factor -> special_functions .)
    LE              reduce using rule 69 (factor -> special_functions .)
    GT              reduce using rule 69 (factor -> special_functions .)
    GE              reduce using rule 69 (factor -> special_functions .)
    EQ              reduce using rule 69 (factor -> special_functions .)
    NE              reduce using rule 69 (factor -> special_functions .)
    AND             reduce using rule 69 (factor -> special_functions .)
    OR              reduce using rule 69 (factor -> special_functions .)
    SEMI            reduce using rule 69 (factor -> special_functions .)
    RPAREN          reduce using rule 69 (factor -> special_functions .)
    COMMA           reduce using rule 69 (factor -> special_functions .)
    RBRACKET        reduce using rule 69 (factor -> special_functions .)
    TO              reduce using rule 69 (factor -> special_functions .)
    BY              reduce using rule 69 (factor -> special_functions .)


state 104

    (70) factor_prima_1 -> PLUS . varcte
    (73) varcte -> . ID np_add_id
    (74) varcte -> . CTEI np_add_cte_int
    (75) varcte -> . CTEF np_add_cte_float
    (76) varcte -> . CTEC np_add_cte_char
    (77) varcte -> . TRUE np_add_cte_bool
    (78) varcte -> . FALSE np_add_cte_bool

    ID              shift and go to state 159
    CTEI            shift and go to state 113
    CTEF            shift and go to state 114
    CTEC            shift and go to state 115
    TRUE            shift and go to state 116
    FALSE           shift and go to state 117

    varcte                         shift and go to state 158

state 105

    (72) factor_prima_1 -> varcte .

    TIMES           reduce using rule 72 (factor_prima_1 -> varcte .)
    DIVIDE          reduce using rule 72 (factor_prima_1 -> varcte .)
    PLUS            reduce using rule 72 (factor_prima_1 -> varcte .)
    MINUS           reduce using rule 72 (factor_prima_1 -> varcte .)
    LT              reduce using rule 72 (factor_prima_1 -> varcte .)
    LE              reduce using rule 72 (factor_prima_1 -> varcte .)
    GT              reduce using rule 72 (factor_prima_1 -> varcte .)
    GE              reduce using rule 72 (factor_prima_1 -> varcte .)
    EQ              reduce using rule 72 (factor_prima_1 -> varcte .)
    NE              reduce using rule 72 (factor_prima_1 -> varcte .)
    AND             reduce using rule 72 (factor_prima_1 -> varcte .)
    OR              reduce using rule 72 (factor_prima_1 -> varcte .)
    SEMI            reduce using rule 72 (factor_prima_1 -> varcte .)
    RPAREN          reduce using rule 72 (factor_prima_1 -> varcte .)
    COMMA           reduce using rule 72 (factor_prima_1 -> varcte .)
    RBRACKET        reduce using rule 72 (factor_prima_1 -> varcte .)
    TO              reduce using rule 72 (factor_prima_1 -> varcte .)
    BY              reduce using rule 72 (factor_prima_1 -> varcte .)


state 106

    (71) factor_prima_1 -> MINUS . np_set_as_negative varcte
    (120) np_set_as_negative -> .

    ID              reduce using rule 120 (np_set_as_negative -> .)
    CTEI            reduce using rule 120 (np_set_as_negative -> .)
    CTEF            reduce using rule 120 (np_set_as_negative -> .)
    CTEC            reduce using rule 120 (np_set_as_negative -> .)
    TRUE            reduce using rule 120 (np_set_as_negative -> .)
    FALSE           reduce using rule 120 (np_set_as_negative -> .)

    np_set_as_negative             shift and go to state 160

state 107

    (34) special_functions -> mean .

    TIMES           reduce using rule 34 (special_functions -> mean .)
    DIVIDE          reduce using rule 34 (special_functions -> mean .)
    PLUS            reduce using rule 34 (special_functions -> mean .)
    MINUS           reduce using rule 34 (special_functions -> mean .)
    LT              reduce using rule 34 (special_functions -> mean .)
    LE              reduce using rule 34 (special_functions -> mean .)
    GT              reduce using rule 34 (special_functions -> mean .)
    GE              reduce using rule 34 (special_functions -> mean .)
    EQ              reduce using rule 34 (special_functions -> mean .)
    NE              reduce using rule 34 (special_functions -> mean .)
    AND             reduce using rule 34 (special_functions -> mean .)
    OR              reduce using rule 34 (special_functions -> mean .)
    SEMI            reduce using rule 34 (special_functions -> mean .)
    RPAREN          reduce using rule 34 (special_functions -> mean .)
    COMMA           reduce using rule 34 (special_functions -> mean .)
    RBRACKET        reduce using rule 34 (special_functions -> mean .)
    TO              reduce using rule 34 (special_functions -> mean .)
    BY              reduce using rule 34 (special_functions -> mean .)


state 108

    (35) special_functions -> median .

    TIMES           reduce using rule 35 (special_functions -> median .)
    DIVIDE          reduce using rule 35 (special_functions -> median .)
    PLUS            reduce using rule 35 (special_functions -> median .)
    MINUS           reduce using rule 35 (special_functions -> median .)
    LT              reduce using rule 35 (special_functions -> median .)
    LE              reduce using rule 35 (special_functions -> median .)
    GT              reduce using rule 35 (special_functions -> median .)
    GE              reduce using rule 35 (special_functions -> median .)
    EQ              reduce using rule 35 (special_functions -> median .)
    NE              reduce using rule 35 (special_functions -> median .)
    AND             reduce using rule 35 (special_functions -> median .)
    OR              reduce using rule 35 (special_functions -> median .)
    SEMI            reduce using rule 35 (special_functions -> median .)
    RPAREN          reduce using rule 35 (special_functions -> median .)
    COMMA           reduce using rule 35 (special_functions -> median .)
    RBRACKET        reduce using rule 35 (special_functions -> median .)
    TO              reduce using rule 35 (special_functions -> median .)
    BY              reduce using rule 35 (special_functions -> median .)


state 109

    (36) special_functions -> variance .

    TIMES           reduce using rule 36 (special_functions -> variance .)
    DIVIDE          reduce using rule 36 (special_functions -> variance .)
    PLUS            reduce using rule 36 (special_functions -> variance .)
    MINUS           reduce using rule 36 (special_functions -> variance .)
    LT              reduce using rule 36 (special_functions -> variance .)
    LE              reduce using rule 36 (special_functions -> variance .)
    GT              reduce using rule 36 (special_functions -> variance .)
    GE              reduce using rule 36 (special_functions -> variance .)
    EQ              reduce using rule 36 (special_functions -> variance .)
    NE              reduce using rule 36 (special_functions -> variance .)
    AND             reduce using rule 36 (special_functions -> variance .)
    OR              reduce using rule 36 (special_functions -> variance .)
    SEMI            reduce using rule 36 (special_functions -> variance .)
    RPAREN          reduce using rule 36 (special_functions -> variance .)
    COMMA           reduce using rule 36 (special_functions -> variance .)
    RBRACKET        reduce using rule 36 (special_functions -> variance .)
    TO              reduce using rule 36 (special_functions -> variance .)
    BY              reduce using rule 36 (special_functions -> variance .)


state 110

    (37) special_functions -> p_variance .

    TIMES           reduce using rule 37 (special_functions -> p_variance .)
    DIVIDE          reduce using rule 37 (special_functions -> p_variance .)
    PLUS            reduce using rule 37 (special_functions -> p_variance .)
    MINUS           reduce using rule 37 (special_functions -> p_variance .)
    LT              reduce using rule 37 (special_functions -> p_variance .)
    LE              reduce using rule 37 (special_functions -> p_variance .)
    GT              reduce using rule 37 (special_functions -> p_variance .)
    GE              reduce using rule 37 (special_functions -> p_variance .)
    EQ              reduce using rule 37 (special_functions -> p_variance .)
    NE              reduce using rule 37 (special_functions -> p_variance .)
    AND             reduce using rule 37 (special_functions -> p_variance .)
    OR              reduce using rule 37 (special_functions -> p_variance .)
    SEMI            reduce using rule 37 (special_functions -> p_variance .)
    RPAREN          reduce using rule 37 (special_functions -> p_variance .)
    COMMA           reduce using rule 37 (special_functions -> p_variance .)
    RBRACKET        reduce using rule 37 (special_functions -> p_variance .)
    TO              reduce using rule 37 (special_functions -> p_variance .)
    BY              reduce using rule 37 (special_functions -> p_variance .)


state 111

    (38) special_functions -> standard_deviation .

    TIMES           reduce using rule 38 (special_functions -> standard_deviation .)
    DIVIDE          reduce using rule 38 (special_functions -> standard_deviation .)
    PLUS            reduce using rule 38 (special_functions -> standard_deviation .)
    MINUS           reduce using rule 38 (special_functions -> standard_deviation .)
    LT              reduce using rule 38 (special_functions -> standard_deviation .)
    LE              reduce using rule 38 (special_functions -> standard_deviation .)
    GT              reduce using rule 38 (special_functions -> standard_deviation .)
    GE              reduce using rule 38 (special_functions -> standard_deviation .)
    EQ              reduce using rule 38 (special_functions -> standard_deviation .)
    NE              reduce using rule 38 (special_functions -> standard_deviation .)
    AND             reduce using rule 38 (special_functions -> standard_deviation .)
    OR              reduce using rule 38 (special_functions -> standard_deviation .)
    SEMI            reduce using rule 38 (special_functions -> standard_deviation .)
    RPAREN          reduce using rule 38 (special_functions -> standard_deviation .)
    COMMA           reduce using rule 38 (special_functions -> standard_deviation .)
    RBRACKET        reduce using rule 38 (special_functions -> standard_deviation .)
    TO              reduce using rule 38 (special_functions -> standard_deviation .)
    BY              reduce using rule 38 (special_functions -> standard_deviation .)


state 112

    (39) special_functions -> p_standard_deviation .

    TIMES           reduce using rule 39 (special_functions -> p_standard_deviation .)
    DIVIDE          reduce using rule 39 (special_functions -> p_standard_deviation .)
    PLUS            reduce using rule 39 (special_functions -> p_standard_deviation .)
    MINUS           reduce using rule 39 (special_functions -> p_standard_deviation .)
    LT              reduce using rule 39 (special_functions -> p_standard_deviation .)
    LE              reduce using rule 39 (special_functions -> p_standard_deviation .)
    GT              reduce using rule 39 (special_functions -> p_standard_deviation .)
    GE              reduce using rule 39 (special_functions -> p_standard_deviation .)
    EQ              reduce using rule 39 (special_functions -> p_standard_deviation .)
    NE              reduce using rule 39 (special_functions -> p_standard_deviation .)
    AND             reduce using rule 39 (special_functions -> p_standard_deviation .)
    OR              reduce using rule 39 (special_functions -> p_standard_deviation .)
    SEMI            reduce using rule 39 (special_functions -> p_standard_deviation .)
    RPAREN          reduce using rule 39 (special_functions -> p_standard_deviation .)
    COMMA           reduce using rule 39 (special_functions -> p_standard_deviation .)
    RBRACKET        reduce using rule 39 (special_functions -> p_standard_deviation .)
    TO              reduce using rule 39 (special_functions -> p_standard_deviation .)
    BY              reduce using rule 39 (special_functions -> p_standard_deviation .)


state 113

    (74) varcte -> CTEI . np_add_cte_int
    (116) np_add_cte_int -> .

    TIMES           reduce using rule 116 (np_add_cte_int -> .)
    DIVIDE          reduce using rule 116 (np_add_cte_int -> .)
    PLUS            reduce using rule 116 (np_add_cte_int -> .)
    MINUS           reduce using rule 116 (np_add_cte_int -> .)
    LT              reduce using rule 116 (np_add_cte_int -> .)
    LE              reduce using rule 116 (np_add_cte_int -> .)
    GT              reduce using rule 116 (np_add_cte_int -> .)
    GE              reduce using rule 116 (np_add_cte_int -> .)
    EQ              reduce using rule 116 (np_add_cte_int -> .)
    NE              reduce using rule 116 (np_add_cte_int -> .)
    AND             reduce using rule 116 (np_add_cte_int -> .)
    OR              reduce using rule 116 (np_add_cte_int -> .)
    SEMI            reduce using rule 116 (np_add_cte_int -> .)
    RPAREN          reduce using rule 116 (np_add_cte_int -> .)
    COMMA           reduce using rule 116 (np_add_cte_int -> .)
    RBRACKET        reduce using rule 116 (np_add_cte_int -> .)
    TO              reduce using rule 116 (np_add_cte_int -> .)
    BY              reduce using rule 116 (np_add_cte_int -> .)

    np_add_cte_int                 shift and go to state 161

state 114

    (75) varcte -> CTEF . np_add_cte_float
    (117) np_add_cte_float -> .

    TIMES           reduce using rule 117 (np_add_cte_float -> .)
    DIVIDE          reduce using rule 117 (np_add_cte_float -> .)
    PLUS            reduce using rule 117 (np_add_cte_float -> .)
    MINUS           reduce using rule 117 (np_add_cte_float -> .)
    LT              reduce using rule 117 (np_add_cte_float -> .)
    LE              reduce using rule 117 (np_add_cte_float -> .)
    GT              reduce using rule 117 (np_add_cte_float -> .)
    GE              reduce using rule 117 (np_add_cte_float -> .)
    EQ              reduce using rule 117 (np_add_cte_float -> .)
    NE              reduce using rule 117 (np_add_cte_float -> .)
    AND             reduce using rule 117 (np_add_cte_float -> .)
    OR              reduce using rule 117 (np_add_cte_float -> .)
    SEMI            reduce using rule 117 (np_add_cte_float -> .)
    RPAREN          reduce using rule 117 (np_add_cte_float -> .)
    COMMA           reduce using rule 117 (np_add_cte_float -> .)
    RBRACKET        reduce using rule 117 (np_add_cte_float -> .)
    TO              reduce using rule 117 (np_add_cte_float -> .)
    BY              reduce using rule 117 (np_add_cte_float -> .)

    np_add_cte_float               shift and go to state 162

state 115

    (76) varcte -> CTEC . np_add_cte_char
    (118) np_add_cte_char -> .

    TIMES           reduce using rule 118 (np_add_cte_char -> .)
    DIVIDE          reduce using rule 118 (np_add_cte_char -> .)
    PLUS            reduce using rule 118 (np_add_cte_char -> .)
    MINUS           reduce using rule 118 (np_add_cte_char -> .)
    LT              reduce using rule 118 (np_add_cte_char -> .)
    LE              reduce using rule 118 (np_add_cte_char -> .)
    GT              reduce using rule 118 (np_add_cte_char -> .)
    GE              reduce using rule 118 (np_add_cte_char -> .)
    EQ              reduce using rule 118 (np_add_cte_char -> .)
    NE              reduce using rule 118 (np_add_cte_char -> .)
    AND             reduce using rule 118 (np_add_cte_char -> .)
    OR              reduce using rule 118 (np_add_cte_char -> .)
    SEMI            reduce using rule 118 (np_add_cte_char -> .)
    RPAREN          reduce using rule 118 (np_add_cte_char -> .)
    COMMA           reduce using rule 118 (np_add_cte_char -> .)
    RBRACKET        reduce using rule 118 (np_add_cte_char -> .)
    TO              reduce using rule 118 (np_add_cte_char -> .)
    BY              reduce using rule 118 (np_add_cte_char -> .)

    np_add_cte_char                shift and go to state 163

state 116

    (77) varcte -> TRUE . np_add_cte_bool
    (119) np_add_cte_bool -> .

    TIMES           reduce using rule 119 (np_add_cte_bool -> .)
    DIVIDE          reduce using rule 119 (np_add_cte_bool -> .)
    PLUS            reduce using rule 119 (np_add_cte_bool -> .)
    MINUS           reduce using rule 119 (np_add_cte_bool -> .)
    LT              reduce using rule 119 (np_add_cte_bool -> .)
    LE              reduce using rule 119 (np_add_cte_bool -> .)
    GT              reduce using rule 119 (np_add_cte_bool -> .)
    GE              reduce using rule 119 (np_add_cte_bool -> .)
    EQ              reduce using rule 119 (np_add_cte_bool -> .)
    NE              reduce using rule 119 (np_add_cte_bool -> .)
    AND             reduce using rule 119 (np_add_cte_bool -> .)
    OR              reduce using rule 119 (np_add_cte_bool -> .)
    SEMI            reduce using rule 119 (np_add_cte_bool -> .)
    RPAREN          reduce using rule 119 (np_add_cte_bool -> .)
    COMMA           reduce using rule 119 (np_add_cte_bool -> .)
    RBRACKET        reduce using rule 119 (np_add_cte_bool -> .)
    TO              reduce using rule 119 (np_add_cte_bool -> .)
    BY              reduce using rule 119 (np_add_cte_bool -> .)

    np_add_cte_bool                shift and go to state 164

state 117

    (78) varcte -> FALSE . np_add_cte_bool
    (119) np_add_cte_bool -> .

    TIMES           reduce using rule 119 (np_add_cte_bool -> .)
    DIVIDE          reduce using rule 119 (np_add_cte_bool -> .)
    PLUS            reduce using rule 119 (np_add_cte_bool -> .)
    MINUS           reduce using rule 119 (np_add_cte_bool -> .)
    LT              reduce using rule 119 (np_add_cte_bool -> .)
    LE              reduce using rule 119 (np_add_cte_bool -> .)
    GT              reduce using rule 119 (np_add_cte_bool -> .)
    GE              reduce using rule 119 (np_add_cte_bool -> .)
    EQ              reduce using rule 119 (np_add_cte_bool -> .)
    NE              reduce using rule 119 (np_add_cte_bool -> .)
    AND             reduce using rule 119 (np_add_cte_bool -> .)
    OR              reduce using rule 119 (np_add_cte_bool -> .)
    SEMI            reduce using rule 119 (np_add_cte_bool -> .)
    RPAREN          reduce using rule 119 (np_add_cte_bool -> .)
    COMMA           reduce using rule 119 (np_add_cte_bool -> .)
    RBRACKET        reduce using rule 119 (np_add_cte_bool -> .)
    TO              reduce using rule 119 (np_add_cte_bool -> .)
    BY              reduce using rule 119 (np_add_cte_bool -> .)

    np_add_cte_bool                shift and go to state 165

state 118

    (103) mean -> MEAN . LPAREN ID RPAREN np_add_mean_quadruple

    LPAREN          shift and go to state 166


state 119

    (104) median -> MEDIAN . LPAREN ID RPAREN np_add_median_quadruple

    LPAREN          shift and go to state 167


state 120

    (105) variance -> VARIANCE . LPAREN ID RPAREN np_add_variance_quadruple

    LPAREN          shift and go to state 168


state 121

    (106) p_variance -> PVARIANCE . LPAREN ID RPAREN np_add_p_variance_quadruple

    LPAREN          shift and go to state 169


state 122

    (107) standard_deviation -> STDEV . LPAREN ID RPAREN np_add_stdev_quadruple

    LPAREN          shift and go to state 170


state 123

    (108) p_standard_deviation -> PSTDEV . LPAREN ID RPAREN np_add_p_stdev_quadruple

    LPAREN          shift and go to state 171


state 124

    (95) non_conditional_loop -> FOR LPAREN . ID np_add_id EQUALS np_add_operator expression np_assign_expression_for TO expression np_non_conditional_limit BY expression RPAREN block np_non_conditional_end

    ID              shift and go to state 172


state 125

    (94) conditional_loop -> WHILE np_while_init . LPAREN expression RPAREN np_while_expression DO block np_while_end_block

    LPAREN          shift and go to state 173


state 126

    (25) params -> ID COLON . type np_add_vars np_add_params_type COMMA params
    (26) params -> ID COLON . type np_add_vars np_add_params_type
    (10) type -> . INT type_1
    (11) type -> . FLOAT type_1
    (12) type -> . CHAR type_1
    (13) type -> . BOOL type_1

    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    CHAR            shift and go to state 30
    BOOL            shift and go to state 31

    type                           shift and go to state 174

state 127

    (16) function -> FUNCTION ID COLON return_type np_create_new_scope LPAREN RPAREN np_set_func_start_point . block np_end_function
    (22) block -> . LBRACE statements RBRACE

    LBRACE          shift and go to state 48

    block                          shift and go to state 175

state 128

    (18) function -> FUNCTION ID COLON return_type np_create_new_scope LPAREN RPAREN vars . np_set_func_start_point block np_end_function
    (144) np_set_func_start_point -> .

    LBRACE          reduce using rule 144 (np_set_func_start_point -> .)

    np_set_func_start_point        shift and go to state 176

state 129

    (17) function -> FUNCTION ID COLON return_type np_create_new_scope LPAREN params RPAREN . np_set_func_start_point block np_end_function
    (19) function -> FUNCTION ID COLON return_type np_create_new_scope LPAREN params RPAREN . vars np_set_func_start_point block np_end_function
    (144) np_set_func_start_point -> .
    (5) vars -> . vars_1
    (6) vars_1 -> . LET vars_prima_1 vars_1
    (7) vars_1 -> . LET vars_prima_1

    LBRACE          reduce using rule 144 (np_set_func_start_point -> .)
    LET             shift and go to state 11

    np_set_func_start_point        shift and go to state 177
    vars                           shift and go to state 178
    vars_1                         shift and go to state 8

state 130

    (99) void_function_call -> ID LPAREN np_check_function_call . np_function_end_params RPAREN SEMI
    (100) void_function_call -> ID LPAREN np_check_function_call . function_call_1 np_function_end_params RPAREN SEMI
    (150) np_function_end_params -> .
    (101) function_call_1 -> . expression np_function_call_add_param
    (102) function_call_1 -> . expression np_function_call_add_param COMMA function_call_1
    (46) expression -> . exp
    (47) expression -> . expression1 np_add_quadruple_logical
    (48) expression -> . expression0 np_add_quadruple_or_and
    (57) exp -> . term np_add_quadruple_sum_min
    (58) exp -> . term np_add_quadruple_sum_min exp_1
    (51) expression1 -> . exp LT np_add_operator exp
    (52) expression1 -> . exp LE np_add_operator exp
    (53) expression1 -> . exp GT np_add_operator exp
    (54) expression1 -> . exp GE np_add_operator exp
    (55) expression1 -> . exp EQ np_add_operator exp
    (56) expression1 -> . exp NE np_add_operator exp
    (49) expression0 -> . expression AND np_add_operator expression
    (50) expression0 -> . expression OR np_add_operator expression
    (61) term -> . factor np_add_quadruple_times_div
    (62) term -> . factor np_add_quadruple_times_div term_2
    (65) factor -> . LPAREN np_add_paren expression RPAREN np_pop_paren
    (66) factor -> . ID np_add_id LBRACKET np_check_is_array expression np_verify_array_dim RBRACKET np_get_array_address
    (67) factor -> . factor_prima_1
    (68) factor -> . function_call
    (69) factor -> . special_functions
    (70) factor_prima_1 -> . PLUS varcte
    (71) factor_prima_1 -> . MINUS np_set_as_negative varcte
    (72) factor_prima_1 -> . varcte
    (97) function_call -> . ID LPAREN np_check_function_call np_function_end_params RPAREN
    (98) function_call -> . ID LPAREN np_check_function_call function_call_1 np_function_end_params RPAREN
    (34) special_functions -> . mean
    (35) special_functions -> . median
    (36) special_functions -> . variance
    (37) special_functions -> . p_variance
    (38) special_functions -> . standard_deviation
    (39) special_functions -> . p_standard_deviation
    (73) varcte -> . ID np_add_id
    (74) varcte -> . CTEI np_add_cte_int
    (75) varcte -> . CTEF np_add_cte_float
    (76) varcte -> . CTEC np_add_cte_char
    (77) varcte -> . TRUE np_add_cte_bool
    (78) varcte -> . FALSE np_add_cte_bool
    (103) mean -> . MEAN LPAREN ID RPAREN np_add_mean_quadruple
    (104) median -> . MEDIAN LPAREN ID RPAREN np_add_median_quadruple
    (105) variance -> . VARIANCE LPAREN ID RPAREN np_add_variance_quadruple
    (106) p_variance -> . PVARIANCE LPAREN ID RPAREN np_add_p_variance_quadruple
    (107) standard_deviation -> . STDEV LPAREN ID RPAREN np_add_stdev_quadruple
    (108) p_standard_deviation -> . PSTDEV LPAREN ID RPAREN np_add_p_stdev_quadruple

    RPAREN          reduce using rule 150 (np_function_end_params -> .)
    LPAREN          shift and go to state 99
    ID              shift and go to state 100
    PLUS            shift and go to state 104
    MINUS           shift and go to state 106
    CTEI            shift and go to state 113
    CTEF            shift and go to state 114
    CTEC            shift and go to state 115
    TRUE            shift and go to state 116
    FALSE           shift and go to state 117
    MEAN            shift and go to state 118
    MEDIAN          shift and go to state 119
    VARIANCE        shift and go to state 120
    PVARIANCE       shift and go to state 121
    STDEV           shift and go to state 122
    PSTDEV          shift and go to state 123

    np_function_end_params         shift and go to state 179
    function_call_1                shift and go to state 180
    expression                     shift and go to state 181
    exp                            shift and go to state 94
    expression1                    shift and go to state 95
    expression0                    shift and go to state 96
    term                           shift and go to state 97
    factor                         shift and go to state 98
    factor_prima_1                 shift and go to state 101
    function_call                  shift and go to state 102
    special_functions              shift and go to state 103
    varcte                         shift and go to state 105
    mean                           shift and go to state 107
    median                         shift and go to state 108
    variance                       shift and go to state 109
    p_variance                     shift and go to state 110
    standard_deviation             shift and go to state 111
    p_standard_deviation           shift and go to state 112

state 131

    (42) assignment -> ID np_add_id LBRACKET . np_check_is_array expression np_verify_array_dim RBRACKET np_get_array_address EQUALS np_add_operator expression np_assign_expression SEMI
    (151) np_check_is_array -> .

    LPAREN          reduce using rule 151 (np_check_is_array -> .)
    ID              reduce using rule 151 (np_check_is_array -> .)
    PLUS            reduce using rule 151 (np_check_is_array -> .)
    MINUS           reduce using rule 151 (np_check_is_array -> .)
    CTEI            reduce using rule 151 (np_check_is_array -> .)
    CTEF            reduce using rule 151 (np_check_is_array -> .)
    CTEC            reduce using rule 151 (np_check_is_array -> .)
    TRUE            reduce using rule 151 (np_check_is_array -> .)
    FALSE           reduce using rule 151 (np_check_is_array -> .)
    MEAN            reduce using rule 151 (np_check_is_array -> .)
    MEDIAN          reduce using rule 151 (np_check_is_array -> .)
    VARIANCE        reduce using rule 151 (np_check_is_array -> .)
    PVARIANCE       reduce using rule 151 (np_check_is_array -> .)
    STDEV           reduce using rule 151 (np_check_is_array -> .)
    PSTDEV          reduce using rule 151 (np_check_is_array -> .)

    np_check_is_array              shift and go to state 182

state 132

    (43) assignment -> ID np_add_id EQUALS . np_add_operator expression np_assign_expression SEMI
    (121) np_add_operator -> .

    LPAREN          reduce using rule 121 (np_add_operator -> .)
    ID              reduce using rule 121 (np_add_operator -> .)
    PLUS            reduce using rule 121 (np_add_operator -> .)
    MINUS           reduce using rule 121 (np_add_operator -> .)
    CTEI            reduce using rule 121 (np_add_operator -> .)
    CTEF            reduce using rule 121 (np_add_operator -> .)
    CTEC            reduce using rule 121 (np_add_operator -> .)
    TRUE            reduce using rule 121 (np_add_operator -> .)
    FALSE           reduce using rule 121 (np_add_operator -> .)
    MEAN            reduce using rule 121 (np_add_operator -> .)
    MEDIAN          reduce using rule 121 (np_add_operator -> .)
    VARIANCE        reduce using rule 121 (np_add_operator -> .)
    PVARIANCE       reduce using rule 121 (np_add_operator -> .)
    STDEV           reduce using rule 121 (np_add_operator -> .)
    PSTDEV          reduce using rule 121 (np_add_operator -> .)

    np_add_operator                shift and go to state 183

state 133

    (44) condition -> IF LPAREN expression . RPAREN np_condition_gotof block np_condition_end_gotof
    (45) condition -> IF LPAREN expression . RPAREN np_condition_gotof block ELSE np_condition_goto_else block np_condition_end_gotof
    (49) expression0 -> expression . AND np_add_operator expression
    (50) expression0 -> expression . OR np_add_operator expression

    RPAREN          shift and go to state 184
    AND             shift and go to state 143
    OR              shift and go to state 144


state 134

    (79) writing -> PRINT LPAREN writing_1 . RPAREN SEMI

    RPAREN          shift and go to state 185


state 135

    (81) writing_1 -> expression . np_add_print_quadruple_exp COMMA writing_1
    (83) writing_1 -> expression . np_add_print_quadruple_exp
    (49) expression0 -> expression . AND np_add_operator expression
    (50) expression0 -> expression . OR np_add_operator expression
    (139) np_add_print_quadruple_exp -> .

    AND             shift and go to state 143
    OR              shift and go to state 144
    COMMA           reduce using rule 139 (np_add_print_quadruple_exp -> .)
    RPAREN          reduce using rule 139 (np_add_print_quadruple_exp -> .)

    np_add_print_quadruple_exp     shift and go to state 186

state 136

    (82) writing_1 -> CTESTRING . np_add_print_quadruple_str COMMA writing_1
    (84) writing_1 -> CTESTRING . np_add_print_quadruple_str
    (138) np_add_print_quadruple_str -> .

    COMMA           reduce using rule 138 (np_add_print_quadruple_str -> .)
    RPAREN          reduce using rule 138 (np_add_print_quadruple_str -> .)

    np_add_print_quadruple_str     shift and go to state 187

state 137

    (80) writing -> PRINTLN LPAREN writing_2 . RPAREN SEMI

    RPAREN          shift and go to state 188


state 138

    (85) writing_2 -> expression . np_add_println_quadruple_exp COMMA writing_2
    (87) writing_2 -> expression . np_add_println_quadruple_exp
    (49) expression0 -> expression . AND np_add_operator expression
    (50) expression0 -> expression . OR np_add_operator expression
    (141) np_add_println_quadruple_exp -> .

    AND             shift and go to state 143
    OR              shift and go to state 144
    COMMA           reduce using rule 141 (np_add_println_quadruple_exp -> .)
    RPAREN          reduce using rule 141 (np_add_println_quadruple_exp -> .)

    np_add_println_quadruple_exp   shift and go to state 189

state 139

    (86) writing_2 -> CTESTRING . np_add_println_quadruple_str COMMA writing_2
    (88) writing_2 -> CTESTRING . np_add_println_quadruple_str
    (140) np_add_println_quadruple_str -> .

    COMMA           reduce using rule 140 (np_add_println_quadruple_str -> .)
    RPAREN          reduce using rule 140 (np_add_println_quadruple_str -> .)

    np_add_println_quadruple_str   shift and go to state 190

state 140

    (89) reading -> READ LPAREN reading_1 . RPAREN np_add_read_quadruple SEMI

    RPAREN          shift and go to state 191


state 141

    (90) reading_1 -> ID . np_add_id
    (91) reading_1 -> ID . np_add_id LBRACKET np_check_is_array expression np_verify_array_dim RBRACKET np_get_array_address
    (115) np_add_id -> .

    LBRACKET        reduce using rule 115 (np_add_id -> .)
    RPAREN          reduce using rule 115 (np_add_id -> .)

    np_add_id                      shift and go to state 192

state 142

    (96) return -> RETURN expression np_add_return_quadruple . SEMI

    SEMI            shift and go to state 193


state 143

    (49) expression0 -> expression AND . np_add_operator expression
    (121) np_add_operator -> .

    LPAREN          reduce using rule 121 (np_add_operator -> .)
    ID              reduce using rule 121 (np_add_operator -> .)
    PLUS            reduce using rule 121 (np_add_operator -> .)
    MINUS           reduce using rule 121 (np_add_operator -> .)
    CTEI            reduce using rule 121 (np_add_operator -> .)
    CTEF            reduce using rule 121 (np_add_operator -> .)
    CTEC            reduce using rule 121 (np_add_operator -> .)
    TRUE            reduce using rule 121 (np_add_operator -> .)
    FALSE           reduce using rule 121 (np_add_operator -> .)
    MEAN            reduce using rule 121 (np_add_operator -> .)
    MEDIAN          reduce using rule 121 (np_add_operator -> .)
    VARIANCE        reduce using rule 121 (np_add_operator -> .)
    PVARIANCE       reduce using rule 121 (np_add_operator -> .)
    STDEV           reduce using rule 121 (np_add_operator -> .)
    PSTDEV          reduce using rule 121 (np_add_operator -> .)

    np_add_operator                shift and go to state 194

state 144

    (50) expression0 -> expression OR . np_add_operator expression
    (121) np_add_operator -> .

    LPAREN          reduce using rule 121 (np_add_operator -> .)
    ID              reduce using rule 121 (np_add_operator -> .)
    PLUS            reduce using rule 121 (np_add_operator -> .)
    MINUS           reduce using rule 121 (np_add_operator -> .)
    CTEI            reduce using rule 121 (np_add_operator -> .)
    CTEF            reduce using rule 121 (np_add_operator -> .)
    CTEC            reduce using rule 121 (np_add_operator -> .)
    TRUE            reduce using rule 121 (np_add_operator -> .)
    FALSE           reduce using rule 121 (np_add_operator -> .)
    MEAN            reduce using rule 121 (np_add_operator -> .)
    MEDIAN          reduce using rule 121 (np_add_operator -> .)
    VARIANCE        reduce using rule 121 (np_add_operator -> .)
    PVARIANCE       reduce using rule 121 (np_add_operator -> .)
    STDEV           reduce using rule 121 (np_add_operator -> .)
    PSTDEV          reduce using rule 121 (np_add_operator -> .)

    np_add_operator                shift and go to state 195

state 145

    (51) expression1 -> exp LT . np_add_operator exp
    (121) np_add_operator -> .

    LPAREN          reduce using rule 121 (np_add_operator -> .)
    ID              reduce using rule 121 (np_add_operator -> .)
    PLUS            reduce using rule 121 (np_add_operator -> .)
    MINUS           reduce using rule 121 (np_add_operator -> .)
    CTEI            reduce using rule 121 (np_add_operator -> .)
    CTEF            reduce using rule 121 (np_add_operator -> .)
    CTEC            reduce using rule 121 (np_add_operator -> .)
    TRUE            reduce using rule 121 (np_add_operator -> .)
    FALSE           reduce using rule 121 (np_add_operator -> .)
    MEAN            reduce using rule 121 (np_add_operator -> .)
    MEDIAN          reduce using rule 121 (np_add_operator -> .)
    VARIANCE        reduce using rule 121 (np_add_operator -> .)
    PVARIANCE       reduce using rule 121 (np_add_operator -> .)
    STDEV           reduce using rule 121 (np_add_operator -> .)
    PSTDEV          reduce using rule 121 (np_add_operator -> .)

    np_add_operator                shift and go to state 196

state 146

    (52) expression1 -> exp LE . np_add_operator exp
    (121) np_add_operator -> .

    LPAREN          reduce using rule 121 (np_add_operator -> .)
    ID              reduce using rule 121 (np_add_operator -> .)
    PLUS            reduce using rule 121 (np_add_operator -> .)
    MINUS           reduce using rule 121 (np_add_operator -> .)
    CTEI            reduce using rule 121 (np_add_operator -> .)
    CTEF            reduce using rule 121 (np_add_operator -> .)
    CTEC            reduce using rule 121 (np_add_operator -> .)
    TRUE            reduce using rule 121 (np_add_operator -> .)
    FALSE           reduce using rule 121 (np_add_operator -> .)
    MEAN            reduce using rule 121 (np_add_operator -> .)
    MEDIAN          reduce using rule 121 (np_add_operator -> .)
    VARIANCE        reduce using rule 121 (np_add_operator -> .)
    PVARIANCE       reduce using rule 121 (np_add_operator -> .)
    STDEV           reduce using rule 121 (np_add_operator -> .)
    PSTDEV          reduce using rule 121 (np_add_operator -> .)

    np_add_operator                shift and go to state 197

state 147

    (53) expression1 -> exp GT . np_add_operator exp
    (121) np_add_operator -> .

    LPAREN          reduce using rule 121 (np_add_operator -> .)
    ID              reduce using rule 121 (np_add_operator -> .)
    PLUS            reduce using rule 121 (np_add_operator -> .)
    MINUS           reduce using rule 121 (np_add_operator -> .)
    CTEI            reduce using rule 121 (np_add_operator -> .)
    CTEF            reduce using rule 121 (np_add_operator -> .)
    CTEC            reduce using rule 121 (np_add_operator -> .)
    TRUE            reduce using rule 121 (np_add_operator -> .)
    FALSE           reduce using rule 121 (np_add_operator -> .)
    MEAN            reduce using rule 121 (np_add_operator -> .)
    MEDIAN          reduce using rule 121 (np_add_operator -> .)
    VARIANCE        reduce using rule 121 (np_add_operator -> .)
    PVARIANCE       reduce using rule 121 (np_add_operator -> .)
    STDEV           reduce using rule 121 (np_add_operator -> .)
    PSTDEV          reduce using rule 121 (np_add_operator -> .)

    np_add_operator                shift and go to state 198

state 148

    (54) expression1 -> exp GE . np_add_operator exp
    (121) np_add_operator -> .

    LPAREN          reduce using rule 121 (np_add_operator -> .)
    ID              reduce using rule 121 (np_add_operator -> .)
    PLUS            reduce using rule 121 (np_add_operator -> .)
    MINUS           reduce using rule 121 (np_add_operator -> .)
    CTEI            reduce using rule 121 (np_add_operator -> .)
    CTEF            reduce using rule 121 (np_add_operator -> .)
    CTEC            reduce using rule 121 (np_add_operator -> .)
    TRUE            reduce using rule 121 (np_add_operator -> .)
    FALSE           reduce using rule 121 (np_add_operator -> .)
    MEAN            reduce using rule 121 (np_add_operator -> .)
    MEDIAN          reduce using rule 121 (np_add_operator -> .)
    VARIANCE        reduce using rule 121 (np_add_operator -> .)
    PVARIANCE       reduce using rule 121 (np_add_operator -> .)
    STDEV           reduce using rule 121 (np_add_operator -> .)
    PSTDEV          reduce using rule 121 (np_add_operator -> .)

    np_add_operator                shift and go to state 199

state 149

    (55) expression1 -> exp EQ . np_add_operator exp
    (121) np_add_operator -> .

    LPAREN          reduce using rule 121 (np_add_operator -> .)
    ID              reduce using rule 121 (np_add_operator -> .)
    PLUS            reduce using rule 121 (np_add_operator -> .)
    MINUS           reduce using rule 121 (np_add_operator -> .)
    CTEI            reduce using rule 121 (np_add_operator -> .)
    CTEF            reduce using rule 121 (np_add_operator -> .)
    CTEC            reduce using rule 121 (np_add_operator -> .)
    TRUE            reduce using rule 121 (np_add_operator -> .)
    FALSE           reduce using rule 121 (np_add_operator -> .)
    MEAN            reduce using rule 121 (np_add_operator -> .)
    MEDIAN          reduce using rule 121 (np_add_operator -> .)
    VARIANCE        reduce using rule 121 (np_add_operator -> .)
    PVARIANCE       reduce using rule 121 (np_add_operator -> .)
    STDEV           reduce using rule 121 (np_add_operator -> .)
    PSTDEV          reduce using rule 121 (np_add_operator -> .)

    np_add_operator                shift and go to state 200

state 150

    (56) expression1 -> exp NE . np_add_operator exp
    (121) np_add_operator -> .

    LPAREN          reduce using rule 121 (np_add_operator -> .)
    ID              reduce using rule 121 (np_add_operator -> .)
    PLUS            reduce using rule 121 (np_add_operator -> .)
    MINUS           reduce using rule 121 (np_add_operator -> .)
    CTEI            reduce using rule 121 (np_add_operator -> .)
    CTEF            reduce using rule 121 (np_add_operator -> .)
    CTEC            reduce using rule 121 (np_add_operator -> .)
    TRUE            reduce using rule 121 (np_add_operator -> .)
    FALSE           reduce using rule 121 (np_add_operator -> .)
    MEAN            reduce using rule 121 (np_add_operator -> .)
    MEDIAN          reduce using rule 121 (np_add_operator -> .)
    VARIANCE        reduce using rule 121 (np_add_operator -> .)
    PVARIANCE       reduce using rule 121 (np_add_operator -> .)
    STDEV           reduce using rule 121 (np_add_operator -> .)
    PSTDEV          reduce using rule 121 (np_add_operator -> .)

    np_add_operator                shift and go to state 201

state 151

    (47) expression -> expression1 np_add_quadruple_logical .

    AND             reduce using rule 47 (expression -> expression1 np_add_quadruple_logical .)
    OR              reduce using rule 47 (expression -> expression1 np_add_quadruple_logical .)
    SEMI            reduce using rule 47 (expression -> expression1 np_add_quadruple_logical .)
    RPAREN          reduce using rule 47 (expression -> expression1 np_add_quadruple_logical .)
    COMMA           reduce using rule 47 (expression -> expression1 np_add_quadruple_logical .)
    RBRACKET        reduce using rule 47 (expression -> expression1 np_add_quadruple_logical .)
    TO              reduce using rule 47 (expression -> expression1 np_add_quadruple_logical .)
    BY              reduce using rule 47 (expression -> expression1 np_add_quadruple_logical .)


state 152

    (48) expression -> expression0 np_add_quadruple_or_and .

    AND             reduce using rule 48 (expression -> expression0 np_add_quadruple_or_and .)
    OR              reduce using rule 48 (expression -> expression0 np_add_quadruple_or_and .)
    SEMI            reduce using rule 48 (expression -> expression0 np_add_quadruple_or_and .)
    RPAREN          reduce using rule 48 (expression -> expression0 np_add_quadruple_or_and .)
    COMMA           reduce using rule 48 (expression -> expression0 np_add_quadruple_or_and .)
    RBRACKET        reduce using rule 48 (expression -> expression0 np_add_quadruple_or_and .)
    TO              reduce using rule 48 (expression -> expression0 np_add_quadruple_or_and .)
    BY              reduce using rule 48 (expression -> expression0 np_add_quadruple_or_and .)


state 153

    (57) exp -> term np_add_quadruple_sum_min .
    (58) exp -> term np_add_quadruple_sum_min . exp_1
    (59) exp_1 -> . PLUS np_add_operator exp
    (60) exp_1 -> . MINUS np_add_operator exp

    LT              reduce using rule 57 (exp -> term np_add_quadruple_sum_min .)
    LE              reduce using rule 57 (exp -> term np_add_quadruple_sum_min .)
    GT              reduce using rule 57 (exp -> term np_add_quadruple_sum_min .)
    GE              reduce using rule 57 (exp -> term np_add_quadruple_sum_min .)
    EQ              reduce using rule 57 (exp -> term np_add_quadruple_sum_min .)
    NE              reduce using rule 57 (exp -> term np_add_quadruple_sum_min .)
    AND             reduce using rule 57 (exp -> term np_add_quadruple_sum_min .)
    OR              reduce using rule 57 (exp -> term np_add_quadruple_sum_min .)
    SEMI            reduce using rule 57 (exp -> term np_add_quadruple_sum_min .)
    RPAREN          reduce using rule 57 (exp -> term np_add_quadruple_sum_min .)
    COMMA           reduce using rule 57 (exp -> term np_add_quadruple_sum_min .)
    RBRACKET        reduce using rule 57 (exp -> term np_add_quadruple_sum_min .)
    TO              reduce using rule 57 (exp -> term np_add_quadruple_sum_min .)
    BY              reduce using rule 57 (exp -> term np_add_quadruple_sum_min .)
    PLUS            shift and go to state 203
    MINUS           shift and go to state 204

    exp_1                          shift and go to state 202

state 154

    (61) term -> factor np_add_quadruple_times_div .
    (62) term -> factor np_add_quadruple_times_div . term_2
    (63) term_2 -> . TIMES np_add_operator term
    (64) term_2 -> . DIVIDE np_add_operator term

    PLUS            reduce using rule 61 (term -> factor np_add_quadruple_times_div .)
    MINUS           reduce using rule 61 (term -> factor np_add_quadruple_times_div .)
    LT              reduce using rule 61 (term -> factor np_add_quadruple_times_div .)
    LE              reduce using rule 61 (term -> factor np_add_quadruple_times_div .)
    GT              reduce using rule 61 (term -> factor np_add_quadruple_times_div .)
    GE              reduce using rule 61 (term -> factor np_add_quadruple_times_div .)
    EQ              reduce using rule 61 (term -> factor np_add_quadruple_times_div .)
    NE              reduce using rule 61 (term -> factor np_add_quadruple_times_div .)
    AND             reduce using rule 61 (term -> factor np_add_quadruple_times_div .)
    OR              reduce using rule 61 (term -> factor np_add_quadruple_times_div .)
    SEMI            reduce using rule 61 (term -> factor np_add_quadruple_times_div .)
    RPAREN          reduce using rule 61 (term -> factor np_add_quadruple_times_div .)
    COMMA           reduce using rule 61 (term -> factor np_add_quadruple_times_div .)
    RBRACKET        reduce using rule 61 (term -> factor np_add_quadruple_times_div .)
    TO              reduce using rule 61 (term -> factor np_add_quadruple_times_div .)
    BY              reduce using rule 61 (term -> factor np_add_quadruple_times_div .)
    TIMES           shift and go to state 206
    DIVIDE          shift and go to state 207

    term_2                         shift and go to state 205

state 155

    (65) factor -> LPAREN np_add_paren . expression RPAREN np_pop_paren
    (46) expression -> . exp
    (47) expression -> . expression1 np_add_quadruple_logical
    (48) expression -> . expression0 np_add_quadruple_or_and
    (57) exp -> . term np_add_quadruple_sum_min
    (58) exp -> . term np_add_quadruple_sum_min exp_1
    (51) expression1 -> . exp LT np_add_operator exp
    (52) expression1 -> . exp LE np_add_operator exp
    (53) expression1 -> . exp GT np_add_operator exp
    (54) expression1 -> . exp GE np_add_operator exp
    (55) expression1 -> . exp EQ np_add_operator exp
    (56) expression1 -> . exp NE np_add_operator exp
    (49) expression0 -> . expression AND np_add_operator expression
    (50) expression0 -> . expression OR np_add_operator expression
    (61) term -> . factor np_add_quadruple_times_div
    (62) term -> . factor np_add_quadruple_times_div term_2
    (65) factor -> . LPAREN np_add_paren expression RPAREN np_pop_paren
    (66) factor -> . ID np_add_id LBRACKET np_check_is_array expression np_verify_array_dim RBRACKET np_get_array_address
    (67) factor -> . factor_prima_1
    (68) factor -> . function_call
    (69) factor -> . special_functions
    (70) factor_prima_1 -> . PLUS varcte
    (71) factor_prima_1 -> . MINUS np_set_as_negative varcte
    (72) factor_prima_1 -> . varcte
    (97) function_call -> . ID LPAREN np_check_function_call np_function_end_params RPAREN
    (98) function_call -> . ID LPAREN np_check_function_call function_call_1 np_function_end_params RPAREN
    (34) special_functions -> . mean
    (35) special_functions -> . median
    (36) special_functions -> . variance
    (37) special_functions -> . p_variance
    (38) special_functions -> . standard_deviation
    (39) special_functions -> . p_standard_deviation
    (73) varcte -> . ID np_add_id
    (74) varcte -> . CTEI np_add_cte_int
    (75) varcte -> . CTEF np_add_cte_float
    (76) varcte -> . CTEC np_add_cte_char
    (77) varcte -> . TRUE np_add_cte_bool
    (78) varcte -> . FALSE np_add_cte_bool
    (103) mean -> . MEAN LPAREN ID RPAREN np_add_mean_quadruple
    (104) median -> . MEDIAN LPAREN ID RPAREN np_add_median_quadruple
    (105) variance -> . VARIANCE LPAREN ID RPAREN np_add_variance_quadruple
    (106) p_variance -> . PVARIANCE LPAREN ID RPAREN np_add_p_variance_quadruple
    (107) standard_deviation -> . STDEV LPAREN ID RPAREN np_add_stdev_quadruple
    (108) p_standard_deviation -> . PSTDEV LPAREN ID RPAREN np_add_p_stdev_quadruple

    LPAREN          shift and go to state 99
    ID              shift and go to state 100
    PLUS            shift and go to state 104
    MINUS           shift and go to state 106
    CTEI            shift and go to state 113
    CTEF            shift and go to state 114
    CTEC            shift and go to state 115
    TRUE            shift and go to state 116
    FALSE           shift and go to state 117
    MEAN            shift and go to state 118
    MEDIAN          shift and go to state 119
    VARIANCE        shift and go to state 120
    PVARIANCE       shift and go to state 121
    STDEV           shift and go to state 122
    PSTDEV          shift and go to state 123

    expression                     shift and go to state 208
    exp                            shift and go to state 94
    expression1                    shift and go to state 95
    expression0                    shift and go to state 96
    term                           shift and go to state 97
    factor                         shift and go to state 98
    factor_prima_1                 shift and go to state 101
    function_call                  shift and go to state 102
    special_functions              shift and go to state 103
    varcte                         shift and go to state 105
    mean                           shift and go to state 107
    median                         shift and go to state 108
    variance                       shift and go to state 109
    p_variance                     shift and go to state 110
    standard_deviation             shift and go to state 111
    p_standard_deviation           shift and go to state 112

state 156

    (66) factor -> ID np_add_id . LBRACKET np_check_is_array expression np_verify_array_dim RBRACKET np_get_array_address
    (73) varcte -> ID np_add_id .

    LBRACKET        shift and go to state 209
    TIMES           reduce using rule 73 (varcte -> ID np_add_id .)
    DIVIDE          reduce using rule 73 (varcte -> ID np_add_id .)
    PLUS            reduce using rule 73 (varcte -> ID np_add_id .)
    MINUS           reduce using rule 73 (varcte -> ID np_add_id .)
    LT              reduce using rule 73 (varcte -> ID np_add_id .)
    LE              reduce using rule 73 (varcte -> ID np_add_id .)
    GT              reduce using rule 73 (varcte -> ID np_add_id .)
    GE              reduce using rule 73 (varcte -> ID np_add_id .)
    EQ              reduce using rule 73 (varcte -> ID np_add_id .)
    NE              reduce using rule 73 (varcte -> ID np_add_id .)
    AND             reduce using rule 73 (varcte -> ID np_add_id .)
    OR              reduce using rule 73 (varcte -> ID np_add_id .)
    SEMI            reduce using rule 73 (varcte -> ID np_add_id .)
    RPAREN          reduce using rule 73 (varcte -> ID np_add_id .)
    COMMA           reduce using rule 73 (varcte -> ID np_add_id .)
    RBRACKET        reduce using rule 73 (varcte -> ID np_add_id .)
    TO              reduce using rule 73 (varcte -> ID np_add_id .)
    BY              reduce using rule 73 (varcte -> ID np_add_id .)


state 157

    (97) function_call -> ID LPAREN . np_check_function_call np_function_end_params RPAREN
    (98) function_call -> ID LPAREN . np_check_function_call function_call_1 np_function_end_params RPAREN
    (148) np_check_function_call -> .

    LPAREN          reduce using rule 148 (np_check_function_call -> .)
    ID              reduce using rule 148 (np_check_function_call -> .)
    PLUS            reduce using rule 148 (np_check_function_call -> .)
    MINUS           reduce using rule 148 (np_check_function_call -> .)
    CTEI            reduce using rule 148 (np_check_function_call -> .)
    CTEF            reduce using rule 148 (np_check_function_call -> .)
    CTEC            reduce using rule 148 (np_check_function_call -> .)
    TRUE            reduce using rule 148 (np_check_function_call -> .)
    FALSE           reduce using rule 148 (np_check_function_call -> .)
    MEAN            reduce using rule 148 (np_check_function_call -> .)
    MEDIAN          reduce using rule 148 (np_check_function_call -> .)
    VARIANCE        reduce using rule 148 (np_check_function_call -> .)
    PVARIANCE       reduce using rule 148 (np_check_function_call -> .)
    STDEV           reduce using rule 148 (np_check_function_call -> .)
    PSTDEV          reduce using rule 148 (np_check_function_call -> .)
    RPAREN          reduce using rule 148 (np_check_function_call -> .)

    np_check_function_call         shift and go to state 210

state 158

    (70) factor_prima_1 -> PLUS varcte .

    TIMES           reduce using rule 70 (factor_prima_1 -> PLUS varcte .)
    DIVIDE          reduce using rule 70 (factor_prima_1 -> PLUS varcte .)
    PLUS            reduce using rule 70 (factor_prima_1 -> PLUS varcte .)
    MINUS           reduce using rule 70 (factor_prima_1 -> PLUS varcte .)
    LT              reduce using rule 70 (factor_prima_1 -> PLUS varcte .)
    LE              reduce using rule 70 (factor_prima_1 -> PLUS varcte .)
    GT              reduce using rule 70 (factor_prima_1 -> PLUS varcte .)
    GE              reduce using rule 70 (factor_prima_1 -> PLUS varcte .)
    EQ              reduce using rule 70 (factor_prima_1 -> PLUS varcte .)
    NE              reduce using rule 70 (factor_prima_1 -> PLUS varcte .)
    AND             reduce using rule 70 (factor_prima_1 -> PLUS varcte .)
    OR              reduce using rule 70 (factor_prima_1 -> PLUS varcte .)
    SEMI            reduce using rule 70 (factor_prima_1 -> PLUS varcte .)
    RPAREN          reduce using rule 70 (factor_prima_1 -> PLUS varcte .)
    COMMA           reduce using rule 70 (factor_prima_1 -> PLUS varcte .)
    RBRACKET        reduce using rule 70 (factor_prima_1 -> PLUS varcte .)
    TO              reduce using rule 70 (factor_prima_1 -> PLUS varcte .)
    BY              reduce using rule 70 (factor_prima_1 -> PLUS varcte .)


state 159

    (73) varcte -> ID . np_add_id
    (115) np_add_id -> .

    TIMES           reduce using rule 115 (np_add_id -> .)
    DIVIDE          reduce using rule 115 (np_add_id -> .)
    PLUS            reduce using rule 115 (np_add_id -> .)
    MINUS           reduce using rule 115 (np_add_id -> .)
    LT              reduce using rule 115 (np_add_id -> .)
    LE              reduce using rule 115 (np_add_id -> .)
    GT              reduce using rule 115 (np_add_id -> .)
    GE              reduce using rule 115 (np_add_id -> .)
    EQ              reduce using rule 115 (np_add_id -> .)
    NE              reduce using rule 115 (np_add_id -> .)
    AND             reduce using rule 115 (np_add_id -> .)
    OR              reduce using rule 115 (np_add_id -> .)
    SEMI            reduce using rule 115 (np_add_id -> .)
    RPAREN          reduce using rule 115 (np_add_id -> .)
    COMMA           reduce using rule 115 (np_add_id -> .)
    RBRACKET        reduce using rule 115 (np_add_id -> .)
    TO              reduce using rule 115 (np_add_id -> .)
    BY              reduce using rule 115 (np_add_id -> .)

    np_add_id                      shift and go to state 211

state 160

    (71) factor_prima_1 -> MINUS np_set_as_negative . varcte
    (73) varcte -> . ID np_add_id
    (74) varcte -> . CTEI np_add_cte_int
    (75) varcte -> . CTEF np_add_cte_float
    (76) varcte -> . CTEC np_add_cte_char
    (77) varcte -> . TRUE np_add_cte_bool
    (78) varcte -> . FALSE np_add_cte_bool

    ID              shift and go to state 159
    CTEI            shift and go to state 113
    CTEF            shift and go to state 114
    CTEC            shift and go to state 115
    TRUE            shift and go to state 116
    FALSE           shift and go to state 117

    varcte                         shift and go to state 212

state 161

    (74) varcte -> CTEI np_add_cte_int .

    TIMES           reduce using rule 74 (varcte -> CTEI np_add_cte_int .)
    DIVIDE          reduce using rule 74 (varcte -> CTEI np_add_cte_int .)
    PLUS            reduce using rule 74 (varcte -> CTEI np_add_cte_int .)
    MINUS           reduce using rule 74 (varcte -> CTEI np_add_cte_int .)
    LT              reduce using rule 74 (varcte -> CTEI np_add_cte_int .)
    LE              reduce using rule 74 (varcte -> CTEI np_add_cte_int .)
    GT              reduce using rule 74 (varcte -> CTEI np_add_cte_int .)
    GE              reduce using rule 74 (varcte -> CTEI np_add_cte_int .)
    EQ              reduce using rule 74 (varcte -> CTEI np_add_cte_int .)
    NE              reduce using rule 74 (varcte -> CTEI np_add_cte_int .)
    AND             reduce using rule 74 (varcte -> CTEI np_add_cte_int .)
    OR              reduce using rule 74 (varcte -> CTEI np_add_cte_int .)
    SEMI            reduce using rule 74 (varcte -> CTEI np_add_cte_int .)
    RPAREN          reduce using rule 74 (varcte -> CTEI np_add_cte_int .)
    COMMA           reduce using rule 74 (varcte -> CTEI np_add_cte_int .)
    RBRACKET        reduce using rule 74 (varcte -> CTEI np_add_cte_int .)
    TO              reduce using rule 74 (varcte -> CTEI np_add_cte_int .)
    BY              reduce using rule 74 (varcte -> CTEI np_add_cte_int .)


state 162

    (75) varcte -> CTEF np_add_cte_float .

    TIMES           reduce using rule 75 (varcte -> CTEF np_add_cte_float .)
    DIVIDE          reduce using rule 75 (varcte -> CTEF np_add_cte_float .)
    PLUS            reduce using rule 75 (varcte -> CTEF np_add_cte_float .)
    MINUS           reduce using rule 75 (varcte -> CTEF np_add_cte_float .)
    LT              reduce using rule 75 (varcte -> CTEF np_add_cte_float .)
    LE              reduce using rule 75 (varcte -> CTEF np_add_cte_float .)
    GT              reduce using rule 75 (varcte -> CTEF np_add_cte_float .)
    GE              reduce using rule 75 (varcte -> CTEF np_add_cte_float .)
    EQ              reduce using rule 75 (varcte -> CTEF np_add_cte_float .)
    NE              reduce using rule 75 (varcte -> CTEF np_add_cte_float .)
    AND             reduce using rule 75 (varcte -> CTEF np_add_cte_float .)
    OR              reduce using rule 75 (varcte -> CTEF np_add_cte_float .)
    SEMI            reduce using rule 75 (varcte -> CTEF np_add_cte_float .)
    RPAREN          reduce using rule 75 (varcte -> CTEF np_add_cte_float .)
    COMMA           reduce using rule 75 (varcte -> CTEF np_add_cte_float .)
    RBRACKET        reduce using rule 75 (varcte -> CTEF np_add_cte_float .)
    TO              reduce using rule 75 (varcte -> CTEF np_add_cte_float .)
    BY              reduce using rule 75 (varcte -> CTEF np_add_cte_float .)


state 163

    (76) varcte -> CTEC np_add_cte_char .

    TIMES           reduce using rule 76 (varcte -> CTEC np_add_cte_char .)
    DIVIDE          reduce using rule 76 (varcte -> CTEC np_add_cte_char .)
    PLUS            reduce using rule 76 (varcte -> CTEC np_add_cte_char .)
    MINUS           reduce using rule 76 (varcte -> CTEC np_add_cte_char .)
    LT              reduce using rule 76 (varcte -> CTEC np_add_cte_char .)
    LE              reduce using rule 76 (varcte -> CTEC np_add_cte_char .)
    GT              reduce using rule 76 (varcte -> CTEC np_add_cte_char .)
    GE              reduce using rule 76 (varcte -> CTEC np_add_cte_char .)
    EQ              reduce using rule 76 (varcte -> CTEC np_add_cte_char .)
    NE              reduce using rule 76 (varcte -> CTEC np_add_cte_char .)
    AND             reduce using rule 76 (varcte -> CTEC np_add_cte_char .)
    OR              reduce using rule 76 (varcte -> CTEC np_add_cte_char .)
    SEMI            reduce using rule 76 (varcte -> CTEC np_add_cte_char .)
    RPAREN          reduce using rule 76 (varcte -> CTEC np_add_cte_char .)
    COMMA           reduce using rule 76 (varcte -> CTEC np_add_cte_char .)
    RBRACKET        reduce using rule 76 (varcte -> CTEC np_add_cte_char .)
    TO              reduce using rule 76 (varcte -> CTEC np_add_cte_char .)
    BY              reduce using rule 76 (varcte -> CTEC np_add_cte_char .)


state 164

    (77) varcte -> TRUE np_add_cte_bool .

    TIMES           reduce using rule 77 (varcte -> TRUE np_add_cte_bool .)
    DIVIDE          reduce using rule 77 (varcte -> TRUE np_add_cte_bool .)
    PLUS            reduce using rule 77 (varcte -> TRUE np_add_cte_bool .)
    MINUS           reduce using rule 77 (varcte -> TRUE np_add_cte_bool .)
    LT              reduce using rule 77 (varcte -> TRUE np_add_cte_bool .)
    LE              reduce using rule 77 (varcte -> TRUE np_add_cte_bool .)
    GT              reduce using rule 77 (varcte -> TRUE np_add_cte_bool .)
    GE              reduce using rule 77 (varcte -> TRUE np_add_cte_bool .)
    EQ              reduce using rule 77 (varcte -> TRUE np_add_cte_bool .)
    NE              reduce using rule 77 (varcte -> TRUE np_add_cte_bool .)
    AND             reduce using rule 77 (varcte -> TRUE np_add_cte_bool .)
    OR              reduce using rule 77 (varcte -> TRUE np_add_cte_bool .)
    SEMI            reduce using rule 77 (varcte -> TRUE np_add_cte_bool .)
    RPAREN          reduce using rule 77 (varcte -> TRUE np_add_cte_bool .)
    COMMA           reduce using rule 77 (varcte -> TRUE np_add_cte_bool .)
    RBRACKET        reduce using rule 77 (varcte -> TRUE np_add_cte_bool .)
    TO              reduce using rule 77 (varcte -> TRUE np_add_cte_bool .)
    BY              reduce using rule 77 (varcte -> TRUE np_add_cte_bool .)


state 165

    (78) varcte -> FALSE np_add_cte_bool .

    TIMES           reduce using rule 78 (varcte -> FALSE np_add_cte_bool .)
    DIVIDE          reduce using rule 78 (varcte -> FALSE np_add_cte_bool .)
    PLUS            reduce using rule 78 (varcte -> FALSE np_add_cte_bool .)
    MINUS           reduce using rule 78 (varcte -> FALSE np_add_cte_bool .)
    LT              reduce using rule 78 (varcte -> FALSE np_add_cte_bool .)
    LE              reduce using rule 78 (varcte -> FALSE np_add_cte_bool .)
    GT              reduce using rule 78 (varcte -> FALSE np_add_cte_bool .)
    GE              reduce using rule 78 (varcte -> FALSE np_add_cte_bool .)
    EQ              reduce using rule 78 (varcte -> FALSE np_add_cte_bool .)
    NE              reduce using rule 78 (varcte -> FALSE np_add_cte_bool .)
    AND             reduce using rule 78 (varcte -> FALSE np_add_cte_bool .)
    OR              reduce using rule 78 (varcte -> FALSE np_add_cte_bool .)
    SEMI            reduce using rule 78 (varcte -> FALSE np_add_cte_bool .)
    RPAREN          reduce using rule 78 (varcte -> FALSE np_add_cte_bool .)
    COMMA           reduce using rule 78 (varcte -> FALSE np_add_cte_bool .)
    RBRACKET        reduce using rule 78 (varcte -> FALSE np_add_cte_bool .)
    TO              reduce using rule 78 (varcte -> FALSE np_add_cte_bool .)
    BY              reduce using rule 78 (varcte -> FALSE np_add_cte_bool .)


state 166

    (103) mean -> MEAN LPAREN . ID RPAREN np_add_mean_quadruple

    ID              shift and go to state 213


state 167

    (104) median -> MEDIAN LPAREN . ID RPAREN np_add_median_quadruple

    ID              shift and go to state 214


state 168

    (105) variance -> VARIANCE LPAREN . ID RPAREN np_add_variance_quadruple

    ID              shift and go to state 215


state 169

    (106) p_variance -> PVARIANCE LPAREN . ID RPAREN np_add_p_variance_quadruple

    ID              shift and go to state 216


state 170

    (107) standard_deviation -> STDEV LPAREN . ID RPAREN np_add_stdev_quadruple

    ID              shift and go to state 217


state 171

    (108) p_standard_deviation -> PSTDEV LPAREN . ID RPAREN np_add_p_stdev_quadruple

    ID              shift and go to state 218


state 172

    (95) non_conditional_loop -> FOR LPAREN ID . np_add_id EQUALS np_add_operator expression np_assign_expression_for TO expression np_non_conditional_limit BY expression RPAREN block np_non_conditional_end
    (115) np_add_id -> .

    EQUALS          reduce using rule 115 (np_add_id -> .)

    np_add_id                      shift and go to state 219

state 173

    (94) conditional_loop -> WHILE np_while_init LPAREN . expression RPAREN np_while_expression DO block np_while_end_block
    (46) expression -> . exp
    (47) expression -> . expression1 np_add_quadruple_logical
    (48) expression -> . expression0 np_add_quadruple_or_and
    (57) exp -> . term np_add_quadruple_sum_min
    (58) exp -> . term np_add_quadruple_sum_min exp_1
    (51) expression1 -> . exp LT np_add_operator exp
    (52) expression1 -> . exp LE np_add_operator exp
    (53) expression1 -> . exp GT np_add_operator exp
    (54) expression1 -> . exp GE np_add_operator exp
    (55) expression1 -> . exp EQ np_add_operator exp
    (56) expression1 -> . exp NE np_add_operator exp
    (49) expression0 -> . expression AND np_add_operator expression
    (50) expression0 -> . expression OR np_add_operator expression
    (61) term -> . factor np_add_quadruple_times_div
    (62) term -> . factor np_add_quadruple_times_div term_2
    (65) factor -> . LPAREN np_add_paren expression RPAREN np_pop_paren
    (66) factor -> . ID np_add_id LBRACKET np_check_is_array expression np_verify_array_dim RBRACKET np_get_array_address
    (67) factor -> . factor_prima_1
    (68) factor -> . function_call
    (69) factor -> . special_functions
    (70) factor_prima_1 -> . PLUS varcte
    (71) factor_prima_1 -> . MINUS np_set_as_negative varcte
    (72) factor_prima_1 -> . varcte
    (97) function_call -> . ID LPAREN np_check_function_call np_function_end_params RPAREN
    (98) function_call -> . ID LPAREN np_check_function_call function_call_1 np_function_end_params RPAREN
    (34) special_functions -> . mean
    (35) special_functions -> . median
    (36) special_functions -> . variance
    (37) special_functions -> . p_variance
    (38) special_functions -> . standard_deviation
    (39) special_functions -> . p_standard_deviation
    (73) varcte -> . ID np_add_id
    (74) varcte -> . CTEI np_add_cte_int
    (75) varcte -> . CTEF np_add_cte_float
    (76) varcte -> . CTEC np_add_cte_char
    (77) varcte -> . TRUE np_add_cte_bool
    (78) varcte -> . FALSE np_add_cte_bool
    (103) mean -> . MEAN LPAREN ID RPAREN np_add_mean_quadruple
    (104) median -> . MEDIAN LPAREN ID RPAREN np_add_median_quadruple
    (105) variance -> . VARIANCE LPAREN ID RPAREN np_add_variance_quadruple
    (106) p_variance -> . PVARIANCE LPAREN ID RPAREN np_add_p_variance_quadruple
    (107) standard_deviation -> . STDEV LPAREN ID RPAREN np_add_stdev_quadruple
    (108) p_standard_deviation -> . PSTDEV LPAREN ID RPAREN np_add_p_stdev_quadruple

    LPAREN          shift and go to state 99
    ID              shift and go to state 100
    PLUS            shift and go to state 104
    MINUS           shift and go to state 106
    CTEI            shift and go to state 113
    CTEF            shift and go to state 114
    CTEC            shift and go to state 115
    TRUE            shift and go to state 116
    FALSE           shift and go to state 117
    MEAN            shift and go to state 118
    MEDIAN          shift and go to state 119
    VARIANCE        shift and go to state 120
    PVARIANCE       shift and go to state 121
    STDEV           shift and go to state 122
    PSTDEV          shift and go to state 123

    expression                     shift and go to state 220
    exp                            shift and go to state 94
    expression1                    shift and go to state 95
    expression0                    shift and go to state 96
    term                           shift and go to state 97
    factor                         shift and go to state 98
    factor_prima_1                 shift and go to state 101
    function_call                  shift and go to state 102
    special_functions              shift and go to state 103
    varcte                         shift and go to state 105
    mean                           shift and go to state 107
    median                         shift and go to state 108
    variance                       shift and go to state 109
    p_variance                     shift and go to state 110
    standard_deviation             shift and go to state 111
    p_standard_deviation           shift and go to state 112

state 174

    (25) params -> ID COLON type . np_add_vars np_add_params_type COMMA params
    (26) params -> ID COLON type . np_add_vars np_add_params_type
    (114) np_add_vars -> .

    COMMA           reduce using rule 114 (np_add_vars -> .)
    RPAREN          reduce using rule 114 (np_add_vars -> .)

    np_add_vars                    shift and go to state 221

state 175

    (16) function -> FUNCTION ID COLON return_type np_create_new_scope LPAREN RPAREN np_set_func_start_point block . np_end_function
    (145) np_end_function -> .

    FUNCTION        reduce using rule 145 (np_end_function -> .)
    MAIN            reduce using rule 145 (np_end_function -> .)

    np_end_function                shift and go to state 222

state 176

    (18) function -> FUNCTION ID COLON return_type np_create_new_scope LPAREN RPAREN vars np_set_func_start_point . block np_end_function
    (22) block -> . LBRACE statements RBRACE

    LBRACE          shift and go to state 48

    block                          shift and go to state 223

state 177

    (17) function -> FUNCTION ID COLON return_type np_create_new_scope LPAREN params RPAREN np_set_func_start_point . block np_end_function
    (22) block -> . LBRACE statements RBRACE

    LBRACE          shift and go to state 48

    block                          shift and go to state 224

state 178

    (19) function -> FUNCTION ID COLON return_type np_create_new_scope LPAREN params RPAREN vars . np_set_func_start_point block np_end_function
    (144) np_set_func_start_point -> .

    LBRACE          reduce using rule 144 (np_set_func_start_point -> .)

    np_set_func_start_point        shift and go to state 225

state 179

    (99) void_function_call -> ID LPAREN np_check_function_call np_function_end_params . RPAREN SEMI

    RPAREN          shift and go to state 226


state 180

    (100) void_function_call -> ID LPAREN np_check_function_call function_call_1 . np_function_end_params RPAREN SEMI
    (150) np_function_end_params -> .

    RPAREN          reduce using rule 150 (np_function_end_params -> .)

    np_function_end_params         shift and go to state 227

state 181

    (101) function_call_1 -> expression . np_function_call_add_param
    (102) function_call_1 -> expression . np_function_call_add_param COMMA function_call_1
    (49) expression0 -> expression . AND np_add_operator expression
    (50) expression0 -> expression . OR np_add_operator expression
    (149) np_function_call_add_param -> .

    AND             shift and go to state 143
    OR              shift and go to state 144
    COMMA           reduce using rule 149 (np_function_call_add_param -> .)
    RPAREN          reduce using rule 149 (np_function_call_add_param -> .)

    np_function_call_add_param     shift and go to state 228

state 182

    (42) assignment -> ID np_add_id LBRACKET np_check_is_array . expression np_verify_array_dim RBRACKET np_get_array_address EQUALS np_add_operator expression np_assign_expression SEMI
    (46) expression -> . exp
    (47) expression -> . expression1 np_add_quadruple_logical
    (48) expression -> . expression0 np_add_quadruple_or_and
    (57) exp -> . term np_add_quadruple_sum_min
    (58) exp -> . term np_add_quadruple_sum_min exp_1
    (51) expression1 -> . exp LT np_add_operator exp
    (52) expression1 -> . exp LE np_add_operator exp
    (53) expression1 -> . exp GT np_add_operator exp
    (54) expression1 -> . exp GE np_add_operator exp
    (55) expression1 -> . exp EQ np_add_operator exp
    (56) expression1 -> . exp NE np_add_operator exp
    (49) expression0 -> . expression AND np_add_operator expression
    (50) expression0 -> . expression OR np_add_operator expression
    (61) term -> . factor np_add_quadruple_times_div
    (62) term -> . factor np_add_quadruple_times_div term_2
    (65) factor -> . LPAREN np_add_paren expression RPAREN np_pop_paren
    (66) factor -> . ID np_add_id LBRACKET np_check_is_array expression np_verify_array_dim RBRACKET np_get_array_address
    (67) factor -> . factor_prima_1
    (68) factor -> . function_call
    (69) factor -> . special_functions
    (70) factor_prima_1 -> . PLUS varcte
    (71) factor_prima_1 -> . MINUS np_set_as_negative varcte
    (72) factor_prima_1 -> . varcte
    (97) function_call -> . ID LPAREN np_check_function_call np_function_end_params RPAREN
    (98) function_call -> . ID LPAREN np_check_function_call function_call_1 np_function_end_params RPAREN
    (34) special_functions -> . mean
    (35) special_functions -> . median
    (36) special_functions -> . variance
    (37) special_functions -> . p_variance
    (38) special_functions -> . standard_deviation
    (39) special_functions -> . p_standard_deviation
    (73) varcte -> . ID np_add_id
    (74) varcte -> . CTEI np_add_cte_int
    (75) varcte -> . CTEF np_add_cte_float
    (76) varcte -> . CTEC np_add_cte_char
    (77) varcte -> . TRUE np_add_cte_bool
    (78) varcte -> . FALSE np_add_cte_bool
    (103) mean -> . MEAN LPAREN ID RPAREN np_add_mean_quadruple
    (104) median -> . MEDIAN LPAREN ID RPAREN np_add_median_quadruple
    (105) variance -> . VARIANCE LPAREN ID RPAREN np_add_variance_quadruple
    (106) p_variance -> . PVARIANCE LPAREN ID RPAREN np_add_p_variance_quadruple
    (107) standard_deviation -> . STDEV LPAREN ID RPAREN np_add_stdev_quadruple
    (108) p_standard_deviation -> . PSTDEV LPAREN ID RPAREN np_add_p_stdev_quadruple

    LPAREN          shift and go to state 99
    ID              shift and go to state 100
    PLUS            shift and go to state 104
    MINUS           shift and go to state 106
    CTEI            shift and go to state 113
    CTEF            shift and go to state 114
    CTEC            shift and go to state 115
    TRUE            shift and go to state 116
    FALSE           shift and go to state 117
    MEAN            shift and go to state 118
    MEDIAN          shift and go to state 119
    VARIANCE        shift and go to state 120
    PVARIANCE       shift and go to state 121
    STDEV           shift and go to state 122
    PSTDEV          shift and go to state 123

    expression                     shift and go to state 229
    exp                            shift and go to state 94
    expression1                    shift and go to state 95
    expression0                    shift and go to state 96
    term                           shift and go to state 97
    factor                         shift and go to state 98
    factor_prima_1                 shift and go to state 101
    function_call                  shift and go to state 102
    special_functions              shift and go to state 103
    varcte                         shift and go to state 105
    mean                           shift and go to state 107
    median                         shift and go to state 108
    variance                       shift and go to state 109
    p_variance                     shift and go to state 110
    standard_deviation             shift and go to state 111
    p_standard_deviation           shift and go to state 112

state 183

    (43) assignment -> ID np_add_id EQUALS np_add_operator . expression np_assign_expression SEMI
    (46) expression -> . exp
    (47) expression -> . expression1 np_add_quadruple_logical
    (48) expression -> . expression0 np_add_quadruple_or_and
    (57) exp -> . term np_add_quadruple_sum_min
    (58) exp -> . term np_add_quadruple_sum_min exp_1
    (51) expression1 -> . exp LT np_add_operator exp
    (52) expression1 -> . exp LE np_add_operator exp
    (53) expression1 -> . exp GT np_add_operator exp
    (54) expression1 -> . exp GE np_add_operator exp
    (55) expression1 -> . exp EQ np_add_operator exp
    (56) expression1 -> . exp NE np_add_operator exp
    (49) expression0 -> . expression AND np_add_operator expression
    (50) expression0 -> . expression OR np_add_operator expression
    (61) term -> . factor np_add_quadruple_times_div
    (62) term -> . factor np_add_quadruple_times_div term_2
    (65) factor -> . LPAREN np_add_paren expression RPAREN np_pop_paren
    (66) factor -> . ID np_add_id LBRACKET np_check_is_array expression np_verify_array_dim RBRACKET np_get_array_address
    (67) factor -> . factor_prima_1
    (68) factor -> . function_call
    (69) factor -> . special_functions
    (70) factor_prima_1 -> . PLUS varcte
    (71) factor_prima_1 -> . MINUS np_set_as_negative varcte
    (72) factor_prima_1 -> . varcte
    (97) function_call -> . ID LPAREN np_check_function_call np_function_end_params RPAREN
    (98) function_call -> . ID LPAREN np_check_function_call function_call_1 np_function_end_params RPAREN
    (34) special_functions -> . mean
    (35) special_functions -> . median
    (36) special_functions -> . variance
    (37) special_functions -> . p_variance
    (38) special_functions -> . standard_deviation
    (39) special_functions -> . p_standard_deviation
    (73) varcte -> . ID np_add_id
    (74) varcte -> . CTEI np_add_cte_int
    (75) varcte -> . CTEF np_add_cte_float
    (76) varcte -> . CTEC np_add_cte_char
    (77) varcte -> . TRUE np_add_cte_bool
    (78) varcte -> . FALSE np_add_cte_bool
    (103) mean -> . MEAN LPAREN ID RPAREN np_add_mean_quadruple
    (104) median -> . MEDIAN LPAREN ID RPAREN np_add_median_quadruple
    (105) variance -> . VARIANCE LPAREN ID RPAREN np_add_variance_quadruple
    (106) p_variance -> . PVARIANCE LPAREN ID RPAREN np_add_p_variance_quadruple
    (107) standard_deviation -> . STDEV LPAREN ID RPAREN np_add_stdev_quadruple
    (108) p_standard_deviation -> . PSTDEV LPAREN ID RPAREN np_add_p_stdev_quadruple

    LPAREN          shift and go to state 99
    ID              shift and go to state 100
    PLUS            shift and go to state 104
    MINUS           shift and go to state 106
    CTEI            shift and go to state 113
    CTEF            shift and go to state 114
    CTEC            shift and go to state 115
    TRUE            shift and go to state 116
    FALSE           shift and go to state 117
    MEAN            shift and go to state 118
    MEDIAN          shift and go to state 119
    VARIANCE        shift and go to state 120
    PVARIANCE       shift and go to state 121
    STDEV           shift and go to state 122
    PSTDEV          shift and go to state 123

    expression                     shift and go to state 230
    exp                            shift and go to state 94
    expression1                    shift and go to state 95
    expression0                    shift and go to state 96
    term                           shift and go to state 97
    factor                         shift and go to state 98
    factor_prima_1                 shift and go to state 101
    function_call                  shift and go to state 102
    special_functions              shift and go to state 103
    varcte                         shift and go to state 105
    mean                           shift and go to state 107
    median                         shift and go to state 108
    variance                       shift and go to state 109
    p_variance                     shift and go to state 110
    standard_deviation             shift and go to state 111
    p_standard_deviation           shift and go to state 112

state 184

    (44) condition -> IF LPAREN expression RPAREN . np_condition_gotof block np_condition_end_gotof
    (45) condition -> IF LPAREN expression RPAREN . np_condition_gotof block ELSE np_condition_goto_else block np_condition_end_gotof
    (129) np_condition_gotof -> .

    LBRACE          reduce using rule 129 (np_condition_gotof -> .)

    np_condition_gotof             shift and go to state 231

state 185

    (79) writing -> PRINT LPAREN writing_1 RPAREN . SEMI

    SEMI            shift and go to state 232


state 186

    (81) writing_1 -> expression np_add_print_quadruple_exp . COMMA writing_1
    (83) writing_1 -> expression np_add_print_quadruple_exp .

    COMMA           shift and go to state 233
    RPAREN          reduce using rule 83 (writing_1 -> expression np_add_print_quadruple_exp .)


state 187

    (82) writing_1 -> CTESTRING np_add_print_quadruple_str . COMMA writing_1
    (84) writing_1 -> CTESTRING np_add_print_quadruple_str .

    COMMA           shift and go to state 234
    RPAREN          reduce using rule 84 (writing_1 -> CTESTRING np_add_print_quadruple_str .)


state 188

    (80) writing -> PRINTLN LPAREN writing_2 RPAREN . SEMI

    SEMI            shift and go to state 235


state 189

    (85) writing_2 -> expression np_add_println_quadruple_exp . COMMA writing_2
    (87) writing_2 -> expression np_add_println_quadruple_exp .

    COMMA           shift and go to state 236
    RPAREN          reduce using rule 87 (writing_2 -> expression np_add_println_quadruple_exp .)


state 190

    (86) writing_2 -> CTESTRING np_add_println_quadruple_str . COMMA writing_2
    (88) writing_2 -> CTESTRING np_add_println_quadruple_str .

    COMMA           shift and go to state 237
    RPAREN          reduce using rule 88 (writing_2 -> CTESTRING np_add_println_quadruple_str .)


state 191

    (89) reading -> READ LPAREN reading_1 RPAREN . np_add_read_quadruple SEMI
    (154) np_add_read_quadruple -> .

    SEMI            reduce using rule 154 (np_add_read_quadruple -> .)

    np_add_read_quadruple          shift and go to state 238

state 192

    (90) reading_1 -> ID np_add_id .
    (91) reading_1 -> ID np_add_id . LBRACKET np_check_is_array expression np_verify_array_dim RBRACKET np_get_array_address

    RPAREN          reduce using rule 90 (reading_1 -> ID np_add_id .)
    LBRACKET        shift and go to state 239


state 193

    (96) return -> RETURN expression np_add_return_quadruple SEMI .

    ID              reduce using rule 96 (return -> RETURN expression np_add_return_quadruple SEMI .)
    IF              reduce using rule 96 (return -> RETURN expression np_add_return_quadruple SEMI .)
    PRINT           reduce using rule 96 (return -> RETURN expression np_add_return_quadruple SEMI .)
    PRINTLN         reduce using rule 96 (return -> RETURN expression np_add_return_quadruple SEMI .)
    READ            reduce using rule 96 (return -> RETURN expression np_add_return_quadruple SEMI .)
    RETURN          reduce using rule 96 (return -> RETURN expression np_add_return_quadruple SEMI .)
    FOR             reduce using rule 96 (return -> RETURN expression np_add_return_quadruple SEMI .)
    WHILE           reduce using rule 96 (return -> RETURN expression np_add_return_quadruple SEMI .)
    RBRACE          reduce using rule 96 (return -> RETURN expression np_add_return_quadruple SEMI .)


state 194

    (49) expression0 -> expression AND np_add_operator . expression
    (46) expression -> . exp
    (47) expression -> . expression1 np_add_quadruple_logical
    (48) expression -> . expression0 np_add_quadruple_or_and
    (57) exp -> . term np_add_quadruple_sum_min
    (58) exp -> . term np_add_quadruple_sum_min exp_1
    (51) expression1 -> . exp LT np_add_operator exp
    (52) expression1 -> . exp LE np_add_operator exp
    (53) expression1 -> . exp GT np_add_operator exp
    (54) expression1 -> . exp GE np_add_operator exp
    (55) expression1 -> . exp EQ np_add_operator exp
    (56) expression1 -> . exp NE np_add_operator exp
    (49) expression0 -> . expression AND np_add_operator expression
    (50) expression0 -> . expression OR np_add_operator expression
    (61) term -> . factor np_add_quadruple_times_div
    (62) term -> . factor np_add_quadruple_times_div term_2
    (65) factor -> . LPAREN np_add_paren expression RPAREN np_pop_paren
    (66) factor -> . ID np_add_id LBRACKET np_check_is_array expression np_verify_array_dim RBRACKET np_get_array_address
    (67) factor -> . factor_prima_1
    (68) factor -> . function_call
    (69) factor -> . special_functions
    (70) factor_prima_1 -> . PLUS varcte
    (71) factor_prima_1 -> . MINUS np_set_as_negative varcte
    (72) factor_prima_1 -> . varcte
    (97) function_call -> . ID LPAREN np_check_function_call np_function_end_params RPAREN
    (98) function_call -> . ID LPAREN np_check_function_call function_call_1 np_function_end_params RPAREN
    (34) special_functions -> . mean
    (35) special_functions -> . median
    (36) special_functions -> . variance
    (37) special_functions -> . p_variance
    (38) special_functions -> . standard_deviation
    (39) special_functions -> . p_standard_deviation
    (73) varcte -> . ID np_add_id
    (74) varcte -> . CTEI np_add_cte_int
    (75) varcte -> . CTEF np_add_cte_float
    (76) varcte -> . CTEC np_add_cte_char
    (77) varcte -> . TRUE np_add_cte_bool
    (78) varcte -> . FALSE np_add_cte_bool
    (103) mean -> . MEAN LPAREN ID RPAREN np_add_mean_quadruple
    (104) median -> . MEDIAN LPAREN ID RPAREN np_add_median_quadruple
    (105) variance -> . VARIANCE LPAREN ID RPAREN np_add_variance_quadruple
    (106) p_variance -> . PVARIANCE LPAREN ID RPAREN np_add_p_variance_quadruple
    (107) standard_deviation -> . STDEV LPAREN ID RPAREN np_add_stdev_quadruple
    (108) p_standard_deviation -> . PSTDEV LPAREN ID RPAREN np_add_p_stdev_quadruple

    LPAREN          shift and go to state 99
    ID              shift and go to state 100
    PLUS            shift and go to state 104
    MINUS           shift and go to state 106
    CTEI            shift and go to state 113
    CTEF            shift and go to state 114
    CTEC            shift and go to state 115
    TRUE            shift and go to state 116
    FALSE           shift and go to state 117
    MEAN            shift and go to state 118
    MEDIAN          shift and go to state 119
    VARIANCE        shift and go to state 120
    PVARIANCE       shift and go to state 121
    STDEV           shift and go to state 122
    PSTDEV          shift and go to state 123

    expression                     shift and go to state 240
    exp                            shift and go to state 94
    expression1                    shift and go to state 95
    expression0                    shift and go to state 96
    term                           shift and go to state 97
    factor                         shift and go to state 98
    factor_prima_1                 shift and go to state 101
    function_call                  shift and go to state 102
    special_functions              shift and go to state 103
    varcte                         shift and go to state 105
    mean                           shift and go to state 107
    median                         shift and go to state 108
    variance                       shift and go to state 109
    p_variance                     shift and go to state 110
    standard_deviation             shift and go to state 111
    p_standard_deviation           shift and go to state 112

state 195

    (50) expression0 -> expression OR np_add_operator . expression
    (46) expression -> . exp
    (47) expression -> . expression1 np_add_quadruple_logical
    (48) expression -> . expression0 np_add_quadruple_or_and
    (57) exp -> . term np_add_quadruple_sum_min
    (58) exp -> . term np_add_quadruple_sum_min exp_1
    (51) expression1 -> . exp LT np_add_operator exp
    (52) expression1 -> . exp LE np_add_operator exp
    (53) expression1 -> . exp GT np_add_operator exp
    (54) expression1 -> . exp GE np_add_operator exp
    (55) expression1 -> . exp EQ np_add_operator exp
    (56) expression1 -> . exp NE np_add_operator exp
    (49) expression0 -> . expression AND np_add_operator expression
    (50) expression0 -> . expression OR np_add_operator expression
    (61) term -> . factor np_add_quadruple_times_div
    (62) term -> . factor np_add_quadruple_times_div term_2
    (65) factor -> . LPAREN np_add_paren expression RPAREN np_pop_paren
    (66) factor -> . ID np_add_id LBRACKET np_check_is_array expression np_verify_array_dim RBRACKET np_get_array_address
    (67) factor -> . factor_prima_1
    (68) factor -> . function_call
    (69) factor -> . special_functions
    (70) factor_prima_1 -> . PLUS varcte
    (71) factor_prima_1 -> . MINUS np_set_as_negative varcte
    (72) factor_prima_1 -> . varcte
    (97) function_call -> . ID LPAREN np_check_function_call np_function_end_params RPAREN
    (98) function_call -> . ID LPAREN np_check_function_call function_call_1 np_function_end_params RPAREN
    (34) special_functions -> . mean
    (35) special_functions -> . median
    (36) special_functions -> . variance
    (37) special_functions -> . p_variance
    (38) special_functions -> . standard_deviation
    (39) special_functions -> . p_standard_deviation
    (73) varcte -> . ID np_add_id
    (74) varcte -> . CTEI np_add_cte_int
    (75) varcte -> . CTEF np_add_cte_float
    (76) varcte -> . CTEC np_add_cte_char
    (77) varcte -> . TRUE np_add_cte_bool
    (78) varcte -> . FALSE np_add_cte_bool
    (103) mean -> . MEAN LPAREN ID RPAREN np_add_mean_quadruple
    (104) median -> . MEDIAN LPAREN ID RPAREN np_add_median_quadruple
    (105) variance -> . VARIANCE LPAREN ID RPAREN np_add_variance_quadruple
    (106) p_variance -> . PVARIANCE LPAREN ID RPAREN np_add_p_variance_quadruple
    (107) standard_deviation -> . STDEV LPAREN ID RPAREN np_add_stdev_quadruple
    (108) p_standard_deviation -> . PSTDEV LPAREN ID RPAREN np_add_p_stdev_quadruple

    LPAREN          shift and go to state 99
    ID              shift and go to state 100
    PLUS            shift and go to state 104
    MINUS           shift and go to state 106
    CTEI            shift and go to state 113
    CTEF            shift and go to state 114
    CTEC            shift and go to state 115
    TRUE            shift and go to state 116
    FALSE           shift and go to state 117
    MEAN            shift and go to state 118
    MEDIAN          shift and go to state 119
    VARIANCE        shift and go to state 120
    PVARIANCE       shift and go to state 121
    STDEV           shift and go to state 122
    PSTDEV          shift and go to state 123

    expression                     shift and go to state 241
    exp                            shift and go to state 94
    expression1                    shift and go to state 95
    expression0                    shift and go to state 96
    term                           shift and go to state 97
    factor                         shift and go to state 98
    factor_prima_1                 shift and go to state 101
    function_call                  shift and go to state 102
    special_functions              shift and go to state 103
    varcte                         shift and go to state 105
    mean                           shift and go to state 107
    median                         shift and go to state 108
    variance                       shift and go to state 109
    p_variance                     shift and go to state 110
    standard_deviation             shift and go to state 111
    p_standard_deviation           shift and go to state 112

state 196

    (51) expression1 -> exp LT np_add_operator . exp
    (57) exp -> . term np_add_quadruple_sum_min
    (58) exp -> . term np_add_quadruple_sum_min exp_1
    (61) term -> . factor np_add_quadruple_times_div
    (62) term -> . factor np_add_quadruple_times_div term_2
    (65) factor -> . LPAREN np_add_paren expression RPAREN np_pop_paren
    (66) factor -> . ID np_add_id LBRACKET np_check_is_array expression np_verify_array_dim RBRACKET np_get_array_address
    (67) factor -> . factor_prima_1
    (68) factor -> . function_call
    (69) factor -> . special_functions
    (70) factor_prima_1 -> . PLUS varcte
    (71) factor_prima_1 -> . MINUS np_set_as_negative varcte
    (72) factor_prima_1 -> . varcte
    (97) function_call -> . ID LPAREN np_check_function_call np_function_end_params RPAREN
    (98) function_call -> . ID LPAREN np_check_function_call function_call_1 np_function_end_params RPAREN
    (34) special_functions -> . mean
    (35) special_functions -> . median
    (36) special_functions -> . variance
    (37) special_functions -> . p_variance
    (38) special_functions -> . standard_deviation
    (39) special_functions -> . p_standard_deviation
    (73) varcte -> . ID np_add_id
    (74) varcte -> . CTEI np_add_cte_int
    (75) varcte -> . CTEF np_add_cte_float
    (76) varcte -> . CTEC np_add_cte_char
    (77) varcte -> . TRUE np_add_cte_bool
    (78) varcte -> . FALSE np_add_cte_bool
    (103) mean -> . MEAN LPAREN ID RPAREN np_add_mean_quadruple
    (104) median -> . MEDIAN LPAREN ID RPAREN np_add_median_quadruple
    (105) variance -> . VARIANCE LPAREN ID RPAREN np_add_variance_quadruple
    (106) p_variance -> . PVARIANCE LPAREN ID RPAREN np_add_p_variance_quadruple
    (107) standard_deviation -> . STDEV LPAREN ID RPAREN np_add_stdev_quadruple
    (108) p_standard_deviation -> . PSTDEV LPAREN ID RPAREN np_add_p_stdev_quadruple

    LPAREN          shift and go to state 99
    ID              shift and go to state 100
    PLUS            shift and go to state 104
    MINUS           shift and go to state 106
    CTEI            shift and go to state 113
    CTEF            shift and go to state 114
    CTEC            shift and go to state 115
    TRUE            shift and go to state 116
    FALSE           shift and go to state 117
    MEAN            shift and go to state 118
    MEDIAN          shift and go to state 119
    VARIANCE        shift and go to state 120
    PVARIANCE       shift and go to state 121
    STDEV           shift and go to state 122
    PSTDEV          shift and go to state 123

    exp                            shift and go to state 242
    term                           shift and go to state 97
    factor                         shift and go to state 98
    factor_prima_1                 shift and go to state 101
    function_call                  shift and go to state 102
    special_functions              shift and go to state 103
    varcte                         shift and go to state 105
    mean                           shift and go to state 107
    median                         shift and go to state 108
    variance                       shift and go to state 109
    p_variance                     shift and go to state 110
    standard_deviation             shift and go to state 111
    p_standard_deviation           shift and go to state 112

state 197

    (52) expression1 -> exp LE np_add_operator . exp
    (57) exp -> . term np_add_quadruple_sum_min
    (58) exp -> . term np_add_quadruple_sum_min exp_1
    (61) term -> . factor np_add_quadruple_times_div
    (62) term -> . factor np_add_quadruple_times_div term_2
    (65) factor -> . LPAREN np_add_paren expression RPAREN np_pop_paren
    (66) factor -> . ID np_add_id LBRACKET np_check_is_array expression np_verify_array_dim RBRACKET np_get_array_address
    (67) factor -> . factor_prima_1
    (68) factor -> . function_call
    (69) factor -> . special_functions
    (70) factor_prima_1 -> . PLUS varcte
    (71) factor_prima_1 -> . MINUS np_set_as_negative varcte
    (72) factor_prima_1 -> . varcte
    (97) function_call -> . ID LPAREN np_check_function_call np_function_end_params RPAREN
    (98) function_call -> . ID LPAREN np_check_function_call function_call_1 np_function_end_params RPAREN
    (34) special_functions -> . mean
    (35) special_functions -> . median
    (36) special_functions -> . variance
    (37) special_functions -> . p_variance
    (38) special_functions -> . standard_deviation
    (39) special_functions -> . p_standard_deviation
    (73) varcte -> . ID np_add_id
    (74) varcte -> . CTEI np_add_cte_int
    (75) varcte -> . CTEF np_add_cte_float
    (76) varcte -> . CTEC np_add_cte_char
    (77) varcte -> . TRUE np_add_cte_bool
    (78) varcte -> . FALSE np_add_cte_bool
    (103) mean -> . MEAN LPAREN ID RPAREN np_add_mean_quadruple
    (104) median -> . MEDIAN LPAREN ID RPAREN np_add_median_quadruple
    (105) variance -> . VARIANCE LPAREN ID RPAREN np_add_variance_quadruple
    (106) p_variance -> . PVARIANCE LPAREN ID RPAREN np_add_p_variance_quadruple
    (107) standard_deviation -> . STDEV LPAREN ID RPAREN np_add_stdev_quadruple
    (108) p_standard_deviation -> . PSTDEV LPAREN ID RPAREN np_add_p_stdev_quadruple

    LPAREN          shift and go to state 99
    ID              shift and go to state 100
    PLUS            shift and go to state 104
    MINUS           shift and go to state 106
    CTEI            shift and go to state 113
    CTEF            shift and go to state 114
    CTEC            shift and go to state 115
    TRUE            shift and go to state 116
    FALSE           shift and go to state 117
    MEAN            shift and go to state 118
    MEDIAN          shift and go to state 119
    VARIANCE        shift and go to state 120
    PVARIANCE       shift and go to state 121
    STDEV           shift and go to state 122
    PSTDEV          shift and go to state 123

    exp                            shift and go to state 243
    term                           shift and go to state 97
    factor                         shift and go to state 98
    factor_prima_1                 shift and go to state 101
    function_call                  shift and go to state 102
    special_functions              shift and go to state 103
    varcte                         shift and go to state 105
    mean                           shift and go to state 107
    median                         shift and go to state 108
    variance                       shift and go to state 109
    p_variance                     shift and go to state 110
    standard_deviation             shift and go to state 111
    p_standard_deviation           shift and go to state 112

state 198

    (53) expression1 -> exp GT np_add_operator . exp
    (57) exp -> . term np_add_quadruple_sum_min
    (58) exp -> . term np_add_quadruple_sum_min exp_1
    (61) term -> . factor np_add_quadruple_times_div
    (62) term -> . factor np_add_quadruple_times_div term_2
    (65) factor -> . LPAREN np_add_paren expression RPAREN np_pop_paren
    (66) factor -> . ID np_add_id LBRACKET np_check_is_array expression np_verify_array_dim RBRACKET np_get_array_address
    (67) factor -> . factor_prima_1
    (68) factor -> . function_call
    (69) factor -> . special_functions
    (70) factor_prima_1 -> . PLUS varcte
    (71) factor_prima_1 -> . MINUS np_set_as_negative varcte
    (72) factor_prima_1 -> . varcte
    (97) function_call -> . ID LPAREN np_check_function_call np_function_end_params RPAREN
    (98) function_call -> . ID LPAREN np_check_function_call function_call_1 np_function_end_params RPAREN
    (34) special_functions -> . mean
    (35) special_functions -> . median
    (36) special_functions -> . variance
    (37) special_functions -> . p_variance
    (38) special_functions -> . standard_deviation
    (39) special_functions -> . p_standard_deviation
    (73) varcte -> . ID np_add_id
    (74) varcte -> . CTEI np_add_cte_int
    (75) varcte -> . CTEF np_add_cte_float
    (76) varcte -> . CTEC np_add_cte_char
    (77) varcte -> . TRUE np_add_cte_bool
    (78) varcte -> . FALSE np_add_cte_bool
    (103) mean -> . MEAN LPAREN ID RPAREN np_add_mean_quadruple
    (104) median -> . MEDIAN LPAREN ID RPAREN np_add_median_quadruple
    (105) variance -> . VARIANCE LPAREN ID RPAREN np_add_variance_quadruple
    (106) p_variance -> . PVARIANCE LPAREN ID RPAREN np_add_p_variance_quadruple
    (107) standard_deviation -> . STDEV LPAREN ID RPAREN np_add_stdev_quadruple
    (108) p_standard_deviation -> . PSTDEV LPAREN ID RPAREN np_add_p_stdev_quadruple

    LPAREN          shift and go to state 99
    ID              shift and go to state 100
    PLUS            shift and go to state 104
    MINUS           shift and go to state 106
    CTEI            shift and go to state 113
    CTEF            shift and go to state 114
    CTEC            shift and go to state 115
    TRUE            shift and go to state 116
    FALSE           shift and go to state 117
    MEAN            shift and go to state 118
    MEDIAN          shift and go to state 119
    VARIANCE        shift and go to state 120
    PVARIANCE       shift and go to state 121
    STDEV           shift and go to state 122
    PSTDEV          shift and go to state 123

    exp                            shift and go to state 244
    term                           shift and go to state 97
    factor                         shift and go to state 98
    factor_prima_1                 shift and go to state 101
    function_call                  shift and go to state 102
    special_functions              shift and go to state 103
    varcte                         shift and go to state 105
    mean                           shift and go to state 107
    median                         shift and go to state 108
    variance                       shift and go to state 109
    p_variance                     shift and go to state 110
    standard_deviation             shift and go to state 111
    p_standard_deviation           shift and go to state 112

state 199

    (54) expression1 -> exp GE np_add_operator . exp
    (57) exp -> . term np_add_quadruple_sum_min
    (58) exp -> . term np_add_quadruple_sum_min exp_1
    (61) term -> . factor np_add_quadruple_times_div
    (62) term -> . factor np_add_quadruple_times_div term_2
    (65) factor -> . LPAREN np_add_paren expression RPAREN np_pop_paren
    (66) factor -> . ID np_add_id LBRACKET np_check_is_array expression np_verify_array_dim RBRACKET np_get_array_address
    (67) factor -> . factor_prima_1
    (68) factor -> . function_call
    (69) factor -> . special_functions
    (70) factor_prima_1 -> . PLUS varcte
    (71) factor_prima_1 -> . MINUS np_set_as_negative varcte
    (72) factor_prima_1 -> . varcte
    (97) function_call -> . ID LPAREN np_check_function_call np_function_end_params RPAREN
    (98) function_call -> . ID LPAREN np_check_function_call function_call_1 np_function_end_params RPAREN
    (34) special_functions -> . mean
    (35) special_functions -> . median
    (36) special_functions -> . variance
    (37) special_functions -> . p_variance
    (38) special_functions -> . standard_deviation
    (39) special_functions -> . p_standard_deviation
    (73) varcte -> . ID np_add_id
    (74) varcte -> . CTEI np_add_cte_int
    (75) varcte -> . CTEF np_add_cte_float
    (76) varcte -> . CTEC np_add_cte_char
    (77) varcte -> . TRUE np_add_cte_bool
    (78) varcte -> . FALSE np_add_cte_bool
    (103) mean -> . MEAN LPAREN ID RPAREN np_add_mean_quadruple
    (104) median -> . MEDIAN LPAREN ID RPAREN np_add_median_quadruple
    (105) variance -> . VARIANCE LPAREN ID RPAREN np_add_variance_quadruple
    (106) p_variance -> . PVARIANCE LPAREN ID RPAREN np_add_p_variance_quadruple
    (107) standard_deviation -> . STDEV LPAREN ID RPAREN np_add_stdev_quadruple
    (108) p_standard_deviation -> . PSTDEV LPAREN ID RPAREN np_add_p_stdev_quadruple

    LPAREN          shift and go to state 99
    ID              shift and go to state 100
    PLUS            shift and go to state 104
    MINUS           shift and go to state 106
    CTEI            shift and go to state 113
    CTEF            shift and go to state 114
    CTEC            shift and go to state 115
    TRUE            shift and go to state 116
    FALSE           shift and go to state 117
    MEAN            shift and go to state 118
    MEDIAN          shift and go to state 119
    VARIANCE        shift and go to state 120
    PVARIANCE       shift and go to state 121
    STDEV           shift and go to state 122
    PSTDEV          shift and go to state 123

    exp                            shift and go to state 245
    term                           shift and go to state 97
    factor                         shift and go to state 98
    factor_prima_1                 shift and go to state 101
    function_call                  shift and go to state 102
    special_functions              shift and go to state 103
    varcte                         shift and go to state 105
    mean                           shift and go to state 107
    median                         shift and go to state 108
    variance                       shift and go to state 109
    p_variance                     shift and go to state 110
    standard_deviation             shift and go to state 111
    p_standard_deviation           shift and go to state 112

state 200

    (55) expression1 -> exp EQ np_add_operator . exp
    (57) exp -> . term np_add_quadruple_sum_min
    (58) exp -> . term np_add_quadruple_sum_min exp_1
    (61) term -> . factor np_add_quadruple_times_div
    (62) term -> . factor np_add_quadruple_times_div term_2
    (65) factor -> . LPAREN np_add_paren expression RPAREN np_pop_paren
    (66) factor -> . ID np_add_id LBRACKET np_check_is_array expression np_verify_array_dim RBRACKET np_get_array_address
    (67) factor -> . factor_prima_1
    (68) factor -> . function_call
    (69) factor -> . special_functions
    (70) factor_prima_1 -> . PLUS varcte
    (71) factor_prima_1 -> . MINUS np_set_as_negative varcte
    (72) factor_prima_1 -> . varcte
    (97) function_call -> . ID LPAREN np_check_function_call np_function_end_params RPAREN
    (98) function_call -> . ID LPAREN np_check_function_call function_call_1 np_function_end_params RPAREN
    (34) special_functions -> . mean
    (35) special_functions -> . median
    (36) special_functions -> . variance
    (37) special_functions -> . p_variance
    (38) special_functions -> . standard_deviation
    (39) special_functions -> . p_standard_deviation
    (73) varcte -> . ID np_add_id
    (74) varcte -> . CTEI np_add_cte_int
    (75) varcte -> . CTEF np_add_cte_float
    (76) varcte -> . CTEC np_add_cte_char
    (77) varcte -> . TRUE np_add_cte_bool
    (78) varcte -> . FALSE np_add_cte_bool
    (103) mean -> . MEAN LPAREN ID RPAREN np_add_mean_quadruple
    (104) median -> . MEDIAN LPAREN ID RPAREN np_add_median_quadruple
    (105) variance -> . VARIANCE LPAREN ID RPAREN np_add_variance_quadruple
    (106) p_variance -> . PVARIANCE LPAREN ID RPAREN np_add_p_variance_quadruple
    (107) standard_deviation -> . STDEV LPAREN ID RPAREN np_add_stdev_quadruple
    (108) p_standard_deviation -> . PSTDEV LPAREN ID RPAREN np_add_p_stdev_quadruple

    LPAREN          shift and go to state 99
    ID              shift and go to state 100
    PLUS            shift and go to state 104
    MINUS           shift and go to state 106
    CTEI            shift and go to state 113
    CTEF            shift and go to state 114
    CTEC            shift and go to state 115
    TRUE            shift and go to state 116
    FALSE           shift and go to state 117
    MEAN            shift and go to state 118
    MEDIAN          shift and go to state 119
    VARIANCE        shift and go to state 120
    PVARIANCE       shift and go to state 121
    STDEV           shift and go to state 122
    PSTDEV          shift and go to state 123

    exp                            shift and go to state 246
    term                           shift and go to state 97
    factor                         shift and go to state 98
    factor_prima_1                 shift and go to state 101
    function_call                  shift and go to state 102
    special_functions              shift and go to state 103
    varcte                         shift and go to state 105
    mean                           shift and go to state 107
    median                         shift and go to state 108
    variance                       shift and go to state 109
    p_variance                     shift and go to state 110
    standard_deviation             shift and go to state 111
    p_standard_deviation           shift and go to state 112

state 201

    (56) expression1 -> exp NE np_add_operator . exp
    (57) exp -> . term np_add_quadruple_sum_min
    (58) exp -> . term np_add_quadruple_sum_min exp_1
    (61) term -> . factor np_add_quadruple_times_div
    (62) term -> . factor np_add_quadruple_times_div term_2
    (65) factor -> . LPAREN np_add_paren expression RPAREN np_pop_paren
    (66) factor -> . ID np_add_id LBRACKET np_check_is_array expression np_verify_array_dim RBRACKET np_get_array_address
    (67) factor -> . factor_prima_1
    (68) factor -> . function_call
    (69) factor -> . special_functions
    (70) factor_prima_1 -> . PLUS varcte
    (71) factor_prima_1 -> . MINUS np_set_as_negative varcte
    (72) factor_prima_1 -> . varcte
    (97) function_call -> . ID LPAREN np_check_function_call np_function_end_params RPAREN
    (98) function_call -> . ID LPAREN np_check_function_call function_call_1 np_function_end_params RPAREN
    (34) special_functions -> . mean
    (35) special_functions -> . median
    (36) special_functions -> . variance
    (37) special_functions -> . p_variance
    (38) special_functions -> . standard_deviation
    (39) special_functions -> . p_standard_deviation
    (73) varcte -> . ID np_add_id
    (74) varcte -> . CTEI np_add_cte_int
    (75) varcte -> . CTEF np_add_cte_float
    (76) varcte -> . CTEC np_add_cte_char
    (77) varcte -> . TRUE np_add_cte_bool
    (78) varcte -> . FALSE np_add_cte_bool
    (103) mean -> . MEAN LPAREN ID RPAREN np_add_mean_quadruple
    (104) median -> . MEDIAN LPAREN ID RPAREN np_add_median_quadruple
    (105) variance -> . VARIANCE LPAREN ID RPAREN np_add_variance_quadruple
    (106) p_variance -> . PVARIANCE LPAREN ID RPAREN np_add_p_variance_quadruple
    (107) standard_deviation -> . STDEV LPAREN ID RPAREN np_add_stdev_quadruple
    (108) p_standard_deviation -> . PSTDEV LPAREN ID RPAREN np_add_p_stdev_quadruple

    LPAREN          shift and go to state 99
    ID              shift and go to state 100
    PLUS            shift and go to state 104
    MINUS           shift and go to state 106
    CTEI            shift and go to state 113
    CTEF            shift and go to state 114
    CTEC            shift and go to state 115
    TRUE            shift and go to state 116
    FALSE           shift and go to state 117
    MEAN            shift and go to state 118
    MEDIAN          shift and go to state 119
    VARIANCE        shift and go to state 120
    PVARIANCE       shift and go to state 121
    STDEV           shift and go to state 122
    PSTDEV          shift and go to state 123

    exp                            shift and go to state 247
    term                           shift and go to state 97
    factor                         shift and go to state 98
    factor_prima_1                 shift and go to state 101
    function_call                  shift and go to state 102
    special_functions              shift and go to state 103
    varcte                         shift and go to state 105
    mean                           shift and go to state 107
    median                         shift and go to state 108
    variance                       shift and go to state 109
    p_variance                     shift and go to state 110
    standard_deviation             shift and go to state 111
    p_standard_deviation           shift and go to state 112

state 202

    (58) exp -> term np_add_quadruple_sum_min exp_1 .

    LT              reduce using rule 58 (exp -> term np_add_quadruple_sum_min exp_1 .)
    LE              reduce using rule 58 (exp -> term np_add_quadruple_sum_min exp_1 .)
    GT              reduce using rule 58 (exp -> term np_add_quadruple_sum_min exp_1 .)
    GE              reduce using rule 58 (exp -> term np_add_quadruple_sum_min exp_1 .)
    EQ              reduce using rule 58 (exp -> term np_add_quadruple_sum_min exp_1 .)
    NE              reduce using rule 58 (exp -> term np_add_quadruple_sum_min exp_1 .)
    AND             reduce using rule 58 (exp -> term np_add_quadruple_sum_min exp_1 .)
    OR              reduce using rule 58 (exp -> term np_add_quadruple_sum_min exp_1 .)
    SEMI            reduce using rule 58 (exp -> term np_add_quadruple_sum_min exp_1 .)
    RPAREN          reduce using rule 58 (exp -> term np_add_quadruple_sum_min exp_1 .)
    COMMA           reduce using rule 58 (exp -> term np_add_quadruple_sum_min exp_1 .)
    RBRACKET        reduce using rule 58 (exp -> term np_add_quadruple_sum_min exp_1 .)
    TO              reduce using rule 58 (exp -> term np_add_quadruple_sum_min exp_1 .)
    BY              reduce using rule 58 (exp -> term np_add_quadruple_sum_min exp_1 .)


state 203

    (59) exp_1 -> PLUS . np_add_operator exp
    (121) np_add_operator -> .

    LPAREN          reduce using rule 121 (np_add_operator -> .)
    ID              reduce using rule 121 (np_add_operator -> .)
    PLUS            reduce using rule 121 (np_add_operator -> .)
    MINUS           reduce using rule 121 (np_add_operator -> .)
    CTEI            reduce using rule 121 (np_add_operator -> .)
    CTEF            reduce using rule 121 (np_add_operator -> .)
    CTEC            reduce using rule 121 (np_add_operator -> .)
    TRUE            reduce using rule 121 (np_add_operator -> .)
    FALSE           reduce using rule 121 (np_add_operator -> .)
    MEAN            reduce using rule 121 (np_add_operator -> .)
    MEDIAN          reduce using rule 121 (np_add_operator -> .)
    VARIANCE        reduce using rule 121 (np_add_operator -> .)
    PVARIANCE       reduce using rule 121 (np_add_operator -> .)
    STDEV           reduce using rule 121 (np_add_operator -> .)
    PSTDEV          reduce using rule 121 (np_add_operator -> .)

    np_add_operator                shift and go to state 248

state 204

    (60) exp_1 -> MINUS . np_add_operator exp
    (121) np_add_operator -> .

    LPAREN          reduce using rule 121 (np_add_operator -> .)
    ID              reduce using rule 121 (np_add_operator -> .)
    PLUS            reduce using rule 121 (np_add_operator -> .)
    MINUS           reduce using rule 121 (np_add_operator -> .)
    CTEI            reduce using rule 121 (np_add_operator -> .)
    CTEF            reduce using rule 121 (np_add_operator -> .)
    CTEC            reduce using rule 121 (np_add_operator -> .)
    TRUE            reduce using rule 121 (np_add_operator -> .)
    FALSE           reduce using rule 121 (np_add_operator -> .)
    MEAN            reduce using rule 121 (np_add_operator -> .)
    MEDIAN          reduce using rule 121 (np_add_operator -> .)
    VARIANCE        reduce using rule 121 (np_add_operator -> .)
    PVARIANCE       reduce using rule 121 (np_add_operator -> .)
    STDEV           reduce using rule 121 (np_add_operator -> .)
    PSTDEV          reduce using rule 121 (np_add_operator -> .)

    np_add_operator                shift and go to state 249

state 205

    (62) term -> factor np_add_quadruple_times_div term_2 .

    PLUS            reduce using rule 62 (term -> factor np_add_quadruple_times_div term_2 .)
    MINUS           reduce using rule 62 (term -> factor np_add_quadruple_times_div term_2 .)
    LT              reduce using rule 62 (term -> factor np_add_quadruple_times_div term_2 .)
    LE              reduce using rule 62 (term -> factor np_add_quadruple_times_div term_2 .)
    GT              reduce using rule 62 (term -> factor np_add_quadruple_times_div term_2 .)
    GE              reduce using rule 62 (term -> factor np_add_quadruple_times_div term_2 .)
    EQ              reduce using rule 62 (term -> factor np_add_quadruple_times_div term_2 .)
    NE              reduce using rule 62 (term -> factor np_add_quadruple_times_div term_2 .)
    AND             reduce using rule 62 (term -> factor np_add_quadruple_times_div term_2 .)
    OR              reduce using rule 62 (term -> factor np_add_quadruple_times_div term_2 .)
    SEMI            reduce using rule 62 (term -> factor np_add_quadruple_times_div term_2 .)
    RPAREN          reduce using rule 62 (term -> factor np_add_quadruple_times_div term_2 .)
    COMMA           reduce using rule 62 (term -> factor np_add_quadruple_times_div term_2 .)
    RBRACKET        reduce using rule 62 (term -> factor np_add_quadruple_times_div term_2 .)
    TO              reduce using rule 62 (term -> factor np_add_quadruple_times_div term_2 .)
    BY              reduce using rule 62 (term -> factor np_add_quadruple_times_div term_2 .)


state 206

    (63) term_2 -> TIMES . np_add_operator term
    (121) np_add_operator -> .

    LPAREN          reduce using rule 121 (np_add_operator -> .)
    ID              reduce using rule 121 (np_add_operator -> .)
    PLUS            reduce using rule 121 (np_add_operator -> .)
    MINUS           reduce using rule 121 (np_add_operator -> .)
    CTEI            reduce using rule 121 (np_add_operator -> .)
    CTEF            reduce using rule 121 (np_add_operator -> .)
    CTEC            reduce using rule 121 (np_add_operator -> .)
    TRUE            reduce using rule 121 (np_add_operator -> .)
    FALSE           reduce using rule 121 (np_add_operator -> .)
    MEAN            reduce using rule 121 (np_add_operator -> .)
    MEDIAN          reduce using rule 121 (np_add_operator -> .)
    VARIANCE        reduce using rule 121 (np_add_operator -> .)
    PVARIANCE       reduce using rule 121 (np_add_operator -> .)
    STDEV           reduce using rule 121 (np_add_operator -> .)
    PSTDEV          reduce using rule 121 (np_add_operator -> .)

    np_add_operator                shift and go to state 250

state 207

    (64) term_2 -> DIVIDE . np_add_operator term
    (121) np_add_operator -> .

    LPAREN          reduce using rule 121 (np_add_operator -> .)
    ID              reduce using rule 121 (np_add_operator -> .)
    PLUS            reduce using rule 121 (np_add_operator -> .)
    MINUS           reduce using rule 121 (np_add_operator -> .)
    CTEI            reduce using rule 121 (np_add_operator -> .)
    CTEF            reduce using rule 121 (np_add_operator -> .)
    CTEC            reduce using rule 121 (np_add_operator -> .)
    TRUE            reduce using rule 121 (np_add_operator -> .)
    FALSE           reduce using rule 121 (np_add_operator -> .)
    MEAN            reduce using rule 121 (np_add_operator -> .)
    MEDIAN          reduce using rule 121 (np_add_operator -> .)
    VARIANCE        reduce using rule 121 (np_add_operator -> .)
    PVARIANCE       reduce using rule 121 (np_add_operator -> .)
    STDEV           reduce using rule 121 (np_add_operator -> .)
    PSTDEV          reduce using rule 121 (np_add_operator -> .)

    np_add_operator                shift and go to state 251

state 208

    (65) factor -> LPAREN np_add_paren expression . RPAREN np_pop_paren
    (49) expression0 -> expression . AND np_add_operator expression
    (50) expression0 -> expression . OR np_add_operator expression

    RPAREN          shift and go to state 252
    AND             shift and go to state 143
    OR              shift and go to state 144


state 209

    (66) factor -> ID np_add_id LBRACKET . np_check_is_array expression np_verify_array_dim RBRACKET np_get_array_address
    (151) np_check_is_array -> .

    LPAREN          reduce using rule 151 (np_check_is_array -> .)
    ID              reduce using rule 151 (np_check_is_array -> .)
    PLUS            reduce using rule 151 (np_check_is_array -> .)
    MINUS           reduce using rule 151 (np_check_is_array -> .)
    CTEI            reduce using rule 151 (np_check_is_array -> .)
    CTEF            reduce using rule 151 (np_check_is_array -> .)
    CTEC            reduce using rule 151 (np_check_is_array -> .)
    TRUE            reduce using rule 151 (np_check_is_array -> .)
    FALSE           reduce using rule 151 (np_check_is_array -> .)
    MEAN            reduce using rule 151 (np_check_is_array -> .)
    MEDIAN          reduce using rule 151 (np_check_is_array -> .)
    VARIANCE        reduce using rule 151 (np_check_is_array -> .)
    PVARIANCE       reduce using rule 151 (np_check_is_array -> .)
    STDEV           reduce using rule 151 (np_check_is_array -> .)
    PSTDEV          reduce using rule 151 (np_check_is_array -> .)

    np_check_is_array              shift and go to state 253

state 210

    (97) function_call -> ID LPAREN np_check_function_call . np_function_end_params RPAREN
    (98) function_call -> ID LPAREN np_check_function_call . function_call_1 np_function_end_params RPAREN
    (150) np_function_end_params -> .
    (101) function_call_1 -> . expression np_function_call_add_param
    (102) function_call_1 -> . expression np_function_call_add_param COMMA function_call_1
    (46) expression -> . exp
    (47) expression -> . expression1 np_add_quadruple_logical
    (48) expression -> . expression0 np_add_quadruple_or_and
    (57) exp -> . term np_add_quadruple_sum_min
    (58) exp -> . term np_add_quadruple_sum_min exp_1
    (51) expression1 -> . exp LT np_add_operator exp
    (52) expression1 -> . exp LE np_add_operator exp
    (53) expression1 -> . exp GT np_add_operator exp
    (54) expression1 -> . exp GE np_add_operator exp
    (55) expression1 -> . exp EQ np_add_operator exp
    (56) expression1 -> . exp NE np_add_operator exp
    (49) expression0 -> . expression AND np_add_operator expression
    (50) expression0 -> . expression OR np_add_operator expression
    (61) term -> . factor np_add_quadruple_times_div
    (62) term -> . factor np_add_quadruple_times_div term_2
    (65) factor -> . LPAREN np_add_paren expression RPAREN np_pop_paren
    (66) factor -> . ID np_add_id LBRACKET np_check_is_array expression np_verify_array_dim RBRACKET np_get_array_address
    (67) factor -> . factor_prima_1
    (68) factor -> . function_call
    (69) factor -> . special_functions
    (70) factor_prima_1 -> . PLUS varcte
    (71) factor_prima_1 -> . MINUS np_set_as_negative varcte
    (72) factor_prima_1 -> . varcte
    (97) function_call -> . ID LPAREN np_check_function_call np_function_end_params RPAREN
    (98) function_call -> . ID LPAREN np_check_function_call function_call_1 np_function_end_params RPAREN
    (34) special_functions -> . mean
    (35) special_functions -> . median
    (36) special_functions -> . variance
    (37) special_functions -> . p_variance
    (38) special_functions -> . standard_deviation
    (39) special_functions -> . p_standard_deviation
    (73) varcte -> . ID np_add_id
    (74) varcte -> . CTEI np_add_cte_int
    (75) varcte -> . CTEF np_add_cte_float
    (76) varcte -> . CTEC np_add_cte_char
    (77) varcte -> . TRUE np_add_cte_bool
    (78) varcte -> . FALSE np_add_cte_bool
    (103) mean -> . MEAN LPAREN ID RPAREN np_add_mean_quadruple
    (104) median -> . MEDIAN LPAREN ID RPAREN np_add_median_quadruple
    (105) variance -> . VARIANCE LPAREN ID RPAREN np_add_variance_quadruple
    (106) p_variance -> . PVARIANCE LPAREN ID RPAREN np_add_p_variance_quadruple
    (107) standard_deviation -> . STDEV LPAREN ID RPAREN np_add_stdev_quadruple
    (108) p_standard_deviation -> . PSTDEV LPAREN ID RPAREN np_add_p_stdev_quadruple

    RPAREN          reduce using rule 150 (np_function_end_params -> .)
    LPAREN          shift and go to state 99
    ID              shift and go to state 100
    PLUS            shift and go to state 104
    MINUS           shift and go to state 106
    CTEI            shift and go to state 113
    CTEF            shift and go to state 114
    CTEC            shift and go to state 115
    TRUE            shift and go to state 116
    FALSE           shift and go to state 117
    MEAN            shift and go to state 118
    MEDIAN          shift and go to state 119
    VARIANCE        shift and go to state 120
    PVARIANCE       shift and go to state 121
    STDEV           shift and go to state 122
    PSTDEV          shift and go to state 123

    np_function_end_params         shift and go to state 254
    function_call_1                shift and go to state 255
    expression                     shift and go to state 181
    exp                            shift and go to state 94
    expression1                    shift and go to state 95
    expression0                    shift and go to state 96
    term                           shift and go to state 97
    factor                         shift and go to state 98
    factor_prima_1                 shift and go to state 101
    function_call                  shift and go to state 102
    special_functions              shift and go to state 103
    varcte                         shift and go to state 105
    mean                           shift and go to state 107
    median                         shift and go to state 108
    variance                       shift and go to state 109
    p_variance                     shift and go to state 110
    standard_deviation             shift and go to state 111
    p_standard_deviation           shift and go to state 112

state 211

    (73) varcte -> ID np_add_id .

    TIMES           reduce using rule 73 (varcte -> ID np_add_id .)
    DIVIDE          reduce using rule 73 (varcte -> ID np_add_id .)
    PLUS            reduce using rule 73 (varcte -> ID np_add_id .)
    MINUS           reduce using rule 73 (varcte -> ID np_add_id .)
    LT              reduce using rule 73 (varcte -> ID np_add_id .)
    LE              reduce using rule 73 (varcte -> ID np_add_id .)
    GT              reduce using rule 73 (varcte -> ID np_add_id .)
    GE              reduce using rule 73 (varcte -> ID np_add_id .)
    EQ              reduce using rule 73 (varcte -> ID np_add_id .)
    NE              reduce using rule 73 (varcte -> ID np_add_id .)
    AND             reduce using rule 73 (varcte -> ID np_add_id .)
    OR              reduce using rule 73 (varcte -> ID np_add_id .)
    SEMI            reduce using rule 73 (varcte -> ID np_add_id .)
    RPAREN          reduce using rule 73 (varcte -> ID np_add_id .)
    COMMA           reduce using rule 73 (varcte -> ID np_add_id .)
    RBRACKET        reduce using rule 73 (varcte -> ID np_add_id .)
    TO              reduce using rule 73 (varcte -> ID np_add_id .)
    BY              reduce using rule 73 (varcte -> ID np_add_id .)


state 212

    (71) factor_prima_1 -> MINUS np_set_as_negative varcte .

    TIMES           reduce using rule 71 (factor_prima_1 -> MINUS np_set_as_negative varcte .)
    DIVIDE          reduce using rule 71 (factor_prima_1 -> MINUS np_set_as_negative varcte .)
    PLUS            reduce using rule 71 (factor_prima_1 -> MINUS np_set_as_negative varcte .)
    MINUS           reduce using rule 71 (factor_prima_1 -> MINUS np_set_as_negative varcte .)
    LT              reduce using rule 71 (factor_prima_1 -> MINUS np_set_as_negative varcte .)
    LE              reduce using rule 71 (factor_prima_1 -> MINUS np_set_as_negative varcte .)
    GT              reduce using rule 71 (factor_prima_1 -> MINUS np_set_as_negative varcte .)
    GE              reduce using rule 71 (factor_prima_1 -> MINUS np_set_as_negative varcte .)
    EQ              reduce using rule 71 (factor_prima_1 -> MINUS np_set_as_negative varcte .)
    NE              reduce using rule 71 (factor_prima_1 -> MINUS np_set_as_negative varcte .)
    AND             reduce using rule 71 (factor_prima_1 -> MINUS np_set_as_negative varcte .)
    OR              reduce using rule 71 (factor_prima_1 -> MINUS np_set_as_negative varcte .)
    SEMI            reduce using rule 71 (factor_prima_1 -> MINUS np_set_as_negative varcte .)
    RPAREN          reduce using rule 71 (factor_prima_1 -> MINUS np_set_as_negative varcte .)
    COMMA           reduce using rule 71 (factor_prima_1 -> MINUS np_set_as_negative varcte .)
    RBRACKET        reduce using rule 71 (factor_prima_1 -> MINUS np_set_as_negative varcte .)
    TO              reduce using rule 71 (factor_prima_1 -> MINUS np_set_as_negative varcte .)
    BY              reduce using rule 71 (factor_prima_1 -> MINUS np_set_as_negative varcte .)


state 213

    (103) mean -> MEAN LPAREN ID . RPAREN np_add_mean_quadruple

    RPAREN          shift and go to state 256


state 214

    (104) median -> MEDIAN LPAREN ID . RPAREN np_add_median_quadruple

    RPAREN          shift and go to state 257


state 215

    (105) variance -> VARIANCE LPAREN ID . RPAREN np_add_variance_quadruple

    RPAREN          shift and go to state 258


state 216

    (106) p_variance -> PVARIANCE LPAREN ID . RPAREN np_add_p_variance_quadruple

    RPAREN          shift and go to state 259


state 217

    (107) standard_deviation -> STDEV LPAREN ID . RPAREN np_add_stdev_quadruple

    RPAREN          shift and go to state 260


state 218

    (108) p_standard_deviation -> PSTDEV LPAREN ID . RPAREN np_add_p_stdev_quadruple

    RPAREN          shift and go to state 261


state 219

    (95) non_conditional_loop -> FOR LPAREN ID np_add_id . EQUALS np_add_operator expression np_assign_expression_for TO expression np_non_conditional_limit BY expression RPAREN block np_non_conditional_end

    EQUALS          shift and go to state 262


state 220

    (94) conditional_loop -> WHILE np_while_init LPAREN expression . RPAREN np_while_expression DO block np_while_end_block
    (49) expression0 -> expression . AND np_add_operator expression
    (50) expression0 -> expression . OR np_add_operator expression

    RPAREN          shift and go to state 263
    AND             shift and go to state 143
    OR              shift and go to state 144


state 221

    (25) params -> ID COLON type np_add_vars . np_add_params_type COMMA params
    (26) params -> ID COLON type np_add_vars . np_add_params_type
    (143) np_add_params_type -> .

    COMMA           reduce using rule 143 (np_add_params_type -> .)
    RPAREN          reduce using rule 143 (np_add_params_type -> .)

    np_add_params_type             shift and go to state 264

state 222

    (16) function -> FUNCTION ID COLON return_type np_create_new_scope LPAREN RPAREN np_set_func_start_point block np_end_function .

    FUNCTION        reduce using rule 16 (function -> FUNCTION ID COLON return_type np_create_new_scope LPAREN RPAREN np_set_func_start_point block np_end_function .)
    MAIN            reduce using rule 16 (function -> FUNCTION ID COLON return_type np_create_new_scope LPAREN RPAREN np_set_func_start_point block np_end_function .)


state 223

    (18) function -> FUNCTION ID COLON return_type np_create_new_scope LPAREN RPAREN vars np_set_func_start_point block . np_end_function
    (145) np_end_function -> .

    FUNCTION        reduce using rule 145 (np_end_function -> .)
    MAIN            reduce using rule 145 (np_end_function -> .)

    np_end_function                shift and go to state 265

state 224

    (17) function -> FUNCTION ID COLON return_type np_create_new_scope LPAREN params RPAREN np_set_func_start_point block . np_end_function
    (145) np_end_function -> .

    FUNCTION        reduce using rule 145 (np_end_function -> .)
    MAIN            reduce using rule 145 (np_end_function -> .)

    np_end_function                shift and go to state 266

state 225

    (19) function -> FUNCTION ID COLON return_type np_create_new_scope LPAREN params RPAREN vars np_set_func_start_point . block np_end_function
    (22) block -> . LBRACE statements RBRACE

    LBRACE          shift and go to state 48

    block                          shift and go to state 267

state 226

    (99) void_function_call -> ID LPAREN np_check_function_call np_function_end_params RPAREN . SEMI

    SEMI            shift and go to state 268


state 227

    (100) void_function_call -> ID LPAREN np_check_function_call function_call_1 np_function_end_params . RPAREN SEMI

    RPAREN          shift and go to state 269


state 228

    (101) function_call_1 -> expression np_function_call_add_param .
    (102) function_call_1 -> expression np_function_call_add_param . COMMA function_call_1

    RPAREN          reduce using rule 101 (function_call_1 -> expression np_function_call_add_param .)
    COMMA           shift and go to state 270


state 229

    (42) assignment -> ID np_add_id LBRACKET np_check_is_array expression . np_verify_array_dim RBRACKET np_get_array_address EQUALS np_add_operator expression np_assign_expression SEMI
    (49) expression0 -> expression . AND np_add_operator expression
    (50) expression0 -> expression . OR np_add_operator expression
    (152) np_verify_array_dim -> .

    AND             shift and go to state 143
    OR              shift and go to state 144
    RBRACKET        reduce using rule 152 (np_verify_array_dim -> .)

    np_verify_array_dim            shift and go to state 271

state 230

    (43) assignment -> ID np_add_id EQUALS np_add_operator expression . np_assign_expression SEMI
    (49) expression0 -> expression . AND np_add_operator expression
    (50) expression0 -> expression . OR np_add_operator expression
    (128) np_assign_expression -> .

    AND             shift and go to state 143
    OR              shift and go to state 144
    SEMI            reduce using rule 128 (np_assign_expression -> .)

    np_assign_expression           shift and go to state 272

state 231

    (44) condition -> IF LPAREN expression RPAREN np_condition_gotof . block np_condition_end_gotof
    (45) condition -> IF LPAREN expression RPAREN np_condition_gotof . block ELSE np_condition_goto_else block np_condition_end_gotof
    (22) block -> . LBRACE statements RBRACE

    LBRACE          shift and go to state 48

    block                          shift and go to state 273

state 232

    (79) writing -> PRINT LPAREN writing_1 RPAREN SEMI .

    ID              reduce using rule 79 (writing -> PRINT LPAREN writing_1 RPAREN SEMI .)
    IF              reduce using rule 79 (writing -> PRINT LPAREN writing_1 RPAREN SEMI .)
    PRINT           reduce using rule 79 (writing -> PRINT LPAREN writing_1 RPAREN SEMI .)
    PRINTLN         reduce using rule 79 (writing -> PRINT LPAREN writing_1 RPAREN SEMI .)
    READ            reduce using rule 79 (writing -> PRINT LPAREN writing_1 RPAREN SEMI .)
    RETURN          reduce using rule 79 (writing -> PRINT LPAREN writing_1 RPAREN SEMI .)
    FOR             reduce using rule 79 (writing -> PRINT LPAREN writing_1 RPAREN SEMI .)
    WHILE           reduce using rule 79 (writing -> PRINT LPAREN writing_1 RPAREN SEMI .)
    RBRACE          reduce using rule 79 (writing -> PRINT LPAREN writing_1 RPAREN SEMI .)


state 233

    (81) writing_1 -> expression np_add_print_quadruple_exp COMMA . writing_1
    (81) writing_1 -> . expression np_add_print_quadruple_exp COMMA writing_1
    (82) writing_1 -> . CTESTRING np_add_print_quadruple_str COMMA writing_1
    (83) writing_1 -> . expression np_add_print_quadruple_exp
    (84) writing_1 -> . CTESTRING np_add_print_quadruple_str
    (46) expression -> . exp
    (47) expression -> . expression1 np_add_quadruple_logical
    (48) expression -> . expression0 np_add_quadruple_or_and
    (57) exp -> . term np_add_quadruple_sum_min
    (58) exp -> . term np_add_quadruple_sum_min exp_1
    (51) expression1 -> . exp LT np_add_operator exp
    (52) expression1 -> . exp LE np_add_operator exp
    (53) expression1 -> . exp GT np_add_operator exp
    (54) expression1 -> . exp GE np_add_operator exp
    (55) expression1 -> . exp EQ np_add_operator exp
    (56) expression1 -> . exp NE np_add_operator exp
    (49) expression0 -> . expression AND np_add_operator expression
    (50) expression0 -> . expression OR np_add_operator expression
    (61) term -> . factor np_add_quadruple_times_div
    (62) term -> . factor np_add_quadruple_times_div term_2
    (65) factor -> . LPAREN np_add_paren expression RPAREN np_pop_paren
    (66) factor -> . ID np_add_id LBRACKET np_check_is_array expression np_verify_array_dim RBRACKET np_get_array_address
    (67) factor -> . factor_prima_1
    (68) factor -> . function_call
    (69) factor -> . special_functions
    (70) factor_prima_1 -> . PLUS varcte
    (71) factor_prima_1 -> . MINUS np_set_as_negative varcte
    (72) factor_prima_1 -> . varcte
    (97) function_call -> . ID LPAREN np_check_function_call np_function_end_params RPAREN
    (98) function_call -> . ID LPAREN np_check_function_call function_call_1 np_function_end_params RPAREN
    (34) special_functions -> . mean
    (35) special_functions -> . median
    (36) special_functions -> . variance
    (37) special_functions -> . p_variance
    (38) special_functions -> . standard_deviation
    (39) special_functions -> . p_standard_deviation
    (73) varcte -> . ID np_add_id
    (74) varcte -> . CTEI np_add_cte_int
    (75) varcte -> . CTEF np_add_cte_float
    (76) varcte -> . CTEC np_add_cte_char
    (77) varcte -> . TRUE np_add_cte_bool
    (78) varcte -> . FALSE np_add_cte_bool
    (103) mean -> . MEAN LPAREN ID RPAREN np_add_mean_quadruple
    (104) median -> . MEDIAN LPAREN ID RPAREN np_add_median_quadruple
    (105) variance -> . VARIANCE LPAREN ID RPAREN np_add_variance_quadruple
    (106) p_variance -> . PVARIANCE LPAREN ID RPAREN np_add_p_variance_quadruple
    (107) standard_deviation -> . STDEV LPAREN ID RPAREN np_add_stdev_quadruple
    (108) p_standard_deviation -> . PSTDEV LPAREN ID RPAREN np_add_p_stdev_quadruple

    CTESTRING       shift and go to state 136
    LPAREN          shift and go to state 99
    ID              shift and go to state 100
    PLUS            shift and go to state 104
    MINUS           shift and go to state 106
    CTEI            shift and go to state 113
    CTEF            shift and go to state 114
    CTEC            shift and go to state 115
    TRUE            shift and go to state 116
    FALSE           shift and go to state 117
    MEAN            shift and go to state 118
    MEDIAN          shift and go to state 119
    VARIANCE        shift and go to state 120
    PVARIANCE       shift and go to state 121
    STDEV           shift and go to state 122
    PSTDEV          shift and go to state 123

    expression                     shift and go to state 135
    writing_1                      shift and go to state 274
    exp                            shift and go to state 94
    expression1                    shift and go to state 95
    expression0                    shift and go to state 96
    term                           shift and go to state 97
    factor                         shift and go to state 98
    factor_prima_1                 shift and go to state 101
    function_call                  shift and go to state 102
    special_functions              shift and go to state 103
    varcte                         shift and go to state 105
    mean                           shift and go to state 107
    median                         shift and go to state 108
    variance                       shift and go to state 109
    p_variance                     shift and go to state 110
    standard_deviation             shift and go to state 111
    p_standard_deviation           shift and go to state 112

state 234

    (82) writing_1 -> CTESTRING np_add_print_quadruple_str COMMA . writing_1
    (81) writing_1 -> . expression np_add_print_quadruple_exp COMMA writing_1
    (82) writing_1 -> . CTESTRING np_add_print_quadruple_str COMMA writing_1
    (83) writing_1 -> . expression np_add_print_quadruple_exp
    (84) writing_1 -> . CTESTRING np_add_print_quadruple_str
    (46) expression -> . exp
    (47) expression -> . expression1 np_add_quadruple_logical
    (48) expression -> . expression0 np_add_quadruple_or_and
    (57) exp -> . term np_add_quadruple_sum_min
    (58) exp -> . term np_add_quadruple_sum_min exp_1
    (51) expression1 -> . exp LT np_add_operator exp
    (52) expression1 -> . exp LE np_add_operator exp
    (53) expression1 -> . exp GT np_add_operator exp
    (54) expression1 -> . exp GE np_add_operator exp
    (55) expression1 -> . exp EQ np_add_operator exp
    (56) expression1 -> . exp NE np_add_operator exp
    (49) expression0 -> . expression AND np_add_operator expression
    (50) expression0 -> . expression OR np_add_operator expression
    (61) term -> . factor np_add_quadruple_times_div
    (62) term -> . factor np_add_quadruple_times_div term_2
    (65) factor -> . LPAREN np_add_paren expression RPAREN np_pop_paren
    (66) factor -> . ID np_add_id LBRACKET np_check_is_array expression np_verify_array_dim RBRACKET np_get_array_address
    (67) factor -> . factor_prima_1
    (68) factor -> . function_call
    (69) factor -> . special_functions
    (70) factor_prima_1 -> . PLUS varcte
    (71) factor_prima_1 -> . MINUS np_set_as_negative varcte
    (72) factor_prima_1 -> . varcte
    (97) function_call -> . ID LPAREN np_check_function_call np_function_end_params RPAREN
    (98) function_call -> . ID LPAREN np_check_function_call function_call_1 np_function_end_params RPAREN
    (34) special_functions -> . mean
    (35) special_functions -> . median
    (36) special_functions -> . variance
    (37) special_functions -> . p_variance
    (38) special_functions -> . standard_deviation
    (39) special_functions -> . p_standard_deviation
    (73) varcte -> . ID np_add_id
    (74) varcte -> . CTEI np_add_cte_int
    (75) varcte -> . CTEF np_add_cte_float
    (76) varcte -> . CTEC np_add_cte_char
    (77) varcte -> . TRUE np_add_cte_bool
    (78) varcte -> . FALSE np_add_cte_bool
    (103) mean -> . MEAN LPAREN ID RPAREN np_add_mean_quadruple
    (104) median -> . MEDIAN LPAREN ID RPAREN np_add_median_quadruple
    (105) variance -> . VARIANCE LPAREN ID RPAREN np_add_variance_quadruple
    (106) p_variance -> . PVARIANCE LPAREN ID RPAREN np_add_p_variance_quadruple
    (107) standard_deviation -> . STDEV LPAREN ID RPAREN np_add_stdev_quadruple
    (108) p_standard_deviation -> . PSTDEV LPAREN ID RPAREN np_add_p_stdev_quadruple

    CTESTRING       shift and go to state 136
    LPAREN          shift and go to state 99
    ID              shift and go to state 100
    PLUS            shift and go to state 104
    MINUS           shift and go to state 106
    CTEI            shift and go to state 113
    CTEF            shift and go to state 114
    CTEC            shift and go to state 115
    TRUE            shift and go to state 116
    FALSE           shift and go to state 117
    MEAN            shift and go to state 118
    MEDIAN          shift and go to state 119
    VARIANCE        shift and go to state 120
    PVARIANCE       shift and go to state 121
    STDEV           shift and go to state 122
    PSTDEV          shift and go to state 123

    writing_1                      shift and go to state 275
    expression                     shift and go to state 135
    exp                            shift and go to state 94
    expression1                    shift and go to state 95
    expression0                    shift and go to state 96
    term                           shift and go to state 97
    factor                         shift and go to state 98
    factor_prima_1                 shift and go to state 101
    function_call                  shift and go to state 102
    special_functions              shift and go to state 103
    varcte                         shift and go to state 105
    mean                           shift and go to state 107
    median                         shift and go to state 108
    variance                       shift and go to state 109
    p_variance                     shift and go to state 110
    standard_deviation             shift and go to state 111
    p_standard_deviation           shift and go to state 112

state 235

    (80) writing -> PRINTLN LPAREN writing_2 RPAREN SEMI .

    ID              reduce using rule 80 (writing -> PRINTLN LPAREN writing_2 RPAREN SEMI .)
    IF              reduce using rule 80 (writing -> PRINTLN LPAREN writing_2 RPAREN SEMI .)
    PRINT           reduce using rule 80 (writing -> PRINTLN LPAREN writing_2 RPAREN SEMI .)
    PRINTLN         reduce using rule 80 (writing -> PRINTLN LPAREN writing_2 RPAREN SEMI .)
    READ            reduce using rule 80 (writing -> PRINTLN LPAREN writing_2 RPAREN SEMI .)
    RETURN          reduce using rule 80 (writing -> PRINTLN LPAREN writing_2 RPAREN SEMI .)
    FOR             reduce using rule 80 (writing -> PRINTLN LPAREN writing_2 RPAREN SEMI .)
    WHILE           reduce using rule 80 (writing -> PRINTLN LPAREN writing_2 RPAREN SEMI .)
    RBRACE          reduce using rule 80 (writing -> PRINTLN LPAREN writing_2 RPAREN SEMI .)


state 236

    (85) writing_2 -> expression np_add_println_quadruple_exp COMMA . writing_2
    (85) writing_2 -> . expression np_add_println_quadruple_exp COMMA writing_2
    (86) writing_2 -> . CTESTRING np_add_println_quadruple_str COMMA writing_2
    (87) writing_2 -> . expression np_add_println_quadruple_exp
    (88) writing_2 -> . CTESTRING np_add_println_quadruple_str
    (46) expression -> . exp
    (47) expression -> . expression1 np_add_quadruple_logical
    (48) expression -> . expression0 np_add_quadruple_or_and
    (57) exp -> . term np_add_quadruple_sum_min
    (58) exp -> . term np_add_quadruple_sum_min exp_1
    (51) expression1 -> . exp LT np_add_operator exp
    (52) expression1 -> . exp LE np_add_operator exp
    (53) expression1 -> . exp GT np_add_operator exp
    (54) expression1 -> . exp GE np_add_operator exp
    (55) expression1 -> . exp EQ np_add_operator exp
    (56) expression1 -> . exp NE np_add_operator exp
    (49) expression0 -> . expression AND np_add_operator expression
    (50) expression0 -> . expression OR np_add_operator expression
    (61) term -> . factor np_add_quadruple_times_div
    (62) term -> . factor np_add_quadruple_times_div term_2
    (65) factor -> . LPAREN np_add_paren expression RPAREN np_pop_paren
    (66) factor -> . ID np_add_id LBRACKET np_check_is_array expression np_verify_array_dim RBRACKET np_get_array_address
    (67) factor -> . factor_prima_1
    (68) factor -> . function_call
    (69) factor -> . special_functions
    (70) factor_prima_1 -> . PLUS varcte
    (71) factor_prima_1 -> . MINUS np_set_as_negative varcte
    (72) factor_prima_1 -> . varcte
    (97) function_call -> . ID LPAREN np_check_function_call np_function_end_params RPAREN
    (98) function_call -> . ID LPAREN np_check_function_call function_call_1 np_function_end_params RPAREN
    (34) special_functions -> . mean
    (35) special_functions -> . median
    (36) special_functions -> . variance
    (37) special_functions -> . p_variance
    (38) special_functions -> . standard_deviation
    (39) special_functions -> . p_standard_deviation
    (73) varcte -> . ID np_add_id
    (74) varcte -> . CTEI np_add_cte_int
    (75) varcte -> . CTEF np_add_cte_float
    (76) varcte -> . CTEC np_add_cte_char
    (77) varcte -> . TRUE np_add_cte_bool
    (78) varcte -> . FALSE np_add_cte_bool
    (103) mean -> . MEAN LPAREN ID RPAREN np_add_mean_quadruple
    (104) median -> . MEDIAN LPAREN ID RPAREN np_add_median_quadruple
    (105) variance -> . VARIANCE LPAREN ID RPAREN np_add_variance_quadruple
    (106) p_variance -> . PVARIANCE LPAREN ID RPAREN np_add_p_variance_quadruple
    (107) standard_deviation -> . STDEV LPAREN ID RPAREN np_add_stdev_quadruple
    (108) p_standard_deviation -> . PSTDEV LPAREN ID RPAREN np_add_p_stdev_quadruple

    CTESTRING       shift and go to state 139
    LPAREN          shift and go to state 99
    ID              shift and go to state 100
    PLUS            shift and go to state 104
    MINUS           shift and go to state 106
    CTEI            shift and go to state 113
    CTEF            shift and go to state 114
    CTEC            shift and go to state 115
    TRUE            shift and go to state 116
    FALSE           shift and go to state 117
    MEAN            shift and go to state 118
    MEDIAN          shift and go to state 119
    VARIANCE        shift and go to state 120
    PVARIANCE       shift and go to state 121
    STDEV           shift and go to state 122
    PSTDEV          shift and go to state 123

    expression                     shift and go to state 138
    writing_2                      shift and go to state 276
    exp                            shift and go to state 94
    expression1                    shift and go to state 95
    expression0                    shift and go to state 96
    term                           shift and go to state 97
    factor                         shift and go to state 98
    factor_prima_1                 shift and go to state 101
    function_call                  shift and go to state 102
    special_functions              shift and go to state 103
    varcte                         shift and go to state 105
    mean                           shift and go to state 107
    median                         shift and go to state 108
    variance                       shift and go to state 109
    p_variance                     shift and go to state 110
    standard_deviation             shift and go to state 111
    p_standard_deviation           shift and go to state 112

state 237

    (86) writing_2 -> CTESTRING np_add_println_quadruple_str COMMA . writing_2
    (85) writing_2 -> . expression np_add_println_quadruple_exp COMMA writing_2
    (86) writing_2 -> . CTESTRING np_add_println_quadruple_str COMMA writing_2
    (87) writing_2 -> . expression np_add_println_quadruple_exp
    (88) writing_2 -> . CTESTRING np_add_println_quadruple_str
    (46) expression -> . exp
    (47) expression -> . expression1 np_add_quadruple_logical
    (48) expression -> . expression0 np_add_quadruple_or_and
    (57) exp -> . term np_add_quadruple_sum_min
    (58) exp -> . term np_add_quadruple_sum_min exp_1
    (51) expression1 -> . exp LT np_add_operator exp
    (52) expression1 -> . exp LE np_add_operator exp
    (53) expression1 -> . exp GT np_add_operator exp
    (54) expression1 -> . exp GE np_add_operator exp
    (55) expression1 -> . exp EQ np_add_operator exp
    (56) expression1 -> . exp NE np_add_operator exp
    (49) expression0 -> . expression AND np_add_operator expression
    (50) expression0 -> . expression OR np_add_operator expression
    (61) term -> . factor np_add_quadruple_times_div
    (62) term -> . factor np_add_quadruple_times_div term_2
    (65) factor -> . LPAREN np_add_paren expression RPAREN np_pop_paren
    (66) factor -> . ID np_add_id LBRACKET np_check_is_array expression np_verify_array_dim RBRACKET np_get_array_address
    (67) factor -> . factor_prima_1
    (68) factor -> . function_call
    (69) factor -> . special_functions
    (70) factor_prima_1 -> . PLUS varcte
    (71) factor_prima_1 -> . MINUS np_set_as_negative varcte
    (72) factor_prima_1 -> . varcte
    (97) function_call -> . ID LPAREN np_check_function_call np_function_end_params RPAREN
    (98) function_call -> . ID LPAREN np_check_function_call function_call_1 np_function_end_params RPAREN
    (34) special_functions -> . mean
    (35) special_functions -> . median
    (36) special_functions -> . variance
    (37) special_functions -> . p_variance
    (38) special_functions -> . standard_deviation
    (39) special_functions -> . p_standard_deviation
    (73) varcte -> . ID np_add_id
    (74) varcte -> . CTEI np_add_cte_int
    (75) varcte -> . CTEF np_add_cte_float
    (76) varcte -> . CTEC np_add_cte_char
    (77) varcte -> . TRUE np_add_cte_bool
    (78) varcte -> . FALSE np_add_cte_bool
    (103) mean -> . MEAN LPAREN ID RPAREN np_add_mean_quadruple
    (104) median -> . MEDIAN LPAREN ID RPAREN np_add_median_quadruple
    (105) variance -> . VARIANCE LPAREN ID RPAREN np_add_variance_quadruple
    (106) p_variance -> . PVARIANCE LPAREN ID RPAREN np_add_p_variance_quadruple
    (107) standard_deviation -> . STDEV LPAREN ID RPAREN np_add_stdev_quadruple
    (108) p_standard_deviation -> . PSTDEV LPAREN ID RPAREN np_add_p_stdev_quadruple

    CTESTRING       shift and go to state 139
    LPAREN          shift and go to state 99
    ID              shift and go to state 100
    PLUS            shift and go to state 104
    MINUS           shift and go to state 106
    CTEI            shift and go to state 113
    CTEF            shift and go to state 114
    CTEC            shift and go to state 115
    TRUE            shift and go to state 116
    FALSE           shift and go to state 117
    MEAN            shift and go to state 118
    MEDIAN          shift and go to state 119
    VARIANCE        shift and go to state 120
    PVARIANCE       shift and go to state 121
    STDEV           shift and go to state 122
    PSTDEV          shift and go to state 123

    writing_2                      shift and go to state 277
    expression                     shift and go to state 138
    exp                            shift and go to state 94
    expression1                    shift and go to state 95
    expression0                    shift and go to state 96
    term                           shift and go to state 97
    factor                         shift and go to state 98
    factor_prima_1                 shift and go to state 101
    function_call                  shift and go to state 102
    special_functions              shift and go to state 103
    varcte                         shift and go to state 105
    mean                           shift and go to state 107
    median                         shift and go to state 108
    variance                       shift and go to state 109
    p_variance                     shift and go to state 110
    standard_deviation             shift and go to state 111
    p_standard_deviation           shift and go to state 112

state 238

    (89) reading -> READ LPAREN reading_1 RPAREN np_add_read_quadruple . SEMI

    SEMI            shift and go to state 278


state 239

    (91) reading_1 -> ID np_add_id LBRACKET . np_check_is_array expression np_verify_array_dim RBRACKET np_get_array_address
    (151) np_check_is_array -> .

    LPAREN          reduce using rule 151 (np_check_is_array -> .)
    ID              reduce using rule 151 (np_check_is_array -> .)
    PLUS            reduce using rule 151 (np_check_is_array -> .)
    MINUS           reduce using rule 151 (np_check_is_array -> .)
    CTEI            reduce using rule 151 (np_check_is_array -> .)
    CTEF            reduce using rule 151 (np_check_is_array -> .)
    CTEC            reduce using rule 151 (np_check_is_array -> .)
    TRUE            reduce using rule 151 (np_check_is_array -> .)
    FALSE           reduce using rule 151 (np_check_is_array -> .)
    MEAN            reduce using rule 151 (np_check_is_array -> .)
    MEDIAN          reduce using rule 151 (np_check_is_array -> .)
    VARIANCE        reduce using rule 151 (np_check_is_array -> .)
    PVARIANCE       reduce using rule 151 (np_check_is_array -> .)
    STDEV           reduce using rule 151 (np_check_is_array -> .)
    PSTDEV          reduce using rule 151 (np_check_is_array -> .)

    np_check_is_array              shift and go to state 279

state 240

    (49) expression0 -> expression AND np_add_operator expression .
    (49) expression0 -> expression . AND np_add_operator expression
    (50) expression0 -> expression . OR np_add_operator expression

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    SEMI            reduce using rule 49 (expression0 -> expression AND np_add_operator expression .)
    RPAREN          reduce using rule 49 (expression0 -> expression AND np_add_operator expression .)
    COMMA           reduce using rule 49 (expression0 -> expression AND np_add_operator expression .)
    RBRACKET        reduce using rule 49 (expression0 -> expression AND np_add_operator expression .)
    TO              reduce using rule 49 (expression0 -> expression AND np_add_operator expression .)
    BY              reduce using rule 49 (expression0 -> expression AND np_add_operator expression .)
    AND             shift and go to state 143
    OR              shift and go to state 144

  ! AND             [ reduce using rule 49 (expression0 -> expression AND np_add_operator expression .) ]
  ! OR              [ reduce using rule 49 (expression0 -> expression AND np_add_operator expression .) ]


state 241

    (50) expression0 -> expression OR np_add_operator expression .
    (49) expression0 -> expression . AND np_add_operator expression
    (50) expression0 -> expression . OR np_add_operator expression

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    SEMI            reduce using rule 50 (expression0 -> expression OR np_add_operator expression .)
    RPAREN          reduce using rule 50 (expression0 -> expression OR np_add_operator expression .)
    COMMA           reduce using rule 50 (expression0 -> expression OR np_add_operator expression .)
    RBRACKET        reduce using rule 50 (expression0 -> expression OR np_add_operator expression .)
    TO              reduce using rule 50 (expression0 -> expression OR np_add_operator expression .)
    BY              reduce using rule 50 (expression0 -> expression OR np_add_operator expression .)
    AND             shift and go to state 143
    OR              shift and go to state 144

  ! AND             [ reduce using rule 50 (expression0 -> expression OR np_add_operator expression .) ]
  ! OR              [ reduce using rule 50 (expression0 -> expression OR np_add_operator expression .) ]


state 242

    (51) expression1 -> exp LT np_add_operator exp .

    AND             reduce using rule 51 (expression1 -> exp LT np_add_operator exp .)
    OR              reduce using rule 51 (expression1 -> exp LT np_add_operator exp .)
    SEMI            reduce using rule 51 (expression1 -> exp LT np_add_operator exp .)
    RPAREN          reduce using rule 51 (expression1 -> exp LT np_add_operator exp .)
    COMMA           reduce using rule 51 (expression1 -> exp LT np_add_operator exp .)
    RBRACKET        reduce using rule 51 (expression1 -> exp LT np_add_operator exp .)
    TO              reduce using rule 51 (expression1 -> exp LT np_add_operator exp .)
    BY              reduce using rule 51 (expression1 -> exp LT np_add_operator exp .)


state 243

    (52) expression1 -> exp LE np_add_operator exp .

    AND             reduce using rule 52 (expression1 -> exp LE np_add_operator exp .)
    OR              reduce using rule 52 (expression1 -> exp LE np_add_operator exp .)
    SEMI            reduce using rule 52 (expression1 -> exp LE np_add_operator exp .)
    RPAREN          reduce using rule 52 (expression1 -> exp LE np_add_operator exp .)
    COMMA           reduce using rule 52 (expression1 -> exp LE np_add_operator exp .)
    RBRACKET        reduce using rule 52 (expression1 -> exp LE np_add_operator exp .)
    TO              reduce using rule 52 (expression1 -> exp LE np_add_operator exp .)
    BY              reduce using rule 52 (expression1 -> exp LE np_add_operator exp .)


state 244

    (53) expression1 -> exp GT np_add_operator exp .

    AND             reduce using rule 53 (expression1 -> exp GT np_add_operator exp .)
    OR              reduce using rule 53 (expression1 -> exp GT np_add_operator exp .)
    SEMI            reduce using rule 53 (expression1 -> exp GT np_add_operator exp .)
    RPAREN          reduce using rule 53 (expression1 -> exp GT np_add_operator exp .)
    COMMA           reduce using rule 53 (expression1 -> exp GT np_add_operator exp .)
    RBRACKET        reduce using rule 53 (expression1 -> exp GT np_add_operator exp .)
    TO              reduce using rule 53 (expression1 -> exp GT np_add_operator exp .)
    BY              reduce using rule 53 (expression1 -> exp GT np_add_operator exp .)


state 245

    (54) expression1 -> exp GE np_add_operator exp .

    AND             reduce using rule 54 (expression1 -> exp GE np_add_operator exp .)
    OR              reduce using rule 54 (expression1 -> exp GE np_add_operator exp .)
    SEMI            reduce using rule 54 (expression1 -> exp GE np_add_operator exp .)
    RPAREN          reduce using rule 54 (expression1 -> exp GE np_add_operator exp .)
    COMMA           reduce using rule 54 (expression1 -> exp GE np_add_operator exp .)
    RBRACKET        reduce using rule 54 (expression1 -> exp GE np_add_operator exp .)
    TO              reduce using rule 54 (expression1 -> exp GE np_add_operator exp .)
    BY              reduce using rule 54 (expression1 -> exp GE np_add_operator exp .)


state 246

    (55) expression1 -> exp EQ np_add_operator exp .

    AND             reduce using rule 55 (expression1 -> exp EQ np_add_operator exp .)
    OR              reduce using rule 55 (expression1 -> exp EQ np_add_operator exp .)
    SEMI            reduce using rule 55 (expression1 -> exp EQ np_add_operator exp .)
    RPAREN          reduce using rule 55 (expression1 -> exp EQ np_add_operator exp .)
    COMMA           reduce using rule 55 (expression1 -> exp EQ np_add_operator exp .)
    RBRACKET        reduce using rule 55 (expression1 -> exp EQ np_add_operator exp .)
    TO              reduce using rule 55 (expression1 -> exp EQ np_add_operator exp .)
    BY              reduce using rule 55 (expression1 -> exp EQ np_add_operator exp .)


state 247

    (56) expression1 -> exp NE np_add_operator exp .

    AND             reduce using rule 56 (expression1 -> exp NE np_add_operator exp .)
    OR              reduce using rule 56 (expression1 -> exp NE np_add_operator exp .)
    SEMI            reduce using rule 56 (expression1 -> exp NE np_add_operator exp .)
    RPAREN          reduce using rule 56 (expression1 -> exp NE np_add_operator exp .)
    COMMA           reduce using rule 56 (expression1 -> exp NE np_add_operator exp .)
    RBRACKET        reduce using rule 56 (expression1 -> exp NE np_add_operator exp .)
    TO              reduce using rule 56 (expression1 -> exp NE np_add_operator exp .)
    BY              reduce using rule 56 (expression1 -> exp NE np_add_operator exp .)


state 248

    (59) exp_1 -> PLUS np_add_operator . exp
    (57) exp -> . term np_add_quadruple_sum_min
    (58) exp -> . term np_add_quadruple_sum_min exp_1
    (61) term -> . factor np_add_quadruple_times_div
    (62) term -> . factor np_add_quadruple_times_div term_2
    (65) factor -> . LPAREN np_add_paren expression RPAREN np_pop_paren
    (66) factor -> . ID np_add_id LBRACKET np_check_is_array expression np_verify_array_dim RBRACKET np_get_array_address
    (67) factor -> . factor_prima_1
    (68) factor -> . function_call
    (69) factor -> . special_functions
    (70) factor_prima_1 -> . PLUS varcte
    (71) factor_prima_1 -> . MINUS np_set_as_negative varcte
    (72) factor_prima_1 -> . varcte
    (97) function_call -> . ID LPAREN np_check_function_call np_function_end_params RPAREN
    (98) function_call -> . ID LPAREN np_check_function_call function_call_1 np_function_end_params RPAREN
    (34) special_functions -> . mean
    (35) special_functions -> . median
    (36) special_functions -> . variance
    (37) special_functions -> . p_variance
    (38) special_functions -> . standard_deviation
    (39) special_functions -> . p_standard_deviation
    (73) varcte -> . ID np_add_id
    (74) varcte -> . CTEI np_add_cte_int
    (75) varcte -> . CTEF np_add_cte_float
    (76) varcte -> . CTEC np_add_cte_char
    (77) varcte -> . TRUE np_add_cte_bool
    (78) varcte -> . FALSE np_add_cte_bool
    (103) mean -> . MEAN LPAREN ID RPAREN np_add_mean_quadruple
    (104) median -> . MEDIAN LPAREN ID RPAREN np_add_median_quadruple
    (105) variance -> . VARIANCE LPAREN ID RPAREN np_add_variance_quadruple
    (106) p_variance -> . PVARIANCE LPAREN ID RPAREN np_add_p_variance_quadruple
    (107) standard_deviation -> . STDEV LPAREN ID RPAREN np_add_stdev_quadruple
    (108) p_standard_deviation -> . PSTDEV LPAREN ID RPAREN np_add_p_stdev_quadruple

    LPAREN          shift and go to state 99
    ID              shift and go to state 100
    PLUS            shift and go to state 104
    MINUS           shift and go to state 106
    CTEI            shift and go to state 113
    CTEF            shift and go to state 114
    CTEC            shift and go to state 115
    TRUE            shift and go to state 116
    FALSE           shift and go to state 117
    MEAN            shift and go to state 118
    MEDIAN          shift and go to state 119
    VARIANCE        shift and go to state 120
    PVARIANCE       shift and go to state 121
    STDEV           shift and go to state 122
    PSTDEV          shift and go to state 123

    exp                            shift and go to state 280
    term                           shift and go to state 97
    factor                         shift and go to state 98
    factor_prima_1                 shift and go to state 101
    function_call                  shift and go to state 102
    special_functions              shift and go to state 103
    varcte                         shift and go to state 105
    mean                           shift and go to state 107
    median                         shift and go to state 108
    variance                       shift and go to state 109
    p_variance                     shift and go to state 110
    standard_deviation             shift and go to state 111
    p_standard_deviation           shift and go to state 112

state 249

    (60) exp_1 -> MINUS np_add_operator . exp
    (57) exp -> . term np_add_quadruple_sum_min
    (58) exp -> . term np_add_quadruple_sum_min exp_1
    (61) term -> . factor np_add_quadruple_times_div
    (62) term -> . factor np_add_quadruple_times_div term_2
    (65) factor -> . LPAREN np_add_paren expression RPAREN np_pop_paren
    (66) factor -> . ID np_add_id LBRACKET np_check_is_array expression np_verify_array_dim RBRACKET np_get_array_address
    (67) factor -> . factor_prima_1
    (68) factor -> . function_call
    (69) factor -> . special_functions
    (70) factor_prima_1 -> . PLUS varcte
    (71) factor_prima_1 -> . MINUS np_set_as_negative varcte
    (72) factor_prima_1 -> . varcte
    (97) function_call -> . ID LPAREN np_check_function_call np_function_end_params RPAREN
    (98) function_call -> . ID LPAREN np_check_function_call function_call_1 np_function_end_params RPAREN
    (34) special_functions -> . mean
    (35) special_functions -> . median
    (36) special_functions -> . variance
    (37) special_functions -> . p_variance
    (38) special_functions -> . standard_deviation
    (39) special_functions -> . p_standard_deviation
    (73) varcte -> . ID np_add_id
    (74) varcte -> . CTEI np_add_cte_int
    (75) varcte -> . CTEF np_add_cte_float
    (76) varcte -> . CTEC np_add_cte_char
    (77) varcte -> . TRUE np_add_cte_bool
    (78) varcte -> . FALSE np_add_cte_bool
    (103) mean -> . MEAN LPAREN ID RPAREN np_add_mean_quadruple
    (104) median -> . MEDIAN LPAREN ID RPAREN np_add_median_quadruple
    (105) variance -> . VARIANCE LPAREN ID RPAREN np_add_variance_quadruple
    (106) p_variance -> . PVARIANCE LPAREN ID RPAREN np_add_p_variance_quadruple
    (107) standard_deviation -> . STDEV LPAREN ID RPAREN np_add_stdev_quadruple
    (108) p_standard_deviation -> . PSTDEV LPAREN ID RPAREN np_add_p_stdev_quadruple

    LPAREN          shift and go to state 99
    ID              shift and go to state 100
    PLUS            shift and go to state 104
    MINUS           shift and go to state 106
    CTEI            shift and go to state 113
    CTEF            shift and go to state 114
    CTEC            shift and go to state 115
    TRUE            shift and go to state 116
    FALSE           shift and go to state 117
    MEAN            shift and go to state 118
    MEDIAN          shift and go to state 119
    VARIANCE        shift and go to state 120
    PVARIANCE       shift and go to state 121
    STDEV           shift and go to state 122
    PSTDEV          shift and go to state 123

    exp                            shift and go to state 281
    term                           shift and go to state 97
    factor                         shift and go to state 98
    factor_prima_1                 shift and go to state 101
    function_call                  shift and go to state 102
    special_functions              shift and go to state 103
    varcte                         shift and go to state 105
    mean                           shift and go to state 107
    median                         shift and go to state 108
    variance                       shift and go to state 109
    p_variance                     shift and go to state 110
    standard_deviation             shift and go to state 111
    p_standard_deviation           shift and go to state 112

state 250

    (63) term_2 -> TIMES np_add_operator . term
    (61) term -> . factor np_add_quadruple_times_div
    (62) term -> . factor np_add_quadruple_times_div term_2
    (65) factor -> . LPAREN np_add_paren expression RPAREN np_pop_paren
    (66) factor -> . ID np_add_id LBRACKET np_check_is_array expression np_verify_array_dim RBRACKET np_get_array_address
    (67) factor -> . factor_prima_1
    (68) factor -> . function_call
    (69) factor -> . special_functions
    (70) factor_prima_1 -> . PLUS varcte
    (71) factor_prima_1 -> . MINUS np_set_as_negative varcte
    (72) factor_prima_1 -> . varcte
    (97) function_call -> . ID LPAREN np_check_function_call np_function_end_params RPAREN
    (98) function_call -> . ID LPAREN np_check_function_call function_call_1 np_function_end_params RPAREN
    (34) special_functions -> . mean
    (35) special_functions -> . median
    (36) special_functions -> . variance
    (37) special_functions -> . p_variance
    (38) special_functions -> . standard_deviation
    (39) special_functions -> . p_standard_deviation
    (73) varcte -> . ID np_add_id
    (74) varcte -> . CTEI np_add_cte_int
    (75) varcte -> . CTEF np_add_cte_float
    (76) varcte -> . CTEC np_add_cte_char
    (77) varcte -> . TRUE np_add_cte_bool
    (78) varcte -> . FALSE np_add_cte_bool
    (103) mean -> . MEAN LPAREN ID RPAREN np_add_mean_quadruple
    (104) median -> . MEDIAN LPAREN ID RPAREN np_add_median_quadruple
    (105) variance -> . VARIANCE LPAREN ID RPAREN np_add_variance_quadruple
    (106) p_variance -> . PVARIANCE LPAREN ID RPAREN np_add_p_variance_quadruple
    (107) standard_deviation -> . STDEV LPAREN ID RPAREN np_add_stdev_quadruple
    (108) p_standard_deviation -> . PSTDEV LPAREN ID RPAREN np_add_p_stdev_quadruple

    LPAREN          shift and go to state 99
    ID              shift and go to state 100
    PLUS            shift and go to state 104
    MINUS           shift and go to state 106
    CTEI            shift and go to state 113
    CTEF            shift and go to state 114
    CTEC            shift and go to state 115
    TRUE            shift and go to state 116
    FALSE           shift and go to state 117
    MEAN            shift and go to state 118
    MEDIAN          shift and go to state 119
    VARIANCE        shift and go to state 120
    PVARIANCE       shift and go to state 121
    STDEV           shift and go to state 122
    PSTDEV          shift and go to state 123

    term                           shift and go to state 282
    factor                         shift and go to state 98
    factor_prima_1                 shift and go to state 101
    function_call                  shift and go to state 102
    special_functions              shift and go to state 103
    varcte                         shift and go to state 105
    mean                           shift and go to state 107
    median                         shift and go to state 108
    variance                       shift and go to state 109
    p_variance                     shift and go to state 110
    standard_deviation             shift and go to state 111
    p_standard_deviation           shift and go to state 112

state 251

    (64) term_2 -> DIVIDE np_add_operator . term
    (61) term -> . factor np_add_quadruple_times_div
    (62) term -> . factor np_add_quadruple_times_div term_2
    (65) factor -> . LPAREN np_add_paren expression RPAREN np_pop_paren
    (66) factor -> . ID np_add_id LBRACKET np_check_is_array expression np_verify_array_dim RBRACKET np_get_array_address
    (67) factor -> . factor_prima_1
    (68) factor -> . function_call
    (69) factor -> . special_functions
    (70) factor_prima_1 -> . PLUS varcte
    (71) factor_prima_1 -> . MINUS np_set_as_negative varcte
    (72) factor_prima_1 -> . varcte
    (97) function_call -> . ID LPAREN np_check_function_call np_function_end_params RPAREN
    (98) function_call -> . ID LPAREN np_check_function_call function_call_1 np_function_end_params RPAREN
    (34) special_functions -> . mean
    (35) special_functions -> . median
    (36) special_functions -> . variance
    (37) special_functions -> . p_variance
    (38) special_functions -> . standard_deviation
    (39) special_functions -> . p_standard_deviation
    (73) varcte -> . ID np_add_id
    (74) varcte -> . CTEI np_add_cte_int
    (75) varcte -> . CTEF np_add_cte_float
    (76) varcte -> . CTEC np_add_cte_char
    (77) varcte -> . TRUE np_add_cte_bool
    (78) varcte -> . FALSE np_add_cte_bool
    (103) mean -> . MEAN LPAREN ID RPAREN np_add_mean_quadruple
    (104) median -> . MEDIAN LPAREN ID RPAREN np_add_median_quadruple
    (105) variance -> . VARIANCE LPAREN ID RPAREN np_add_variance_quadruple
    (106) p_variance -> . PVARIANCE LPAREN ID RPAREN np_add_p_variance_quadruple
    (107) standard_deviation -> . STDEV LPAREN ID RPAREN np_add_stdev_quadruple
    (108) p_standard_deviation -> . PSTDEV LPAREN ID RPAREN np_add_p_stdev_quadruple

    LPAREN          shift and go to state 99
    ID              shift and go to state 100
    PLUS            shift and go to state 104
    MINUS           shift and go to state 106
    CTEI            shift and go to state 113
    CTEF            shift and go to state 114
    CTEC            shift and go to state 115
    TRUE            shift and go to state 116
    FALSE           shift and go to state 117
    MEAN            shift and go to state 118
    MEDIAN          shift and go to state 119
    VARIANCE        shift and go to state 120
    PVARIANCE       shift and go to state 121
    STDEV           shift and go to state 122
    PSTDEV          shift and go to state 123

    term                           shift and go to state 283
    factor                         shift and go to state 98
    factor_prima_1                 shift and go to state 101
    function_call                  shift and go to state 102
    special_functions              shift and go to state 103
    varcte                         shift and go to state 105
    mean                           shift and go to state 107
    median                         shift and go to state 108
    variance                       shift and go to state 109
    p_variance                     shift and go to state 110
    standard_deviation             shift and go to state 111
    p_standard_deviation           shift and go to state 112

state 252

    (65) factor -> LPAREN np_add_paren expression RPAREN . np_pop_paren
    (123) np_pop_paren -> .

    TIMES           reduce using rule 123 (np_pop_paren -> .)
    DIVIDE          reduce using rule 123 (np_pop_paren -> .)
    PLUS            reduce using rule 123 (np_pop_paren -> .)
    MINUS           reduce using rule 123 (np_pop_paren -> .)
    LT              reduce using rule 123 (np_pop_paren -> .)
    LE              reduce using rule 123 (np_pop_paren -> .)
    GT              reduce using rule 123 (np_pop_paren -> .)
    GE              reduce using rule 123 (np_pop_paren -> .)
    EQ              reduce using rule 123 (np_pop_paren -> .)
    NE              reduce using rule 123 (np_pop_paren -> .)
    AND             reduce using rule 123 (np_pop_paren -> .)
    OR              reduce using rule 123 (np_pop_paren -> .)
    SEMI            reduce using rule 123 (np_pop_paren -> .)
    RPAREN          reduce using rule 123 (np_pop_paren -> .)
    COMMA           reduce using rule 123 (np_pop_paren -> .)
    RBRACKET        reduce using rule 123 (np_pop_paren -> .)
    TO              reduce using rule 123 (np_pop_paren -> .)
    BY              reduce using rule 123 (np_pop_paren -> .)

    np_pop_paren                   shift and go to state 284

state 253

    (66) factor -> ID np_add_id LBRACKET np_check_is_array . expression np_verify_array_dim RBRACKET np_get_array_address
    (46) expression -> . exp
    (47) expression -> . expression1 np_add_quadruple_logical
    (48) expression -> . expression0 np_add_quadruple_or_and
    (57) exp -> . term np_add_quadruple_sum_min
    (58) exp -> . term np_add_quadruple_sum_min exp_1
    (51) expression1 -> . exp LT np_add_operator exp
    (52) expression1 -> . exp LE np_add_operator exp
    (53) expression1 -> . exp GT np_add_operator exp
    (54) expression1 -> . exp GE np_add_operator exp
    (55) expression1 -> . exp EQ np_add_operator exp
    (56) expression1 -> . exp NE np_add_operator exp
    (49) expression0 -> . expression AND np_add_operator expression
    (50) expression0 -> . expression OR np_add_operator expression
    (61) term -> . factor np_add_quadruple_times_div
    (62) term -> . factor np_add_quadruple_times_div term_2
    (65) factor -> . LPAREN np_add_paren expression RPAREN np_pop_paren
    (66) factor -> . ID np_add_id LBRACKET np_check_is_array expression np_verify_array_dim RBRACKET np_get_array_address
    (67) factor -> . factor_prima_1
    (68) factor -> . function_call
    (69) factor -> . special_functions
    (70) factor_prima_1 -> . PLUS varcte
    (71) factor_prima_1 -> . MINUS np_set_as_negative varcte
    (72) factor_prima_1 -> . varcte
    (97) function_call -> . ID LPAREN np_check_function_call np_function_end_params RPAREN
    (98) function_call -> . ID LPAREN np_check_function_call function_call_1 np_function_end_params RPAREN
    (34) special_functions -> . mean
    (35) special_functions -> . median
    (36) special_functions -> . variance
    (37) special_functions -> . p_variance
    (38) special_functions -> . standard_deviation
    (39) special_functions -> . p_standard_deviation
    (73) varcte -> . ID np_add_id
    (74) varcte -> . CTEI np_add_cte_int
    (75) varcte -> . CTEF np_add_cte_float
    (76) varcte -> . CTEC np_add_cte_char
    (77) varcte -> . TRUE np_add_cte_bool
    (78) varcte -> . FALSE np_add_cte_bool
    (103) mean -> . MEAN LPAREN ID RPAREN np_add_mean_quadruple
    (104) median -> . MEDIAN LPAREN ID RPAREN np_add_median_quadruple
    (105) variance -> . VARIANCE LPAREN ID RPAREN np_add_variance_quadruple
    (106) p_variance -> . PVARIANCE LPAREN ID RPAREN np_add_p_variance_quadruple
    (107) standard_deviation -> . STDEV LPAREN ID RPAREN np_add_stdev_quadruple
    (108) p_standard_deviation -> . PSTDEV LPAREN ID RPAREN np_add_p_stdev_quadruple

    LPAREN          shift and go to state 99
    ID              shift and go to state 100
    PLUS            shift and go to state 104
    MINUS           shift and go to state 106
    CTEI            shift and go to state 113
    CTEF            shift and go to state 114
    CTEC            shift and go to state 115
    TRUE            shift and go to state 116
    FALSE           shift and go to state 117
    MEAN            shift and go to state 118
    MEDIAN          shift and go to state 119
    VARIANCE        shift and go to state 120
    PVARIANCE       shift and go to state 121
    STDEV           shift and go to state 122
    PSTDEV          shift and go to state 123

    expression                     shift and go to state 285
    exp                            shift and go to state 94
    expression1                    shift and go to state 95
    expression0                    shift and go to state 96
    term                           shift and go to state 97
    factor                         shift and go to state 98
    factor_prima_1                 shift and go to state 101
    function_call                  shift and go to state 102
    special_functions              shift and go to state 103
    varcte                         shift and go to state 105
    mean                           shift and go to state 107
    median                         shift and go to state 108
    variance                       shift and go to state 109
    p_variance                     shift and go to state 110
    standard_deviation             shift and go to state 111
    p_standard_deviation           shift and go to state 112

state 254

    (97) function_call -> ID LPAREN np_check_function_call np_function_end_params . RPAREN

    RPAREN          shift and go to state 286


state 255

    (98) function_call -> ID LPAREN np_check_function_call function_call_1 . np_function_end_params RPAREN
    (150) np_function_end_params -> .

    RPAREN          reduce using rule 150 (np_function_end_params -> .)

    np_function_end_params         shift and go to state 287

state 256

    (103) mean -> MEAN LPAREN ID RPAREN . np_add_mean_quadruple
    (155) np_add_mean_quadruple -> .

    TIMES           reduce using rule 155 (np_add_mean_quadruple -> .)
    DIVIDE          reduce using rule 155 (np_add_mean_quadruple -> .)
    PLUS            reduce using rule 155 (np_add_mean_quadruple -> .)
    MINUS           reduce using rule 155 (np_add_mean_quadruple -> .)
    LT              reduce using rule 155 (np_add_mean_quadruple -> .)
    LE              reduce using rule 155 (np_add_mean_quadruple -> .)
    GT              reduce using rule 155 (np_add_mean_quadruple -> .)
    GE              reduce using rule 155 (np_add_mean_quadruple -> .)
    EQ              reduce using rule 155 (np_add_mean_quadruple -> .)
    NE              reduce using rule 155 (np_add_mean_quadruple -> .)
    AND             reduce using rule 155 (np_add_mean_quadruple -> .)
    OR              reduce using rule 155 (np_add_mean_quadruple -> .)
    SEMI            reduce using rule 155 (np_add_mean_quadruple -> .)
    RPAREN          reduce using rule 155 (np_add_mean_quadruple -> .)
    COMMA           reduce using rule 155 (np_add_mean_quadruple -> .)
    RBRACKET        reduce using rule 155 (np_add_mean_quadruple -> .)
    TO              reduce using rule 155 (np_add_mean_quadruple -> .)
    BY              reduce using rule 155 (np_add_mean_quadruple -> .)

    np_add_mean_quadruple          shift and go to state 288

state 257

    (104) median -> MEDIAN LPAREN ID RPAREN . np_add_median_quadruple
    (156) np_add_median_quadruple -> .

    TIMES           reduce using rule 156 (np_add_median_quadruple -> .)
    DIVIDE          reduce using rule 156 (np_add_median_quadruple -> .)
    PLUS            reduce using rule 156 (np_add_median_quadruple -> .)
    MINUS           reduce using rule 156 (np_add_median_quadruple -> .)
    LT              reduce using rule 156 (np_add_median_quadruple -> .)
    LE              reduce using rule 156 (np_add_median_quadruple -> .)
    GT              reduce using rule 156 (np_add_median_quadruple -> .)
    GE              reduce using rule 156 (np_add_median_quadruple -> .)
    EQ              reduce using rule 156 (np_add_median_quadruple -> .)
    NE              reduce using rule 156 (np_add_median_quadruple -> .)
    AND             reduce using rule 156 (np_add_median_quadruple -> .)
    OR              reduce using rule 156 (np_add_median_quadruple -> .)
    SEMI            reduce using rule 156 (np_add_median_quadruple -> .)
    RPAREN          reduce using rule 156 (np_add_median_quadruple -> .)
    COMMA           reduce using rule 156 (np_add_median_quadruple -> .)
    RBRACKET        reduce using rule 156 (np_add_median_quadruple -> .)
    TO              reduce using rule 156 (np_add_median_quadruple -> .)
    BY              reduce using rule 156 (np_add_median_quadruple -> .)

    np_add_median_quadruple        shift and go to state 289

state 258

    (105) variance -> VARIANCE LPAREN ID RPAREN . np_add_variance_quadruple
    (157) np_add_variance_quadruple -> .

    TIMES           reduce using rule 157 (np_add_variance_quadruple -> .)
    DIVIDE          reduce using rule 157 (np_add_variance_quadruple -> .)
    PLUS            reduce using rule 157 (np_add_variance_quadruple -> .)
    MINUS           reduce using rule 157 (np_add_variance_quadruple -> .)
    LT              reduce using rule 157 (np_add_variance_quadruple -> .)
    LE              reduce using rule 157 (np_add_variance_quadruple -> .)
    GT              reduce using rule 157 (np_add_variance_quadruple -> .)
    GE              reduce using rule 157 (np_add_variance_quadruple -> .)
    EQ              reduce using rule 157 (np_add_variance_quadruple -> .)
    NE              reduce using rule 157 (np_add_variance_quadruple -> .)
    AND             reduce using rule 157 (np_add_variance_quadruple -> .)
    OR              reduce using rule 157 (np_add_variance_quadruple -> .)
    SEMI            reduce using rule 157 (np_add_variance_quadruple -> .)
    RPAREN          reduce using rule 157 (np_add_variance_quadruple -> .)
    COMMA           reduce using rule 157 (np_add_variance_quadruple -> .)
    RBRACKET        reduce using rule 157 (np_add_variance_quadruple -> .)
    TO              reduce using rule 157 (np_add_variance_quadruple -> .)
    BY              reduce using rule 157 (np_add_variance_quadruple -> .)

    np_add_variance_quadruple      shift and go to state 290

state 259

    (106) p_variance -> PVARIANCE LPAREN ID RPAREN . np_add_p_variance_quadruple
    (158) np_add_p_variance_quadruple -> .

    TIMES           reduce using rule 158 (np_add_p_variance_quadruple -> .)
    DIVIDE          reduce using rule 158 (np_add_p_variance_quadruple -> .)
    PLUS            reduce using rule 158 (np_add_p_variance_quadruple -> .)
    MINUS           reduce using rule 158 (np_add_p_variance_quadruple -> .)
    LT              reduce using rule 158 (np_add_p_variance_quadruple -> .)
    LE              reduce using rule 158 (np_add_p_variance_quadruple -> .)
    GT              reduce using rule 158 (np_add_p_variance_quadruple -> .)
    GE              reduce using rule 158 (np_add_p_variance_quadruple -> .)
    EQ              reduce using rule 158 (np_add_p_variance_quadruple -> .)
    NE              reduce using rule 158 (np_add_p_variance_quadruple -> .)
    AND             reduce using rule 158 (np_add_p_variance_quadruple -> .)
    OR              reduce using rule 158 (np_add_p_variance_quadruple -> .)
    SEMI            reduce using rule 158 (np_add_p_variance_quadruple -> .)
    RPAREN          reduce using rule 158 (np_add_p_variance_quadruple -> .)
    COMMA           reduce using rule 158 (np_add_p_variance_quadruple -> .)
    RBRACKET        reduce using rule 158 (np_add_p_variance_quadruple -> .)
    TO              reduce using rule 158 (np_add_p_variance_quadruple -> .)
    BY              reduce using rule 158 (np_add_p_variance_quadruple -> .)

    np_add_p_variance_quadruple    shift and go to state 291

state 260

    (107) standard_deviation -> STDEV LPAREN ID RPAREN . np_add_stdev_quadruple
    (159) np_add_stdev_quadruple -> .

    TIMES           reduce using rule 159 (np_add_stdev_quadruple -> .)
    DIVIDE          reduce using rule 159 (np_add_stdev_quadruple -> .)
    PLUS            reduce using rule 159 (np_add_stdev_quadruple -> .)
    MINUS           reduce using rule 159 (np_add_stdev_quadruple -> .)
    LT              reduce using rule 159 (np_add_stdev_quadruple -> .)
    LE              reduce using rule 159 (np_add_stdev_quadruple -> .)
    GT              reduce using rule 159 (np_add_stdev_quadruple -> .)
    GE              reduce using rule 159 (np_add_stdev_quadruple -> .)
    EQ              reduce using rule 159 (np_add_stdev_quadruple -> .)
    NE              reduce using rule 159 (np_add_stdev_quadruple -> .)
    AND             reduce using rule 159 (np_add_stdev_quadruple -> .)
    OR              reduce using rule 159 (np_add_stdev_quadruple -> .)
    SEMI            reduce using rule 159 (np_add_stdev_quadruple -> .)
    RPAREN          reduce using rule 159 (np_add_stdev_quadruple -> .)
    COMMA           reduce using rule 159 (np_add_stdev_quadruple -> .)
    RBRACKET        reduce using rule 159 (np_add_stdev_quadruple -> .)
    TO              reduce using rule 159 (np_add_stdev_quadruple -> .)
    BY              reduce using rule 159 (np_add_stdev_quadruple -> .)

    np_add_stdev_quadruple         shift and go to state 292

state 261

    (108) p_standard_deviation -> PSTDEV LPAREN ID RPAREN . np_add_p_stdev_quadruple
    (160) np_add_p_stdev_quadruple -> .

    TIMES           reduce using rule 160 (np_add_p_stdev_quadruple -> .)
    DIVIDE          reduce using rule 160 (np_add_p_stdev_quadruple -> .)
    PLUS            reduce using rule 160 (np_add_p_stdev_quadruple -> .)
    MINUS           reduce using rule 160 (np_add_p_stdev_quadruple -> .)
    LT              reduce using rule 160 (np_add_p_stdev_quadruple -> .)
    LE              reduce using rule 160 (np_add_p_stdev_quadruple -> .)
    GT              reduce using rule 160 (np_add_p_stdev_quadruple -> .)
    GE              reduce using rule 160 (np_add_p_stdev_quadruple -> .)
    EQ              reduce using rule 160 (np_add_p_stdev_quadruple -> .)
    NE              reduce using rule 160 (np_add_p_stdev_quadruple -> .)
    AND             reduce using rule 160 (np_add_p_stdev_quadruple -> .)
    OR              reduce using rule 160 (np_add_p_stdev_quadruple -> .)
    SEMI            reduce using rule 160 (np_add_p_stdev_quadruple -> .)
    RPAREN          reduce using rule 160 (np_add_p_stdev_quadruple -> .)
    COMMA           reduce using rule 160 (np_add_p_stdev_quadruple -> .)
    RBRACKET        reduce using rule 160 (np_add_p_stdev_quadruple -> .)
    TO              reduce using rule 160 (np_add_p_stdev_quadruple -> .)
    BY              reduce using rule 160 (np_add_p_stdev_quadruple -> .)

    np_add_p_stdev_quadruple       shift and go to state 293

state 262

    (95) non_conditional_loop -> FOR LPAREN ID np_add_id EQUALS . np_add_operator expression np_assign_expression_for TO expression np_non_conditional_limit BY expression RPAREN block np_non_conditional_end
    (121) np_add_operator -> .

    LPAREN          reduce using rule 121 (np_add_operator -> .)
    ID              reduce using rule 121 (np_add_operator -> .)
    PLUS            reduce using rule 121 (np_add_operator -> .)
    MINUS           reduce using rule 121 (np_add_operator -> .)
    CTEI            reduce using rule 121 (np_add_operator -> .)
    CTEF            reduce using rule 121 (np_add_operator -> .)
    CTEC            reduce using rule 121 (np_add_operator -> .)
    TRUE            reduce using rule 121 (np_add_operator -> .)
    FALSE           reduce using rule 121 (np_add_operator -> .)
    MEAN            reduce using rule 121 (np_add_operator -> .)
    MEDIAN          reduce using rule 121 (np_add_operator -> .)
    VARIANCE        reduce using rule 121 (np_add_operator -> .)
    PVARIANCE       reduce using rule 121 (np_add_operator -> .)
    STDEV           reduce using rule 121 (np_add_operator -> .)
    PSTDEV          reduce using rule 121 (np_add_operator -> .)

    np_add_operator                shift and go to state 294

state 263

    (94) conditional_loop -> WHILE np_while_init LPAREN expression RPAREN . np_while_expression DO block np_while_end_block
    (133) np_while_expression -> .

    DO              reduce using rule 133 (np_while_expression -> .)

    np_while_expression            shift and go to state 295

state 264

    (25) params -> ID COLON type np_add_vars np_add_params_type . COMMA params
    (26) params -> ID COLON type np_add_vars np_add_params_type .

    COMMA           shift and go to state 296
    RPAREN          reduce using rule 26 (params -> ID COLON type np_add_vars np_add_params_type .)


state 265

    (18) function -> FUNCTION ID COLON return_type np_create_new_scope LPAREN RPAREN vars np_set_func_start_point block np_end_function .

    FUNCTION        reduce using rule 18 (function -> FUNCTION ID COLON return_type np_create_new_scope LPAREN RPAREN vars np_set_func_start_point block np_end_function .)
    MAIN            reduce using rule 18 (function -> FUNCTION ID COLON return_type np_create_new_scope LPAREN RPAREN vars np_set_func_start_point block np_end_function .)


state 266

    (17) function -> FUNCTION ID COLON return_type np_create_new_scope LPAREN params RPAREN np_set_func_start_point block np_end_function .

    FUNCTION        reduce using rule 17 (function -> FUNCTION ID COLON return_type np_create_new_scope LPAREN params RPAREN np_set_func_start_point block np_end_function .)
    MAIN            reduce using rule 17 (function -> FUNCTION ID COLON return_type np_create_new_scope LPAREN params RPAREN np_set_func_start_point block np_end_function .)


state 267

    (19) function -> FUNCTION ID COLON return_type np_create_new_scope LPAREN params RPAREN vars np_set_func_start_point block . np_end_function
    (145) np_end_function -> .

    FUNCTION        reduce using rule 145 (np_end_function -> .)
    MAIN            reduce using rule 145 (np_end_function -> .)

    np_end_function                shift and go to state 297

state 268

    (99) void_function_call -> ID LPAREN np_check_function_call np_function_end_params RPAREN SEMI .

    ID              reduce using rule 99 (void_function_call -> ID LPAREN np_check_function_call np_function_end_params RPAREN SEMI .)
    IF              reduce using rule 99 (void_function_call -> ID LPAREN np_check_function_call np_function_end_params RPAREN SEMI .)
    PRINT           reduce using rule 99 (void_function_call -> ID LPAREN np_check_function_call np_function_end_params RPAREN SEMI .)
    PRINTLN         reduce using rule 99 (void_function_call -> ID LPAREN np_check_function_call np_function_end_params RPAREN SEMI .)
    READ            reduce using rule 99 (void_function_call -> ID LPAREN np_check_function_call np_function_end_params RPAREN SEMI .)
    RETURN          reduce using rule 99 (void_function_call -> ID LPAREN np_check_function_call np_function_end_params RPAREN SEMI .)
    FOR             reduce using rule 99 (void_function_call -> ID LPAREN np_check_function_call np_function_end_params RPAREN SEMI .)
    WHILE           reduce using rule 99 (void_function_call -> ID LPAREN np_check_function_call np_function_end_params RPAREN SEMI .)
    RBRACE          reduce using rule 99 (void_function_call -> ID LPAREN np_check_function_call np_function_end_params RPAREN SEMI .)


state 269

    (100) void_function_call -> ID LPAREN np_check_function_call function_call_1 np_function_end_params RPAREN . SEMI

    SEMI            shift and go to state 298


state 270

    (102) function_call_1 -> expression np_function_call_add_param COMMA . function_call_1
    (101) function_call_1 -> . expression np_function_call_add_param
    (102) function_call_1 -> . expression np_function_call_add_param COMMA function_call_1
    (46) expression -> . exp
    (47) expression -> . expression1 np_add_quadruple_logical
    (48) expression -> . expression0 np_add_quadruple_or_and
    (57) exp -> . term np_add_quadruple_sum_min
    (58) exp -> . term np_add_quadruple_sum_min exp_1
    (51) expression1 -> . exp LT np_add_operator exp
    (52) expression1 -> . exp LE np_add_operator exp
    (53) expression1 -> . exp GT np_add_operator exp
    (54) expression1 -> . exp GE np_add_operator exp
    (55) expression1 -> . exp EQ np_add_operator exp
    (56) expression1 -> . exp NE np_add_operator exp
    (49) expression0 -> . expression AND np_add_operator expression
    (50) expression0 -> . expression OR np_add_operator expression
    (61) term -> . factor np_add_quadruple_times_div
    (62) term -> . factor np_add_quadruple_times_div term_2
    (65) factor -> . LPAREN np_add_paren expression RPAREN np_pop_paren
    (66) factor -> . ID np_add_id LBRACKET np_check_is_array expression np_verify_array_dim RBRACKET np_get_array_address
    (67) factor -> . factor_prima_1
    (68) factor -> . function_call
    (69) factor -> . special_functions
    (70) factor_prima_1 -> . PLUS varcte
    (71) factor_prima_1 -> . MINUS np_set_as_negative varcte
    (72) factor_prima_1 -> . varcte
    (97) function_call -> . ID LPAREN np_check_function_call np_function_end_params RPAREN
    (98) function_call -> . ID LPAREN np_check_function_call function_call_1 np_function_end_params RPAREN
    (34) special_functions -> . mean
    (35) special_functions -> . median
    (36) special_functions -> . variance
    (37) special_functions -> . p_variance
    (38) special_functions -> . standard_deviation
    (39) special_functions -> . p_standard_deviation
    (73) varcte -> . ID np_add_id
    (74) varcte -> . CTEI np_add_cte_int
    (75) varcte -> . CTEF np_add_cte_float
    (76) varcte -> . CTEC np_add_cte_char
    (77) varcte -> . TRUE np_add_cte_bool
    (78) varcte -> . FALSE np_add_cte_bool
    (103) mean -> . MEAN LPAREN ID RPAREN np_add_mean_quadruple
    (104) median -> . MEDIAN LPAREN ID RPAREN np_add_median_quadruple
    (105) variance -> . VARIANCE LPAREN ID RPAREN np_add_variance_quadruple
    (106) p_variance -> . PVARIANCE LPAREN ID RPAREN np_add_p_variance_quadruple
    (107) standard_deviation -> . STDEV LPAREN ID RPAREN np_add_stdev_quadruple
    (108) p_standard_deviation -> . PSTDEV LPAREN ID RPAREN np_add_p_stdev_quadruple

    LPAREN          shift and go to state 99
    ID              shift and go to state 100
    PLUS            shift and go to state 104
    MINUS           shift and go to state 106
    CTEI            shift and go to state 113
    CTEF            shift and go to state 114
    CTEC            shift and go to state 115
    TRUE            shift and go to state 116
    FALSE           shift and go to state 117
    MEAN            shift and go to state 118
    MEDIAN          shift and go to state 119
    VARIANCE        shift and go to state 120
    PVARIANCE       shift and go to state 121
    STDEV           shift and go to state 122
    PSTDEV          shift and go to state 123

    expression                     shift and go to state 181
    function_call_1                shift and go to state 299
    exp                            shift and go to state 94
    expression1                    shift and go to state 95
    expression0                    shift and go to state 96
    term                           shift and go to state 97
    factor                         shift and go to state 98
    factor_prima_1                 shift and go to state 101
    function_call                  shift and go to state 102
    special_functions              shift and go to state 103
    varcte                         shift and go to state 105
    mean                           shift and go to state 107
    median                         shift and go to state 108
    variance                       shift and go to state 109
    p_variance                     shift and go to state 110
    standard_deviation             shift and go to state 111
    p_standard_deviation           shift and go to state 112

state 271

    (42) assignment -> ID np_add_id LBRACKET np_check_is_array expression np_verify_array_dim . RBRACKET np_get_array_address EQUALS np_add_operator expression np_assign_expression SEMI

    RBRACKET        shift and go to state 300


state 272

    (43) assignment -> ID np_add_id EQUALS np_add_operator expression np_assign_expression . SEMI

    SEMI            shift and go to state 301


state 273

    (44) condition -> IF LPAREN expression RPAREN np_condition_gotof block . np_condition_end_gotof
    (45) condition -> IF LPAREN expression RPAREN np_condition_gotof block . ELSE np_condition_goto_else block np_condition_end_gotof
    (130) np_condition_end_gotof -> .

    ELSE            shift and go to state 303
    ID              reduce using rule 130 (np_condition_end_gotof -> .)
    IF              reduce using rule 130 (np_condition_end_gotof -> .)
    PRINT           reduce using rule 130 (np_condition_end_gotof -> .)
    PRINTLN         reduce using rule 130 (np_condition_end_gotof -> .)
    READ            reduce using rule 130 (np_condition_end_gotof -> .)
    RETURN          reduce using rule 130 (np_condition_end_gotof -> .)
    FOR             reduce using rule 130 (np_condition_end_gotof -> .)
    WHILE           reduce using rule 130 (np_condition_end_gotof -> .)
    RBRACE          reduce using rule 130 (np_condition_end_gotof -> .)

    np_condition_end_gotof         shift and go to state 302

state 274

    (81) writing_1 -> expression np_add_print_quadruple_exp COMMA writing_1 .

    RPAREN          reduce using rule 81 (writing_1 -> expression np_add_print_quadruple_exp COMMA writing_1 .)


state 275

    (82) writing_1 -> CTESTRING np_add_print_quadruple_str COMMA writing_1 .

    RPAREN          reduce using rule 82 (writing_1 -> CTESTRING np_add_print_quadruple_str COMMA writing_1 .)


state 276

    (85) writing_2 -> expression np_add_println_quadruple_exp COMMA writing_2 .

    RPAREN          reduce using rule 85 (writing_2 -> expression np_add_println_quadruple_exp COMMA writing_2 .)


state 277

    (86) writing_2 -> CTESTRING np_add_println_quadruple_str COMMA writing_2 .

    RPAREN          reduce using rule 86 (writing_2 -> CTESTRING np_add_println_quadruple_str COMMA writing_2 .)


state 278

    (89) reading -> READ LPAREN reading_1 RPAREN np_add_read_quadruple SEMI .

    ID              reduce using rule 89 (reading -> READ LPAREN reading_1 RPAREN np_add_read_quadruple SEMI .)
    IF              reduce using rule 89 (reading -> READ LPAREN reading_1 RPAREN np_add_read_quadruple SEMI .)
    PRINT           reduce using rule 89 (reading -> READ LPAREN reading_1 RPAREN np_add_read_quadruple SEMI .)
    PRINTLN         reduce using rule 89 (reading -> READ LPAREN reading_1 RPAREN np_add_read_quadruple SEMI .)
    READ            reduce using rule 89 (reading -> READ LPAREN reading_1 RPAREN np_add_read_quadruple SEMI .)
    RETURN          reduce using rule 89 (reading -> READ LPAREN reading_1 RPAREN np_add_read_quadruple SEMI .)
    FOR             reduce using rule 89 (reading -> READ LPAREN reading_1 RPAREN np_add_read_quadruple SEMI .)
    WHILE           reduce using rule 89 (reading -> READ LPAREN reading_1 RPAREN np_add_read_quadruple SEMI .)
    RBRACE          reduce using rule 89 (reading -> READ LPAREN reading_1 RPAREN np_add_read_quadruple SEMI .)


state 279

    (91) reading_1 -> ID np_add_id LBRACKET np_check_is_array . expression np_verify_array_dim RBRACKET np_get_array_address
    (46) expression -> . exp
    (47) expression -> . expression1 np_add_quadruple_logical
    (48) expression -> . expression0 np_add_quadruple_or_and
    (57) exp -> . term np_add_quadruple_sum_min
    (58) exp -> . term np_add_quadruple_sum_min exp_1
    (51) expression1 -> . exp LT np_add_operator exp
    (52) expression1 -> . exp LE np_add_operator exp
    (53) expression1 -> . exp GT np_add_operator exp
    (54) expression1 -> . exp GE np_add_operator exp
    (55) expression1 -> . exp EQ np_add_operator exp
    (56) expression1 -> . exp NE np_add_operator exp
    (49) expression0 -> . expression AND np_add_operator expression
    (50) expression0 -> . expression OR np_add_operator expression
    (61) term -> . factor np_add_quadruple_times_div
    (62) term -> . factor np_add_quadruple_times_div term_2
    (65) factor -> . LPAREN np_add_paren expression RPAREN np_pop_paren
    (66) factor -> . ID np_add_id LBRACKET np_check_is_array expression np_verify_array_dim RBRACKET np_get_array_address
    (67) factor -> . factor_prima_1
    (68) factor -> . function_call
    (69) factor -> . special_functions
    (70) factor_prima_1 -> . PLUS varcte
    (71) factor_prima_1 -> . MINUS np_set_as_negative varcte
    (72) factor_prima_1 -> . varcte
    (97) function_call -> . ID LPAREN np_check_function_call np_function_end_params RPAREN
    (98) function_call -> . ID LPAREN np_check_function_call function_call_1 np_function_end_params RPAREN
    (34) special_functions -> . mean
    (35) special_functions -> . median
    (36) special_functions -> . variance
    (37) special_functions -> . p_variance
    (38) special_functions -> . standard_deviation
    (39) special_functions -> . p_standard_deviation
    (73) varcte -> . ID np_add_id
    (74) varcte -> . CTEI np_add_cte_int
    (75) varcte -> . CTEF np_add_cte_float
    (76) varcte -> . CTEC np_add_cte_char
    (77) varcte -> . TRUE np_add_cte_bool
    (78) varcte -> . FALSE np_add_cte_bool
    (103) mean -> . MEAN LPAREN ID RPAREN np_add_mean_quadruple
    (104) median -> . MEDIAN LPAREN ID RPAREN np_add_median_quadruple
    (105) variance -> . VARIANCE LPAREN ID RPAREN np_add_variance_quadruple
    (106) p_variance -> . PVARIANCE LPAREN ID RPAREN np_add_p_variance_quadruple
    (107) standard_deviation -> . STDEV LPAREN ID RPAREN np_add_stdev_quadruple
    (108) p_standard_deviation -> . PSTDEV LPAREN ID RPAREN np_add_p_stdev_quadruple

    LPAREN          shift and go to state 99
    ID              shift and go to state 100
    PLUS            shift and go to state 104
    MINUS           shift and go to state 106
    CTEI            shift and go to state 113
    CTEF            shift and go to state 114
    CTEC            shift and go to state 115
    TRUE            shift and go to state 116
    FALSE           shift and go to state 117
    MEAN            shift and go to state 118
    MEDIAN          shift and go to state 119
    VARIANCE        shift and go to state 120
    PVARIANCE       shift and go to state 121
    STDEV           shift and go to state 122
    PSTDEV          shift and go to state 123

    expression                     shift and go to state 304
    exp                            shift and go to state 94
    expression1                    shift and go to state 95
    expression0                    shift and go to state 96
    term                           shift and go to state 97
    factor                         shift and go to state 98
    factor_prima_1                 shift and go to state 101
    function_call                  shift and go to state 102
    special_functions              shift and go to state 103
    varcte                         shift and go to state 105
    mean                           shift and go to state 107
    median                         shift and go to state 108
    variance                       shift and go to state 109
    p_variance                     shift and go to state 110
    standard_deviation             shift and go to state 111
    p_standard_deviation           shift and go to state 112

state 280

    (59) exp_1 -> PLUS np_add_operator exp .

    LT              reduce using rule 59 (exp_1 -> PLUS np_add_operator exp .)
    LE              reduce using rule 59 (exp_1 -> PLUS np_add_operator exp .)
    GT              reduce using rule 59 (exp_1 -> PLUS np_add_operator exp .)
    GE              reduce using rule 59 (exp_1 -> PLUS np_add_operator exp .)
    EQ              reduce using rule 59 (exp_1 -> PLUS np_add_operator exp .)
    NE              reduce using rule 59 (exp_1 -> PLUS np_add_operator exp .)
    AND             reduce using rule 59 (exp_1 -> PLUS np_add_operator exp .)
    OR              reduce using rule 59 (exp_1 -> PLUS np_add_operator exp .)
    SEMI            reduce using rule 59 (exp_1 -> PLUS np_add_operator exp .)
    RPAREN          reduce using rule 59 (exp_1 -> PLUS np_add_operator exp .)
    COMMA           reduce using rule 59 (exp_1 -> PLUS np_add_operator exp .)
    RBRACKET        reduce using rule 59 (exp_1 -> PLUS np_add_operator exp .)
    TO              reduce using rule 59 (exp_1 -> PLUS np_add_operator exp .)
    BY              reduce using rule 59 (exp_1 -> PLUS np_add_operator exp .)


state 281

    (60) exp_1 -> MINUS np_add_operator exp .

    LT              reduce using rule 60 (exp_1 -> MINUS np_add_operator exp .)
    LE              reduce using rule 60 (exp_1 -> MINUS np_add_operator exp .)
    GT              reduce using rule 60 (exp_1 -> MINUS np_add_operator exp .)
    GE              reduce using rule 60 (exp_1 -> MINUS np_add_operator exp .)
    EQ              reduce using rule 60 (exp_1 -> MINUS np_add_operator exp .)
    NE              reduce using rule 60 (exp_1 -> MINUS np_add_operator exp .)
    AND             reduce using rule 60 (exp_1 -> MINUS np_add_operator exp .)
    OR              reduce using rule 60 (exp_1 -> MINUS np_add_operator exp .)
    SEMI            reduce using rule 60 (exp_1 -> MINUS np_add_operator exp .)
    RPAREN          reduce using rule 60 (exp_1 -> MINUS np_add_operator exp .)
    COMMA           reduce using rule 60 (exp_1 -> MINUS np_add_operator exp .)
    RBRACKET        reduce using rule 60 (exp_1 -> MINUS np_add_operator exp .)
    TO              reduce using rule 60 (exp_1 -> MINUS np_add_operator exp .)
    BY              reduce using rule 60 (exp_1 -> MINUS np_add_operator exp .)


state 282

    (63) term_2 -> TIMES np_add_operator term .

    PLUS            reduce using rule 63 (term_2 -> TIMES np_add_operator term .)
    MINUS           reduce using rule 63 (term_2 -> TIMES np_add_operator term .)
    LT              reduce using rule 63 (term_2 -> TIMES np_add_operator term .)
    LE              reduce using rule 63 (term_2 -> TIMES np_add_operator term .)
    GT              reduce using rule 63 (term_2 -> TIMES np_add_operator term .)
    GE              reduce using rule 63 (term_2 -> TIMES np_add_operator term .)
    EQ              reduce using rule 63 (term_2 -> TIMES np_add_operator term .)
    NE              reduce using rule 63 (term_2 -> TIMES np_add_operator term .)
    AND             reduce using rule 63 (term_2 -> TIMES np_add_operator term .)
    OR              reduce using rule 63 (term_2 -> TIMES np_add_operator term .)
    SEMI            reduce using rule 63 (term_2 -> TIMES np_add_operator term .)
    RPAREN          reduce using rule 63 (term_2 -> TIMES np_add_operator term .)
    COMMA           reduce using rule 63 (term_2 -> TIMES np_add_operator term .)
    RBRACKET        reduce using rule 63 (term_2 -> TIMES np_add_operator term .)
    TO              reduce using rule 63 (term_2 -> TIMES np_add_operator term .)
    BY              reduce using rule 63 (term_2 -> TIMES np_add_operator term .)


state 283

    (64) term_2 -> DIVIDE np_add_operator term .

    PLUS            reduce using rule 64 (term_2 -> DIVIDE np_add_operator term .)
    MINUS           reduce using rule 64 (term_2 -> DIVIDE np_add_operator term .)
    LT              reduce using rule 64 (term_2 -> DIVIDE np_add_operator term .)
    LE              reduce using rule 64 (term_2 -> DIVIDE np_add_operator term .)
    GT              reduce using rule 64 (term_2 -> DIVIDE np_add_operator term .)
    GE              reduce using rule 64 (term_2 -> DIVIDE np_add_operator term .)
    EQ              reduce using rule 64 (term_2 -> DIVIDE np_add_operator term .)
    NE              reduce using rule 64 (term_2 -> DIVIDE np_add_operator term .)
    AND             reduce using rule 64 (term_2 -> DIVIDE np_add_operator term .)
    OR              reduce using rule 64 (term_2 -> DIVIDE np_add_operator term .)
    SEMI            reduce using rule 64 (term_2 -> DIVIDE np_add_operator term .)
    RPAREN          reduce using rule 64 (term_2 -> DIVIDE np_add_operator term .)
    COMMA           reduce using rule 64 (term_2 -> DIVIDE np_add_operator term .)
    RBRACKET        reduce using rule 64 (term_2 -> DIVIDE np_add_operator term .)
    TO              reduce using rule 64 (term_2 -> DIVIDE np_add_operator term .)
    BY              reduce using rule 64 (term_2 -> DIVIDE np_add_operator term .)


state 284

    (65) factor -> LPAREN np_add_paren expression RPAREN np_pop_paren .

    TIMES           reduce using rule 65 (factor -> LPAREN np_add_paren expression RPAREN np_pop_paren .)
    DIVIDE          reduce using rule 65 (factor -> LPAREN np_add_paren expression RPAREN np_pop_paren .)
    PLUS            reduce using rule 65 (factor -> LPAREN np_add_paren expression RPAREN np_pop_paren .)
    MINUS           reduce using rule 65 (factor -> LPAREN np_add_paren expression RPAREN np_pop_paren .)
    LT              reduce using rule 65 (factor -> LPAREN np_add_paren expression RPAREN np_pop_paren .)
    LE              reduce using rule 65 (factor -> LPAREN np_add_paren expression RPAREN np_pop_paren .)
    GT              reduce using rule 65 (factor -> LPAREN np_add_paren expression RPAREN np_pop_paren .)
    GE              reduce using rule 65 (factor -> LPAREN np_add_paren expression RPAREN np_pop_paren .)
    EQ              reduce using rule 65 (factor -> LPAREN np_add_paren expression RPAREN np_pop_paren .)
    NE              reduce using rule 65 (factor -> LPAREN np_add_paren expression RPAREN np_pop_paren .)
    AND             reduce using rule 65 (factor -> LPAREN np_add_paren expression RPAREN np_pop_paren .)
    OR              reduce using rule 65 (factor -> LPAREN np_add_paren expression RPAREN np_pop_paren .)
    SEMI            reduce using rule 65 (factor -> LPAREN np_add_paren expression RPAREN np_pop_paren .)
    RPAREN          reduce using rule 65 (factor -> LPAREN np_add_paren expression RPAREN np_pop_paren .)
    COMMA           reduce using rule 65 (factor -> LPAREN np_add_paren expression RPAREN np_pop_paren .)
    RBRACKET        reduce using rule 65 (factor -> LPAREN np_add_paren expression RPAREN np_pop_paren .)
    TO              reduce using rule 65 (factor -> LPAREN np_add_paren expression RPAREN np_pop_paren .)
    BY              reduce using rule 65 (factor -> LPAREN np_add_paren expression RPAREN np_pop_paren .)


state 285

    (66) factor -> ID np_add_id LBRACKET np_check_is_array expression . np_verify_array_dim RBRACKET np_get_array_address
    (49) expression0 -> expression . AND np_add_operator expression
    (50) expression0 -> expression . OR np_add_operator expression
    (152) np_verify_array_dim -> .

    AND             shift and go to state 143
    OR              shift and go to state 144
    RBRACKET        reduce using rule 152 (np_verify_array_dim -> .)

    np_verify_array_dim            shift and go to state 305

state 286

    (97) function_call -> ID LPAREN np_check_function_call np_function_end_params RPAREN .

    TIMES           reduce using rule 97 (function_call -> ID LPAREN np_check_function_call np_function_end_params RPAREN .)
    DIVIDE          reduce using rule 97 (function_call -> ID LPAREN np_check_function_call np_function_end_params RPAREN .)
    PLUS            reduce using rule 97 (function_call -> ID LPAREN np_check_function_call np_function_end_params RPAREN .)
    MINUS           reduce using rule 97 (function_call -> ID LPAREN np_check_function_call np_function_end_params RPAREN .)
    LT              reduce using rule 97 (function_call -> ID LPAREN np_check_function_call np_function_end_params RPAREN .)
    LE              reduce using rule 97 (function_call -> ID LPAREN np_check_function_call np_function_end_params RPAREN .)
    GT              reduce using rule 97 (function_call -> ID LPAREN np_check_function_call np_function_end_params RPAREN .)
    GE              reduce using rule 97 (function_call -> ID LPAREN np_check_function_call np_function_end_params RPAREN .)
    EQ              reduce using rule 97 (function_call -> ID LPAREN np_check_function_call np_function_end_params RPAREN .)
    NE              reduce using rule 97 (function_call -> ID LPAREN np_check_function_call np_function_end_params RPAREN .)
    AND             reduce using rule 97 (function_call -> ID LPAREN np_check_function_call np_function_end_params RPAREN .)
    OR              reduce using rule 97 (function_call -> ID LPAREN np_check_function_call np_function_end_params RPAREN .)
    SEMI            reduce using rule 97 (function_call -> ID LPAREN np_check_function_call np_function_end_params RPAREN .)
    RPAREN          reduce using rule 97 (function_call -> ID LPAREN np_check_function_call np_function_end_params RPAREN .)
    COMMA           reduce using rule 97 (function_call -> ID LPAREN np_check_function_call np_function_end_params RPAREN .)
    RBRACKET        reduce using rule 97 (function_call -> ID LPAREN np_check_function_call np_function_end_params RPAREN .)
    TO              reduce using rule 97 (function_call -> ID LPAREN np_check_function_call np_function_end_params RPAREN .)
    BY              reduce using rule 97 (function_call -> ID LPAREN np_check_function_call np_function_end_params RPAREN .)


state 287

    (98) function_call -> ID LPAREN np_check_function_call function_call_1 np_function_end_params . RPAREN

    RPAREN          shift and go to state 306


state 288

    (103) mean -> MEAN LPAREN ID RPAREN np_add_mean_quadruple .

    TIMES           reduce using rule 103 (mean -> MEAN LPAREN ID RPAREN np_add_mean_quadruple .)
    DIVIDE          reduce using rule 103 (mean -> MEAN LPAREN ID RPAREN np_add_mean_quadruple .)
    PLUS            reduce using rule 103 (mean -> MEAN LPAREN ID RPAREN np_add_mean_quadruple .)
    MINUS           reduce using rule 103 (mean -> MEAN LPAREN ID RPAREN np_add_mean_quadruple .)
    LT              reduce using rule 103 (mean -> MEAN LPAREN ID RPAREN np_add_mean_quadruple .)
    LE              reduce using rule 103 (mean -> MEAN LPAREN ID RPAREN np_add_mean_quadruple .)
    GT              reduce using rule 103 (mean -> MEAN LPAREN ID RPAREN np_add_mean_quadruple .)
    GE              reduce using rule 103 (mean -> MEAN LPAREN ID RPAREN np_add_mean_quadruple .)
    EQ              reduce using rule 103 (mean -> MEAN LPAREN ID RPAREN np_add_mean_quadruple .)
    NE              reduce using rule 103 (mean -> MEAN LPAREN ID RPAREN np_add_mean_quadruple .)
    AND             reduce using rule 103 (mean -> MEAN LPAREN ID RPAREN np_add_mean_quadruple .)
    OR              reduce using rule 103 (mean -> MEAN LPAREN ID RPAREN np_add_mean_quadruple .)
    SEMI            reduce using rule 103 (mean -> MEAN LPAREN ID RPAREN np_add_mean_quadruple .)
    RPAREN          reduce using rule 103 (mean -> MEAN LPAREN ID RPAREN np_add_mean_quadruple .)
    COMMA           reduce using rule 103 (mean -> MEAN LPAREN ID RPAREN np_add_mean_quadruple .)
    RBRACKET        reduce using rule 103 (mean -> MEAN LPAREN ID RPAREN np_add_mean_quadruple .)
    TO              reduce using rule 103 (mean -> MEAN LPAREN ID RPAREN np_add_mean_quadruple .)
    BY              reduce using rule 103 (mean -> MEAN LPAREN ID RPAREN np_add_mean_quadruple .)


state 289

    (104) median -> MEDIAN LPAREN ID RPAREN np_add_median_quadruple .

    TIMES           reduce using rule 104 (median -> MEDIAN LPAREN ID RPAREN np_add_median_quadruple .)
    DIVIDE          reduce using rule 104 (median -> MEDIAN LPAREN ID RPAREN np_add_median_quadruple .)
    PLUS            reduce using rule 104 (median -> MEDIAN LPAREN ID RPAREN np_add_median_quadruple .)
    MINUS           reduce using rule 104 (median -> MEDIAN LPAREN ID RPAREN np_add_median_quadruple .)
    LT              reduce using rule 104 (median -> MEDIAN LPAREN ID RPAREN np_add_median_quadruple .)
    LE              reduce using rule 104 (median -> MEDIAN LPAREN ID RPAREN np_add_median_quadruple .)
    GT              reduce using rule 104 (median -> MEDIAN LPAREN ID RPAREN np_add_median_quadruple .)
    GE              reduce using rule 104 (median -> MEDIAN LPAREN ID RPAREN np_add_median_quadruple .)
    EQ              reduce using rule 104 (median -> MEDIAN LPAREN ID RPAREN np_add_median_quadruple .)
    NE              reduce using rule 104 (median -> MEDIAN LPAREN ID RPAREN np_add_median_quadruple .)
    AND             reduce using rule 104 (median -> MEDIAN LPAREN ID RPAREN np_add_median_quadruple .)
    OR              reduce using rule 104 (median -> MEDIAN LPAREN ID RPAREN np_add_median_quadruple .)
    SEMI            reduce using rule 104 (median -> MEDIAN LPAREN ID RPAREN np_add_median_quadruple .)
    RPAREN          reduce using rule 104 (median -> MEDIAN LPAREN ID RPAREN np_add_median_quadruple .)
    COMMA           reduce using rule 104 (median -> MEDIAN LPAREN ID RPAREN np_add_median_quadruple .)
    RBRACKET        reduce using rule 104 (median -> MEDIAN LPAREN ID RPAREN np_add_median_quadruple .)
    TO              reduce using rule 104 (median -> MEDIAN LPAREN ID RPAREN np_add_median_quadruple .)
    BY              reduce using rule 104 (median -> MEDIAN LPAREN ID RPAREN np_add_median_quadruple .)


state 290

    (105) variance -> VARIANCE LPAREN ID RPAREN np_add_variance_quadruple .

    TIMES           reduce using rule 105 (variance -> VARIANCE LPAREN ID RPAREN np_add_variance_quadruple .)
    DIVIDE          reduce using rule 105 (variance -> VARIANCE LPAREN ID RPAREN np_add_variance_quadruple .)
    PLUS            reduce using rule 105 (variance -> VARIANCE LPAREN ID RPAREN np_add_variance_quadruple .)
    MINUS           reduce using rule 105 (variance -> VARIANCE LPAREN ID RPAREN np_add_variance_quadruple .)
    LT              reduce using rule 105 (variance -> VARIANCE LPAREN ID RPAREN np_add_variance_quadruple .)
    LE              reduce using rule 105 (variance -> VARIANCE LPAREN ID RPAREN np_add_variance_quadruple .)
    GT              reduce using rule 105 (variance -> VARIANCE LPAREN ID RPAREN np_add_variance_quadruple .)
    GE              reduce using rule 105 (variance -> VARIANCE LPAREN ID RPAREN np_add_variance_quadruple .)
    EQ              reduce using rule 105 (variance -> VARIANCE LPAREN ID RPAREN np_add_variance_quadruple .)
    NE              reduce using rule 105 (variance -> VARIANCE LPAREN ID RPAREN np_add_variance_quadruple .)
    AND             reduce using rule 105 (variance -> VARIANCE LPAREN ID RPAREN np_add_variance_quadruple .)
    OR              reduce using rule 105 (variance -> VARIANCE LPAREN ID RPAREN np_add_variance_quadruple .)
    SEMI            reduce using rule 105 (variance -> VARIANCE LPAREN ID RPAREN np_add_variance_quadruple .)
    RPAREN          reduce using rule 105 (variance -> VARIANCE LPAREN ID RPAREN np_add_variance_quadruple .)
    COMMA           reduce using rule 105 (variance -> VARIANCE LPAREN ID RPAREN np_add_variance_quadruple .)
    RBRACKET        reduce using rule 105 (variance -> VARIANCE LPAREN ID RPAREN np_add_variance_quadruple .)
    TO              reduce using rule 105 (variance -> VARIANCE LPAREN ID RPAREN np_add_variance_quadruple .)
    BY              reduce using rule 105 (variance -> VARIANCE LPAREN ID RPAREN np_add_variance_quadruple .)


state 291

    (106) p_variance -> PVARIANCE LPAREN ID RPAREN np_add_p_variance_quadruple .

    TIMES           reduce using rule 106 (p_variance -> PVARIANCE LPAREN ID RPAREN np_add_p_variance_quadruple .)
    DIVIDE          reduce using rule 106 (p_variance -> PVARIANCE LPAREN ID RPAREN np_add_p_variance_quadruple .)
    PLUS            reduce using rule 106 (p_variance -> PVARIANCE LPAREN ID RPAREN np_add_p_variance_quadruple .)
    MINUS           reduce using rule 106 (p_variance -> PVARIANCE LPAREN ID RPAREN np_add_p_variance_quadruple .)
    LT              reduce using rule 106 (p_variance -> PVARIANCE LPAREN ID RPAREN np_add_p_variance_quadruple .)
    LE              reduce using rule 106 (p_variance -> PVARIANCE LPAREN ID RPAREN np_add_p_variance_quadruple .)
    GT              reduce using rule 106 (p_variance -> PVARIANCE LPAREN ID RPAREN np_add_p_variance_quadruple .)
    GE              reduce using rule 106 (p_variance -> PVARIANCE LPAREN ID RPAREN np_add_p_variance_quadruple .)
    EQ              reduce using rule 106 (p_variance -> PVARIANCE LPAREN ID RPAREN np_add_p_variance_quadruple .)
    NE              reduce using rule 106 (p_variance -> PVARIANCE LPAREN ID RPAREN np_add_p_variance_quadruple .)
    AND             reduce using rule 106 (p_variance -> PVARIANCE LPAREN ID RPAREN np_add_p_variance_quadruple .)
    OR              reduce using rule 106 (p_variance -> PVARIANCE LPAREN ID RPAREN np_add_p_variance_quadruple .)
    SEMI            reduce using rule 106 (p_variance -> PVARIANCE LPAREN ID RPAREN np_add_p_variance_quadruple .)
    RPAREN          reduce using rule 106 (p_variance -> PVARIANCE LPAREN ID RPAREN np_add_p_variance_quadruple .)
    COMMA           reduce using rule 106 (p_variance -> PVARIANCE LPAREN ID RPAREN np_add_p_variance_quadruple .)
    RBRACKET        reduce using rule 106 (p_variance -> PVARIANCE LPAREN ID RPAREN np_add_p_variance_quadruple .)
    TO              reduce using rule 106 (p_variance -> PVARIANCE LPAREN ID RPAREN np_add_p_variance_quadruple .)
    BY              reduce using rule 106 (p_variance -> PVARIANCE LPAREN ID RPAREN np_add_p_variance_quadruple .)


state 292

    (107) standard_deviation -> STDEV LPAREN ID RPAREN np_add_stdev_quadruple .

    TIMES           reduce using rule 107 (standard_deviation -> STDEV LPAREN ID RPAREN np_add_stdev_quadruple .)
    DIVIDE          reduce using rule 107 (standard_deviation -> STDEV LPAREN ID RPAREN np_add_stdev_quadruple .)
    PLUS            reduce using rule 107 (standard_deviation -> STDEV LPAREN ID RPAREN np_add_stdev_quadruple .)
    MINUS           reduce using rule 107 (standard_deviation -> STDEV LPAREN ID RPAREN np_add_stdev_quadruple .)
    LT              reduce using rule 107 (standard_deviation -> STDEV LPAREN ID RPAREN np_add_stdev_quadruple .)
    LE              reduce using rule 107 (standard_deviation -> STDEV LPAREN ID RPAREN np_add_stdev_quadruple .)
    GT              reduce using rule 107 (standard_deviation -> STDEV LPAREN ID RPAREN np_add_stdev_quadruple .)
    GE              reduce using rule 107 (standard_deviation -> STDEV LPAREN ID RPAREN np_add_stdev_quadruple .)
    EQ              reduce using rule 107 (standard_deviation -> STDEV LPAREN ID RPAREN np_add_stdev_quadruple .)
    NE              reduce using rule 107 (standard_deviation -> STDEV LPAREN ID RPAREN np_add_stdev_quadruple .)
    AND             reduce using rule 107 (standard_deviation -> STDEV LPAREN ID RPAREN np_add_stdev_quadruple .)
    OR              reduce using rule 107 (standard_deviation -> STDEV LPAREN ID RPAREN np_add_stdev_quadruple .)
    SEMI            reduce using rule 107 (standard_deviation -> STDEV LPAREN ID RPAREN np_add_stdev_quadruple .)
    RPAREN          reduce using rule 107 (standard_deviation -> STDEV LPAREN ID RPAREN np_add_stdev_quadruple .)
    COMMA           reduce using rule 107 (standard_deviation -> STDEV LPAREN ID RPAREN np_add_stdev_quadruple .)
    RBRACKET        reduce using rule 107 (standard_deviation -> STDEV LPAREN ID RPAREN np_add_stdev_quadruple .)
    TO              reduce using rule 107 (standard_deviation -> STDEV LPAREN ID RPAREN np_add_stdev_quadruple .)
    BY              reduce using rule 107 (standard_deviation -> STDEV LPAREN ID RPAREN np_add_stdev_quadruple .)


state 293

    (108) p_standard_deviation -> PSTDEV LPAREN ID RPAREN np_add_p_stdev_quadruple .

    TIMES           reduce using rule 108 (p_standard_deviation -> PSTDEV LPAREN ID RPAREN np_add_p_stdev_quadruple .)
    DIVIDE          reduce using rule 108 (p_standard_deviation -> PSTDEV LPAREN ID RPAREN np_add_p_stdev_quadruple .)
    PLUS            reduce using rule 108 (p_standard_deviation -> PSTDEV LPAREN ID RPAREN np_add_p_stdev_quadruple .)
    MINUS           reduce using rule 108 (p_standard_deviation -> PSTDEV LPAREN ID RPAREN np_add_p_stdev_quadruple .)
    LT              reduce using rule 108 (p_standard_deviation -> PSTDEV LPAREN ID RPAREN np_add_p_stdev_quadruple .)
    LE              reduce using rule 108 (p_standard_deviation -> PSTDEV LPAREN ID RPAREN np_add_p_stdev_quadruple .)
    GT              reduce using rule 108 (p_standard_deviation -> PSTDEV LPAREN ID RPAREN np_add_p_stdev_quadruple .)
    GE              reduce using rule 108 (p_standard_deviation -> PSTDEV LPAREN ID RPAREN np_add_p_stdev_quadruple .)
    EQ              reduce using rule 108 (p_standard_deviation -> PSTDEV LPAREN ID RPAREN np_add_p_stdev_quadruple .)
    NE              reduce using rule 108 (p_standard_deviation -> PSTDEV LPAREN ID RPAREN np_add_p_stdev_quadruple .)
    AND             reduce using rule 108 (p_standard_deviation -> PSTDEV LPAREN ID RPAREN np_add_p_stdev_quadruple .)
    OR              reduce using rule 108 (p_standard_deviation -> PSTDEV LPAREN ID RPAREN np_add_p_stdev_quadruple .)
    SEMI            reduce using rule 108 (p_standard_deviation -> PSTDEV LPAREN ID RPAREN np_add_p_stdev_quadruple .)
    RPAREN          reduce using rule 108 (p_standard_deviation -> PSTDEV LPAREN ID RPAREN np_add_p_stdev_quadruple .)
    COMMA           reduce using rule 108 (p_standard_deviation -> PSTDEV LPAREN ID RPAREN np_add_p_stdev_quadruple .)
    RBRACKET        reduce using rule 108 (p_standard_deviation -> PSTDEV LPAREN ID RPAREN np_add_p_stdev_quadruple .)
    TO              reduce using rule 108 (p_standard_deviation -> PSTDEV LPAREN ID RPAREN np_add_p_stdev_quadruple .)
    BY              reduce using rule 108 (p_standard_deviation -> PSTDEV LPAREN ID RPAREN np_add_p_stdev_quadruple .)


state 294

    (95) non_conditional_loop -> FOR LPAREN ID np_add_id EQUALS np_add_operator . expression np_assign_expression_for TO expression np_non_conditional_limit BY expression RPAREN block np_non_conditional_end
    (46) expression -> . exp
    (47) expression -> . expression1 np_add_quadruple_logical
    (48) expression -> . expression0 np_add_quadruple_or_and
    (57) exp -> . term np_add_quadruple_sum_min
    (58) exp -> . term np_add_quadruple_sum_min exp_1
    (51) expression1 -> . exp LT np_add_operator exp
    (52) expression1 -> . exp LE np_add_operator exp
    (53) expression1 -> . exp GT np_add_operator exp
    (54) expression1 -> . exp GE np_add_operator exp
    (55) expression1 -> . exp EQ np_add_operator exp
    (56) expression1 -> . exp NE np_add_operator exp
    (49) expression0 -> . expression AND np_add_operator expression
    (50) expression0 -> . expression OR np_add_operator expression
    (61) term -> . factor np_add_quadruple_times_div
    (62) term -> . factor np_add_quadruple_times_div term_2
    (65) factor -> . LPAREN np_add_paren expression RPAREN np_pop_paren
    (66) factor -> . ID np_add_id LBRACKET np_check_is_array expression np_verify_array_dim RBRACKET np_get_array_address
    (67) factor -> . factor_prima_1
    (68) factor -> . function_call
    (69) factor -> . special_functions
    (70) factor_prima_1 -> . PLUS varcte
    (71) factor_prima_1 -> . MINUS np_set_as_negative varcte
    (72) factor_prima_1 -> . varcte
    (97) function_call -> . ID LPAREN np_check_function_call np_function_end_params RPAREN
    (98) function_call -> . ID LPAREN np_check_function_call function_call_1 np_function_end_params RPAREN
    (34) special_functions -> . mean
    (35) special_functions -> . median
    (36) special_functions -> . variance
    (37) special_functions -> . p_variance
    (38) special_functions -> . standard_deviation
    (39) special_functions -> . p_standard_deviation
    (73) varcte -> . ID np_add_id
    (74) varcte -> . CTEI np_add_cte_int
    (75) varcte -> . CTEF np_add_cte_float
    (76) varcte -> . CTEC np_add_cte_char
    (77) varcte -> . TRUE np_add_cte_bool
    (78) varcte -> . FALSE np_add_cte_bool
    (103) mean -> . MEAN LPAREN ID RPAREN np_add_mean_quadruple
    (104) median -> . MEDIAN LPAREN ID RPAREN np_add_median_quadruple
    (105) variance -> . VARIANCE LPAREN ID RPAREN np_add_variance_quadruple
    (106) p_variance -> . PVARIANCE LPAREN ID RPAREN np_add_p_variance_quadruple
    (107) standard_deviation -> . STDEV LPAREN ID RPAREN np_add_stdev_quadruple
    (108) p_standard_deviation -> . PSTDEV LPAREN ID RPAREN np_add_p_stdev_quadruple

    LPAREN          shift and go to state 99
    ID              shift and go to state 100
    PLUS            shift and go to state 104
    MINUS           shift and go to state 106
    CTEI            shift and go to state 113
    CTEF            shift and go to state 114
    CTEC            shift and go to state 115
    TRUE            shift and go to state 116
    FALSE           shift and go to state 117
    MEAN            shift and go to state 118
    MEDIAN          shift and go to state 119
    VARIANCE        shift and go to state 120
    PVARIANCE       shift and go to state 121
    STDEV           shift and go to state 122
    PSTDEV          shift and go to state 123

    expression                     shift and go to state 307
    exp                            shift and go to state 94
    expression1                    shift and go to state 95
    expression0                    shift and go to state 96
    term                           shift and go to state 97
    factor                         shift and go to state 98
    factor_prima_1                 shift and go to state 101
    function_call                  shift and go to state 102
    special_functions              shift and go to state 103
    varcte                         shift and go to state 105
    mean                           shift and go to state 107
    median                         shift and go to state 108
    variance                       shift and go to state 109
    p_variance                     shift and go to state 110
    standard_deviation             shift and go to state 111
    p_standard_deviation           shift and go to state 112

state 295

    (94) conditional_loop -> WHILE np_while_init LPAREN expression RPAREN np_while_expression . DO block np_while_end_block

    DO              shift and go to state 308


state 296

    (25) params -> ID COLON type np_add_vars np_add_params_type COMMA . params
    (25) params -> . ID COLON type np_add_vars np_add_params_type COMMA params
    (26) params -> . ID COLON type np_add_vars np_add_params_type

    ID              shift and go to state 73

    params                         shift and go to state 309

state 297

    (19) function -> FUNCTION ID COLON return_type np_create_new_scope LPAREN params RPAREN vars np_set_func_start_point block np_end_function .

    FUNCTION        reduce using rule 19 (function -> FUNCTION ID COLON return_type np_create_new_scope LPAREN params RPAREN vars np_set_func_start_point block np_end_function .)
    MAIN            reduce using rule 19 (function -> FUNCTION ID COLON return_type np_create_new_scope LPAREN params RPAREN vars np_set_func_start_point block np_end_function .)


state 298

    (100) void_function_call -> ID LPAREN np_check_function_call function_call_1 np_function_end_params RPAREN SEMI .

    ID              reduce using rule 100 (void_function_call -> ID LPAREN np_check_function_call function_call_1 np_function_end_params RPAREN SEMI .)
    IF              reduce using rule 100 (void_function_call -> ID LPAREN np_check_function_call function_call_1 np_function_end_params RPAREN SEMI .)
    PRINT           reduce using rule 100 (void_function_call -> ID LPAREN np_check_function_call function_call_1 np_function_end_params RPAREN SEMI .)
    PRINTLN         reduce using rule 100 (void_function_call -> ID LPAREN np_check_function_call function_call_1 np_function_end_params RPAREN SEMI .)
    READ            reduce using rule 100 (void_function_call -> ID LPAREN np_check_function_call function_call_1 np_function_end_params RPAREN SEMI .)
    RETURN          reduce using rule 100 (void_function_call -> ID LPAREN np_check_function_call function_call_1 np_function_end_params RPAREN SEMI .)
    FOR             reduce using rule 100 (void_function_call -> ID LPAREN np_check_function_call function_call_1 np_function_end_params RPAREN SEMI .)
    WHILE           reduce using rule 100 (void_function_call -> ID LPAREN np_check_function_call function_call_1 np_function_end_params RPAREN SEMI .)
    RBRACE          reduce using rule 100 (void_function_call -> ID LPAREN np_check_function_call function_call_1 np_function_end_params RPAREN SEMI .)


state 299

    (102) function_call_1 -> expression np_function_call_add_param COMMA function_call_1 .

    RPAREN          reduce using rule 102 (function_call_1 -> expression np_function_call_add_param COMMA function_call_1 .)


state 300

    (42) assignment -> ID np_add_id LBRACKET np_check_is_array expression np_verify_array_dim RBRACKET . np_get_array_address EQUALS np_add_operator expression np_assign_expression SEMI
    (153) np_get_array_address -> .

    EQUALS          reduce using rule 153 (np_get_array_address -> .)

    np_get_array_address           shift and go to state 310

state 301

    (43) assignment -> ID np_add_id EQUALS np_add_operator expression np_assign_expression SEMI .

    ID              reduce using rule 43 (assignment -> ID np_add_id EQUALS np_add_operator expression np_assign_expression SEMI .)
    IF              reduce using rule 43 (assignment -> ID np_add_id EQUALS np_add_operator expression np_assign_expression SEMI .)
    PRINT           reduce using rule 43 (assignment -> ID np_add_id EQUALS np_add_operator expression np_assign_expression SEMI .)
    PRINTLN         reduce using rule 43 (assignment -> ID np_add_id EQUALS np_add_operator expression np_assign_expression SEMI .)
    READ            reduce using rule 43 (assignment -> ID np_add_id EQUALS np_add_operator expression np_assign_expression SEMI .)
    RETURN          reduce using rule 43 (assignment -> ID np_add_id EQUALS np_add_operator expression np_assign_expression SEMI .)
    FOR             reduce using rule 43 (assignment -> ID np_add_id EQUALS np_add_operator expression np_assign_expression SEMI .)
    WHILE           reduce using rule 43 (assignment -> ID np_add_id EQUALS np_add_operator expression np_assign_expression SEMI .)
    RBRACE          reduce using rule 43 (assignment -> ID np_add_id EQUALS np_add_operator expression np_assign_expression SEMI .)


state 302

    (44) condition -> IF LPAREN expression RPAREN np_condition_gotof block np_condition_end_gotof .

    ID              reduce using rule 44 (condition -> IF LPAREN expression RPAREN np_condition_gotof block np_condition_end_gotof .)
    IF              reduce using rule 44 (condition -> IF LPAREN expression RPAREN np_condition_gotof block np_condition_end_gotof .)
    PRINT           reduce using rule 44 (condition -> IF LPAREN expression RPAREN np_condition_gotof block np_condition_end_gotof .)
    PRINTLN         reduce using rule 44 (condition -> IF LPAREN expression RPAREN np_condition_gotof block np_condition_end_gotof .)
    READ            reduce using rule 44 (condition -> IF LPAREN expression RPAREN np_condition_gotof block np_condition_end_gotof .)
    RETURN          reduce using rule 44 (condition -> IF LPAREN expression RPAREN np_condition_gotof block np_condition_end_gotof .)
    FOR             reduce using rule 44 (condition -> IF LPAREN expression RPAREN np_condition_gotof block np_condition_end_gotof .)
    WHILE           reduce using rule 44 (condition -> IF LPAREN expression RPAREN np_condition_gotof block np_condition_end_gotof .)
    RBRACE          reduce using rule 44 (condition -> IF LPAREN expression RPAREN np_condition_gotof block np_condition_end_gotof .)


state 303

    (45) condition -> IF LPAREN expression RPAREN np_condition_gotof block ELSE . np_condition_goto_else block np_condition_end_gotof
    (131) np_condition_goto_else -> .

    LBRACE          reduce using rule 131 (np_condition_goto_else -> .)

    np_condition_goto_else         shift and go to state 311

state 304

    (91) reading_1 -> ID np_add_id LBRACKET np_check_is_array expression . np_verify_array_dim RBRACKET np_get_array_address
    (49) expression0 -> expression . AND np_add_operator expression
    (50) expression0 -> expression . OR np_add_operator expression
    (152) np_verify_array_dim -> .

    AND             shift and go to state 143
    OR              shift and go to state 144
    RBRACKET        reduce using rule 152 (np_verify_array_dim -> .)

    np_verify_array_dim            shift and go to state 312

state 305

    (66) factor -> ID np_add_id LBRACKET np_check_is_array expression np_verify_array_dim . RBRACKET np_get_array_address

    RBRACKET        shift and go to state 313


state 306

    (98) function_call -> ID LPAREN np_check_function_call function_call_1 np_function_end_params RPAREN .

    TIMES           reduce using rule 98 (function_call -> ID LPAREN np_check_function_call function_call_1 np_function_end_params RPAREN .)
    DIVIDE          reduce using rule 98 (function_call -> ID LPAREN np_check_function_call function_call_1 np_function_end_params RPAREN .)
    PLUS            reduce using rule 98 (function_call -> ID LPAREN np_check_function_call function_call_1 np_function_end_params RPAREN .)
    MINUS           reduce using rule 98 (function_call -> ID LPAREN np_check_function_call function_call_1 np_function_end_params RPAREN .)
    LT              reduce using rule 98 (function_call -> ID LPAREN np_check_function_call function_call_1 np_function_end_params RPAREN .)
    LE              reduce using rule 98 (function_call -> ID LPAREN np_check_function_call function_call_1 np_function_end_params RPAREN .)
    GT              reduce using rule 98 (function_call -> ID LPAREN np_check_function_call function_call_1 np_function_end_params RPAREN .)
    GE              reduce using rule 98 (function_call -> ID LPAREN np_check_function_call function_call_1 np_function_end_params RPAREN .)
    EQ              reduce using rule 98 (function_call -> ID LPAREN np_check_function_call function_call_1 np_function_end_params RPAREN .)
    NE              reduce using rule 98 (function_call -> ID LPAREN np_check_function_call function_call_1 np_function_end_params RPAREN .)
    AND             reduce using rule 98 (function_call -> ID LPAREN np_check_function_call function_call_1 np_function_end_params RPAREN .)
    OR              reduce using rule 98 (function_call -> ID LPAREN np_check_function_call function_call_1 np_function_end_params RPAREN .)
    SEMI            reduce using rule 98 (function_call -> ID LPAREN np_check_function_call function_call_1 np_function_end_params RPAREN .)
    RPAREN          reduce using rule 98 (function_call -> ID LPAREN np_check_function_call function_call_1 np_function_end_params RPAREN .)
    COMMA           reduce using rule 98 (function_call -> ID LPAREN np_check_function_call function_call_1 np_function_end_params RPAREN .)
    RBRACKET        reduce using rule 98 (function_call -> ID LPAREN np_check_function_call function_call_1 np_function_end_params RPAREN .)
    TO              reduce using rule 98 (function_call -> ID LPAREN np_check_function_call function_call_1 np_function_end_params RPAREN .)
    BY              reduce using rule 98 (function_call -> ID LPAREN np_check_function_call function_call_1 np_function_end_params RPAREN .)


state 307

    (95) non_conditional_loop -> FOR LPAREN ID np_add_id EQUALS np_add_operator expression . np_assign_expression_for TO expression np_non_conditional_limit BY expression RPAREN block np_non_conditional_end
    (49) expression0 -> expression . AND np_add_operator expression
    (50) expression0 -> expression . OR np_add_operator expression
    (135) np_assign_expression_for -> .

    AND             shift and go to state 143
    OR              shift and go to state 144
    TO              reduce using rule 135 (np_assign_expression_for -> .)

    np_assign_expression_for       shift and go to state 314

state 308

    (94) conditional_loop -> WHILE np_while_init LPAREN expression RPAREN np_while_expression DO . block np_while_end_block
    (22) block -> . LBRACE statements RBRACE

    LBRACE          shift and go to state 48

    block                          shift and go to state 315

state 309

    (25) params -> ID COLON type np_add_vars np_add_params_type COMMA params .

    RPAREN          reduce using rule 25 (params -> ID COLON type np_add_vars np_add_params_type COMMA params .)


state 310

    (42) assignment -> ID np_add_id LBRACKET np_check_is_array expression np_verify_array_dim RBRACKET np_get_array_address . EQUALS np_add_operator expression np_assign_expression SEMI

    EQUALS          shift and go to state 316


state 311

    (45) condition -> IF LPAREN expression RPAREN np_condition_gotof block ELSE np_condition_goto_else . block np_condition_end_gotof
    (22) block -> . LBRACE statements RBRACE

    LBRACE          shift and go to state 48

    block                          shift and go to state 317

state 312

    (91) reading_1 -> ID np_add_id LBRACKET np_check_is_array expression np_verify_array_dim . RBRACKET np_get_array_address

    RBRACKET        shift and go to state 318


state 313

    (66) factor -> ID np_add_id LBRACKET np_check_is_array expression np_verify_array_dim RBRACKET . np_get_array_address
    (153) np_get_array_address -> .

    TIMES           reduce using rule 153 (np_get_array_address -> .)
    DIVIDE          reduce using rule 153 (np_get_array_address -> .)
    PLUS            reduce using rule 153 (np_get_array_address -> .)
    MINUS           reduce using rule 153 (np_get_array_address -> .)
    LT              reduce using rule 153 (np_get_array_address -> .)
    LE              reduce using rule 153 (np_get_array_address -> .)
    GT              reduce using rule 153 (np_get_array_address -> .)
    GE              reduce using rule 153 (np_get_array_address -> .)
    EQ              reduce using rule 153 (np_get_array_address -> .)
    NE              reduce using rule 153 (np_get_array_address -> .)
    AND             reduce using rule 153 (np_get_array_address -> .)
    OR              reduce using rule 153 (np_get_array_address -> .)
    SEMI            reduce using rule 153 (np_get_array_address -> .)
    RPAREN          reduce using rule 153 (np_get_array_address -> .)
    COMMA           reduce using rule 153 (np_get_array_address -> .)
    RBRACKET        reduce using rule 153 (np_get_array_address -> .)
    TO              reduce using rule 153 (np_get_array_address -> .)
    BY              reduce using rule 153 (np_get_array_address -> .)

    np_get_array_address           shift and go to state 319

state 314

    (95) non_conditional_loop -> FOR LPAREN ID np_add_id EQUALS np_add_operator expression np_assign_expression_for . TO expression np_non_conditional_limit BY expression RPAREN block np_non_conditional_end

    TO              shift and go to state 320


state 315

    (94) conditional_loop -> WHILE np_while_init LPAREN expression RPAREN np_while_expression DO block . np_while_end_block
    (134) np_while_end_block -> .

    ID              reduce using rule 134 (np_while_end_block -> .)
    IF              reduce using rule 134 (np_while_end_block -> .)
    PRINT           reduce using rule 134 (np_while_end_block -> .)
    PRINTLN         reduce using rule 134 (np_while_end_block -> .)
    READ            reduce using rule 134 (np_while_end_block -> .)
    RETURN          reduce using rule 134 (np_while_end_block -> .)
    FOR             reduce using rule 134 (np_while_end_block -> .)
    WHILE           reduce using rule 134 (np_while_end_block -> .)
    RBRACE          reduce using rule 134 (np_while_end_block -> .)

    np_while_end_block             shift and go to state 321

state 316

    (42) assignment -> ID np_add_id LBRACKET np_check_is_array expression np_verify_array_dim RBRACKET np_get_array_address EQUALS . np_add_operator expression np_assign_expression SEMI
    (121) np_add_operator -> .

    LPAREN          reduce using rule 121 (np_add_operator -> .)
    ID              reduce using rule 121 (np_add_operator -> .)
    PLUS            reduce using rule 121 (np_add_operator -> .)
    MINUS           reduce using rule 121 (np_add_operator -> .)
    CTEI            reduce using rule 121 (np_add_operator -> .)
    CTEF            reduce using rule 121 (np_add_operator -> .)
    CTEC            reduce using rule 121 (np_add_operator -> .)
    TRUE            reduce using rule 121 (np_add_operator -> .)
    FALSE           reduce using rule 121 (np_add_operator -> .)
    MEAN            reduce using rule 121 (np_add_operator -> .)
    MEDIAN          reduce using rule 121 (np_add_operator -> .)
    VARIANCE        reduce using rule 121 (np_add_operator -> .)
    PVARIANCE       reduce using rule 121 (np_add_operator -> .)
    STDEV           reduce using rule 121 (np_add_operator -> .)
    PSTDEV          reduce using rule 121 (np_add_operator -> .)

    np_add_operator                shift and go to state 322

state 317

    (45) condition -> IF LPAREN expression RPAREN np_condition_gotof block ELSE np_condition_goto_else block . np_condition_end_gotof
    (130) np_condition_end_gotof -> .

    ID              reduce using rule 130 (np_condition_end_gotof -> .)
    IF              reduce using rule 130 (np_condition_end_gotof -> .)
    PRINT           reduce using rule 130 (np_condition_end_gotof -> .)
    PRINTLN         reduce using rule 130 (np_condition_end_gotof -> .)
    READ            reduce using rule 130 (np_condition_end_gotof -> .)
    RETURN          reduce using rule 130 (np_condition_end_gotof -> .)
    FOR             reduce using rule 130 (np_condition_end_gotof -> .)
    WHILE           reduce using rule 130 (np_condition_end_gotof -> .)
    RBRACE          reduce using rule 130 (np_condition_end_gotof -> .)

    np_condition_end_gotof         shift and go to state 323

state 318

    (91) reading_1 -> ID np_add_id LBRACKET np_check_is_array expression np_verify_array_dim RBRACKET . np_get_array_address
    (153) np_get_array_address -> .

    RPAREN          reduce using rule 153 (np_get_array_address -> .)

    np_get_array_address           shift and go to state 324

state 319

    (66) factor -> ID np_add_id LBRACKET np_check_is_array expression np_verify_array_dim RBRACKET np_get_array_address .

    TIMES           reduce using rule 66 (factor -> ID np_add_id LBRACKET np_check_is_array expression np_verify_array_dim RBRACKET np_get_array_address .)
    DIVIDE          reduce using rule 66 (factor -> ID np_add_id LBRACKET np_check_is_array expression np_verify_array_dim RBRACKET np_get_array_address .)
    PLUS            reduce using rule 66 (factor -> ID np_add_id LBRACKET np_check_is_array expression np_verify_array_dim RBRACKET np_get_array_address .)
    MINUS           reduce using rule 66 (factor -> ID np_add_id LBRACKET np_check_is_array expression np_verify_array_dim RBRACKET np_get_array_address .)
    LT              reduce using rule 66 (factor -> ID np_add_id LBRACKET np_check_is_array expression np_verify_array_dim RBRACKET np_get_array_address .)
    LE              reduce using rule 66 (factor -> ID np_add_id LBRACKET np_check_is_array expression np_verify_array_dim RBRACKET np_get_array_address .)
    GT              reduce using rule 66 (factor -> ID np_add_id LBRACKET np_check_is_array expression np_verify_array_dim RBRACKET np_get_array_address .)
    GE              reduce using rule 66 (factor -> ID np_add_id LBRACKET np_check_is_array expression np_verify_array_dim RBRACKET np_get_array_address .)
    EQ              reduce using rule 66 (factor -> ID np_add_id LBRACKET np_check_is_array expression np_verify_array_dim RBRACKET np_get_array_address .)
    NE              reduce using rule 66 (factor -> ID np_add_id LBRACKET np_check_is_array expression np_verify_array_dim RBRACKET np_get_array_address .)
    AND             reduce using rule 66 (factor -> ID np_add_id LBRACKET np_check_is_array expression np_verify_array_dim RBRACKET np_get_array_address .)
    OR              reduce using rule 66 (factor -> ID np_add_id LBRACKET np_check_is_array expression np_verify_array_dim RBRACKET np_get_array_address .)
    SEMI            reduce using rule 66 (factor -> ID np_add_id LBRACKET np_check_is_array expression np_verify_array_dim RBRACKET np_get_array_address .)
    RPAREN          reduce using rule 66 (factor -> ID np_add_id LBRACKET np_check_is_array expression np_verify_array_dim RBRACKET np_get_array_address .)
    COMMA           reduce using rule 66 (factor -> ID np_add_id LBRACKET np_check_is_array expression np_verify_array_dim RBRACKET np_get_array_address .)
    RBRACKET        reduce using rule 66 (factor -> ID np_add_id LBRACKET np_check_is_array expression np_verify_array_dim RBRACKET np_get_array_address .)
    TO              reduce using rule 66 (factor -> ID np_add_id LBRACKET np_check_is_array expression np_verify_array_dim RBRACKET np_get_array_address .)
    BY              reduce using rule 66 (factor -> ID np_add_id LBRACKET np_check_is_array expression np_verify_array_dim RBRACKET np_get_array_address .)


state 320

    (95) non_conditional_loop -> FOR LPAREN ID np_add_id EQUALS np_add_operator expression np_assign_expression_for TO . expression np_non_conditional_limit BY expression RPAREN block np_non_conditional_end
    (46) expression -> . exp
    (47) expression -> . expression1 np_add_quadruple_logical
    (48) expression -> . expression0 np_add_quadruple_or_and
    (57) exp -> . term np_add_quadruple_sum_min
    (58) exp -> . term np_add_quadruple_sum_min exp_1
    (51) expression1 -> . exp LT np_add_operator exp
    (52) expression1 -> . exp LE np_add_operator exp
    (53) expression1 -> . exp GT np_add_operator exp
    (54) expression1 -> . exp GE np_add_operator exp
    (55) expression1 -> . exp EQ np_add_operator exp
    (56) expression1 -> . exp NE np_add_operator exp
    (49) expression0 -> . expression AND np_add_operator expression
    (50) expression0 -> . expression OR np_add_operator expression
    (61) term -> . factor np_add_quadruple_times_div
    (62) term -> . factor np_add_quadruple_times_div term_2
    (65) factor -> . LPAREN np_add_paren expression RPAREN np_pop_paren
    (66) factor -> . ID np_add_id LBRACKET np_check_is_array expression np_verify_array_dim RBRACKET np_get_array_address
    (67) factor -> . factor_prima_1
    (68) factor -> . function_call
    (69) factor -> . special_functions
    (70) factor_prima_1 -> . PLUS varcte
    (71) factor_prima_1 -> . MINUS np_set_as_negative varcte
    (72) factor_prima_1 -> . varcte
    (97) function_call -> . ID LPAREN np_check_function_call np_function_end_params RPAREN
    (98) function_call -> . ID LPAREN np_check_function_call function_call_1 np_function_end_params RPAREN
    (34) special_functions -> . mean
    (35) special_functions -> . median
    (36) special_functions -> . variance
    (37) special_functions -> . p_variance
    (38) special_functions -> . standard_deviation
    (39) special_functions -> . p_standard_deviation
    (73) varcte -> . ID np_add_id
    (74) varcte -> . CTEI np_add_cte_int
    (75) varcte -> . CTEF np_add_cte_float
    (76) varcte -> . CTEC np_add_cte_char
    (77) varcte -> . TRUE np_add_cte_bool
    (78) varcte -> . FALSE np_add_cte_bool
    (103) mean -> . MEAN LPAREN ID RPAREN np_add_mean_quadruple
    (104) median -> . MEDIAN LPAREN ID RPAREN np_add_median_quadruple
    (105) variance -> . VARIANCE LPAREN ID RPAREN np_add_variance_quadruple
    (106) p_variance -> . PVARIANCE LPAREN ID RPAREN np_add_p_variance_quadruple
    (107) standard_deviation -> . STDEV LPAREN ID RPAREN np_add_stdev_quadruple
    (108) p_standard_deviation -> . PSTDEV LPAREN ID RPAREN np_add_p_stdev_quadruple

    LPAREN          shift and go to state 99
    ID              shift and go to state 100
    PLUS            shift and go to state 104
    MINUS           shift and go to state 106
    CTEI            shift and go to state 113
    CTEF            shift and go to state 114
    CTEC            shift and go to state 115
    TRUE            shift and go to state 116
    FALSE           shift and go to state 117
    MEAN            shift and go to state 118
    MEDIAN          shift and go to state 119
    VARIANCE        shift and go to state 120
    PVARIANCE       shift and go to state 121
    STDEV           shift and go to state 122
    PSTDEV          shift and go to state 123

    expression                     shift and go to state 325
    exp                            shift and go to state 94
    expression1                    shift and go to state 95
    expression0                    shift and go to state 96
    term                           shift and go to state 97
    factor                         shift and go to state 98
    factor_prima_1                 shift and go to state 101
    function_call                  shift and go to state 102
    special_functions              shift and go to state 103
    varcte                         shift and go to state 105
    mean                           shift and go to state 107
    median                         shift and go to state 108
    variance                       shift and go to state 109
    p_variance                     shift and go to state 110
    standard_deviation             shift and go to state 111
    p_standard_deviation           shift and go to state 112

state 321

    (94) conditional_loop -> WHILE np_while_init LPAREN expression RPAREN np_while_expression DO block np_while_end_block .

    ID              reduce using rule 94 (conditional_loop -> WHILE np_while_init LPAREN expression RPAREN np_while_expression DO block np_while_end_block .)
    IF              reduce using rule 94 (conditional_loop -> WHILE np_while_init LPAREN expression RPAREN np_while_expression DO block np_while_end_block .)
    PRINT           reduce using rule 94 (conditional_loop -> WHILE np_while_init LPAREN expression RPAREN np_while_expression DO block np_while_end_block .)
    PRINTLN         reduce using rule 94 (conditional_loop -> WHILE np_while_init LPAREN expression RPAREN np_while_expression DO block np_while_end_block .)
    READ            reduce using rule 94 (conditional_loop -> WHILE np_while_init LPAREN expression RPAREN np_while_expression DO block np_while_end_block .)
    RETURN          reduce using rule 94 (conditional_loop -> WHILE np_while_init LPAREN expression RPAREN np_while_expression DO block np_while_end_block .)
    FOR             reduce using rule 94 (conditional_loop -> WHILE np_while_init LPAREN expression RPAREN np_while_expression DO block np_while_end_block .)
    WHILE           reduce using rule 94 (conditional_loop -> WHILE np_while_init LPAREN expression RPAREN np_while_expression DO block np_while_end_block .)
    RBRACE          reduce using rule 94 (conditional_loop -> WHILE np_while_init LPAREN expression RPAREN np_while_expression DO block np_while_end_block .)


state 322

    (42) assignment -> ID np_add_id LBRACKET np_check_is_array expression np_verify_array_dim RBRACKET np_get_array_address EQUALS np_add_operator . expression np_assign_expression SEMI
    (46) expression -> . exp
    (47) expression -> . expression1 np_add_quadruple_logical
    (48) expression -> . expression0 np_add_quadruple_or_and
    (57) exp -> . term np_add_quadruple_sum_min
    (58) exp -> . term np_add_quadruple_sum_min exp_1
    (51) expression1 -> . exp LT np_add_operator exp
    (52) expression1 -> . exp LE np_add_operator exp
    (53) expression1 -> . exp GT np_add_operator exp
    (54) expression1 -> . exp GE np_add_operator exp
    (55) expression1 -> . exp EQ np_add_operator exp
    (56) expression1 -> . exp NE np_add_operator exp
    (49) expression0 -> . expression AND np_add_operator expression
    (50) expression0 -> . expression OR np_add_operator expression
    (61) term -> . factor np_add_quadruple_times_div
    (62) term -> . factor np_add_quadruple_times_div term_2
    (65) factor -> . LPAREN np_add_paren expression RPAREN np_pop_paren
    (66) factor -> . ID np_add_id LBRACKET np_check_is_array expression np_verify_array_dim RBRACKET np_get_array_address
    (67) factor -> . factor_prima_1
    (68) factor -> . function_call
    (69) factor -> . special_functions
    (70) factor_prima_1 -> . PLUS varcte
    (71) factor_prima_1 -> . MINUS np_set_as_negative varcte
    (72) factor_prima_1 -> . varcte
    (97) function_call -> . ID LPAREN np_check_function_call np_function_end_params RPAREN
    (98) function_call -> . ID LPAREN np_check_function_call function_call_1 np_function_end_params RPAREN
    (34) special_functions -> . mean
    (35) special_functions -> . median
    (36) special_functions -> . variance
    (37) special_functions -> . p_variance
    (38) special_functions -> . standard_deviation
    (39) special_functions -> . p_standard_deviation
    (73) varcte -> . ID np_add_id
    (74) varcte -> . CTEI np_add_cte_int
    (75) varcte -> . CTEF np_add_cte_float
    (76) varcte -> . CTEC np_add_cte_char
    (77) varcte -> . TRUE np_add_cte_bool
    (78) varcte -> . FALSE np_add_cte_bool
    (103) mean -> . MEAN LPAREN ID RPAREN np_add_mean_quadruple
    (104) median -> . MEDIAN LPAREN ID RPAREN np_add_median_quadruple
    (105) variance -> . VARIANCE LPAREN ID RPAREN np_add_variance_quadruple
    (106) p_variance -> . PVARIANCE LPAREN ID RPAREN np_add_p_variance_quadruple
    (107) standard_deviation -> . STDEV LPAREN ID RPAREN np_add_stdev_quadruple
    (108) p_standard_deviation -> . PSTDEV LPAREN ID RPAREN np_add_p_stdev_quadruple

    LPAREN          shift and go to state 99
    ID              shift and go to state 100
    PLUS            shift and go to state 104
    MINUS           shift and go to state 106
    CTEI            shift and go to state 113
    CTEF            shift and go to state 114
    CTEC            shift and go to state 115
    TRUE            shift and go to state 116
    FALSE           shift and go to state 117
    MEAN            shift and go to state 118
    MEDIAN          shift and go to state 119
    VARIANCE        shift and go to state 120
    PVARIANCE       shift and go to state 121
    STDEV           shift and go to state 122
    PSTDEV          shift and go to state 123

    expression                     shift and go to state 326
    exp                            shift and go to state 94
    expression1                    shift and go to state 95
    expression0                    shift and go to state 96
    term                           shift and go to state 97
    factor                         shift and go to state 98
    factor_prima_1                 shift and go to state 101
    function_call                  shift and go to state 102
    special_functions              shift and go to state 103
    varcte                         shift and go to state 105
    mean                           shift and go to state 107
    median                         shift and go to state 108
    variance                       shift and go to state 109
    p_variance                     shift and go to state 110
    standard_deviation             shift and go to state 111
    p_standard_deviation           shift and go to state 112

state 323

    (45) condition -> IF LPAREN expression RPAREN np_condition_gotof block ELSE np_condition_goto_else block np_condition_end_gotof .

    ID              reduce using rule 45 (condition -> IF LPAREN expression RPAREN np_condition_gotof block ELSE np_condition_goto_else block np_condition_end_gotof .)
    IF              reduce using rule 45 (condition -> IF LPAREN expression RPAREN np_condition_gotof block ELSE np_condition_goto_else block np_condition_end_gotof .)
    PRINT           reduce using rule 45 (condition -> IF LPAREN expression RPAREN np_condition_gotof block ELSE np_condition_goto_else block np_condition_end_gotof .)
    PRINTLN         reduce using rule 45 (condition -> IF LPAREN expression RPAREN np_condition_gotof block ELSE np_condition_goto_else block np_condition_end_gotof .)
    READ            reduce using rule 45 (condition -> IF LPAREN expression RPAREN np_condition_gotof block ELSE np_condition_goto_else block np_condition_end_gotof .)
    RETURN          reduce using rule 45 (condition -> IF LPAREN expression RPAREN np_condition_gotof block ELSE np_condition_goto_else block np_condition_end_gotof .)
    FOR             reduce using rule 45 (condition -> IF LPAREN expression RPAREN np_condition_gotof block ELSE np_condition_goto_else block np_condition_end_gotof .)
    WHILE           reduce using rule 45 (condition -> IF LPAREN expression RPAREN np_condition_gotof block ELSE np_condition_goto_else block np_condition_end_gotof .)
    RBRACE          reduce using rule 45 (condition -> IF LPAREN expression RPAREN np_condition_gotof block ELSE np_condition_goto_else block np_condition_end_gotof .)


state 324

    (91) reading_1 -> ID np_add_id LBRACKET np_check_is_array expression np_verify_array_dim RBRACKET np_get_array_address .

    RPAREN          reduce using rule 91 (reading_1 -> ID np_add_id LBRACKET np_check_is_array expression np_verify_array_dim RBRACKET np_get_array_address .)


state 325

    (95) non_conditional_loop -> FOR LPAREN ID np_add_id EQUALS np_add_operator expression np_assign_expression_for TO expression . np_non_conditional_limit BY expression RPAREN block np_non_conditional_end
    (49) expression0 -> expression . AND np_add_operator expression
    (50) expression0 -> expression . OR np_add_operator expression
    (136) np_non_conditional_limit -> .

    AND             shift and go to state 143
    OR              shift and go to state 144
    BY              reduce using rule 136 (np_non_conditional_limit -> .)

    np_non_conditional_limit       shift and go to state 327

state 326

    (42) assignment -> ID np_add_id LBRACKET np_check_is_array expression np_verify_array_dim RBRACKET np_get_array_address EQUALS np_add_operator expression . np_assign_expression SEMI
    (49) expression0 -> expression . AND np_add_operator expression
    (50) expression0 -> expression . OR np_add_operator expression
    (128) np_assign_expression -> .

    AND             shift and go to state 143
    OR              shift and go to state 144
    SEMI            reduce using rule 128 (np_assign_expression -> .)

    np_assign_expression           shift and go to state 328

state 327

    (95) non_conditional_loop -> FOR LPAREN ID np_add_id EQUALS np_add_operator expression np_assign_expression_for TO expression np_non_conditional_limit . BY expression RPAREN block np_non_conditional_end

    BY              shift and go to state 329


state 328

    (42) assignment -> ID np_add_id LBRACKET np_check_is_array expression np_verify_array_dim RBRACKET np_get_array_address EQUALS np_add_operator expression np_assign_expression . SEMI

    SEMI            shift and go to state 330


state 329

    (95) non_conditional_loop -> FOR LPAREN ID np_add_id EQUALS np_add_operator expression np_assign_expression_for TO expression np_non_conditional_limit BY . expression RPAREN block np_non_conditional_end
    (46) expression -> . exp
    (47) expression -> . expression1 np_add_quadruple_logical
    (48) expression -> . expression0 np_add_quadruple_or_and
    (57) exp -> . term np_add_quadruple_sum_min
    (58) exp -> . term np_add_quadruple_sum_min exp_1
    (51) expression1 -> . exp LT np_add_operator exp
    (52) expression1 -> . exp LE np_add_operator exp
    (53) expression1 -> . exp GT np_add_operator exp
    (54) expression1 -> . exp GE np_add_operator exp
    (55) expression1 -> . exp EQ np_add_operator exp
    (56) expression1 -> . exp NE np_add_operator exp
    (49) expression0 -> . expression AND np_add_operator expression
    (50) expression0 -> . expression OR np_add_operator expression
    (61) term -> . factor np_add_quadruple_times_div
    (62) term -> . factor np_add_quadruple_times_div term_2
    (65) factor -> . LPAREN np_add_paren expression RPAREN np_pop_paren
    (66) factor -> . ID np_add_id LBRACKET np_check_is_array expression np_verify_array_dim RBRACKET np_get_array_address
    (67) factor -> . factor_prima_1
    (68) factor -> . function_call
    (69) factor -> . special_functions
    (70) factor_prima_1 -> . PLUS varcte
    (71) factor_prima_1 -> . MINUS np_set_as_negative varcte
    (72) factor_prima_1 -> . varcte
    (97) function_call -> . ID LPAREN np_check_function_call np_function_end_params RPAREN
    (98) function_call -> . ID LPAREN np_check_function_call function_call_1 np_function_end_params RPAREN
    (34) special_functions -> . mean
    (35) special_functions -> . median
    (36) special_functions -> . variance
    (37) special_functions -> . p_variance
    (38) special_functions -> . standard_deviation
    (39) special_functions -> . p_standard_deviation
    (73) varcte -> . ID np_add_id
    (74) varcte -> . CTEI np_add_cte_int
    (75) varcte -> . CTEF np_add_cte_float
    (76) varcte -> . CTEC np_add_cte_char
    (77) varcte -> . TRUE np_add_cte_bool
    (78) varcte -> . FALSE np_add_cte_bool
    (103) mean -> . MEAN LPAREN ID RPAREN np_add_mean_quadruple
    (104) median -> . MEDIAN LPAREN ID RPAREN np_add_median_quadruple
    (105) variance -> . VARIANCE LPAREN ID RPAREN np_add_variance_quadruple
    (106) p_variance -> . PVARIANCE LPAREN ID RPAREN np_add_p_variance_quadruple
    (107) standard_deviation -> . STDEV LPAREN ID RPAREN np_add_stdev_quadruple
    (108) p_standard_deviation -> . PSTDEV LPAREN ID RPAREN np_add_p_stdev_quadruple

    LPAREN          shift and go to state 99
    ID              shift and go to state 100
    PLUS            shift and go to state 104
    MINUS           shift and go to state 106
    CTEI            shift and go to state 113
    CTEF            shift and go to state 114
    CTEC            shift and go to state 115
    TRUE            shift and go to state 116
    FALSE           shift and go to state 117
    MEAN            shift and go to state 118
    MEDIAN          shift and go to state 119
    VARIANCE        shift and go to state 120
    PVARIANCE       shift and go to state 121
    STDEV           shift and go to state 122
    PSTDEV          shift and go to state 123

    expression                     shift and go to state 331
    exp                            shift and go to state 94
    expression1                    shift and go to state 95
    expression0                    shift and go to state 96
    term                           shift and go to state 97
    factor                         shift and go to state 98
    factor_prima_1                 shift and go to state 101
    function_call                  shift and go to state 102
    special_functions              shift and go to state 103
    varcte                         shift and go to state 105
    mean                           shift and go to state 107
    median                         shift and go to state 108
    variance                       shift and go to state 109
    p_variance                     shift and go to state 110
    standard_deviation             shift and go to state 111
    p_standard_deviation           shift and go to state 112

state 330

    (42) assignment -> ID np_add_id LBRACKET np_check_is_array expression np_verify_array_dim RBRACKET np_get_array_address EQUALS np_add_operator expression np_assign_expression SEMI .

    ID              reduce using rule 42 (assignment -> ID np_add_id LBRACKET np_check_is_array expression np_verify_array_dim RBRACKET np_get_array_address EQUALS np_add_operator expression np_assign_expression SEMI .)
    IF              reduce using rule 42 (assignment -> ID np_add_id LBRACKET np_check_is_array expression np_verify_array_dim RBRACKET np_get_array_address EQUALS np_add_operator expression np_assign_expression SEMI .)
    PRINT           reduce using rule 42 (assignment -> ID np_add_id LBRACKET np_check_is_array expression np_verify_array_dim RBRACKET np_get_array_address EQUALS np_add_operator expression np_assign_expression SEMI .)
    PRINTLN         reduce using rule 42 (assignment -> ID np_add_id LBRACKET np_check_is_array expression np_verify_array_dim RBRACKET np_get_array_address EQUALS np_add_operator expression np_assign_expression SEMI .)
    READ            reduce using rule 42 (assignment -> ID np_add_id LBRACKET np_check_is_array expression np_verify_array_dim RBRACKET np_get_array_address EQUALS np_add_operator expression np_assign_expression SEMI .)
    RETURN          reduce using rule 42 (assignment -> ID np_add_id LBRACKET np_check_is_array expression np_verify_array_dim RBRACKET np_get_array_address EQUALS np_add_operator expression np_assign_expression SEMI .)
    FOR             reduce using rule 42 (assignment -> ID np_add_id LBRACKET np_check_is_array expression np_verify_array_dim RBRACKET np_get_array_address EQUALS np_add_operator expression np_assign_expression SEMI .)
    WHILE           reduce using rule 42 (assignment -> ID np_add_id LBRACKET np_check_is_array expression np_verify_array_dim RBRACKET np_get_array_address EQUALS np_add_operator expression np_assign_expression SEMI .)
    RBRACE          reduce using rule 42 (assignment -> ID np_add_id LBRACKET np_check_is_array expression np_verify_array_dim RBRACKET np_get_array_address EQUALS np_add_operator expression np_assign_expression SEMI .)


state 331

    (95) non_conditional_loop -> FOR LPAREN ID np_add_id EQUALS np_add_operator expression np_assign_expression_for TO expression np_non_conditional_limit BY expression . RPAREN block np_non_conditional_end
    (49) expression0 -> expression . AND np_add_operator expression
    (50) expression0 -> expression . OR np_add_operator expression

    RPAREN          shift and go to state 332
    AND             shift and go to state 143
    OR              shift and go to state 144


state 332

    (95) non_conditional_loop -> FOR LPAREN ID np_add_id EQUALS np_add_operator expression np_assign_expression_for TO expression np_non_conditional_limit BY expression RPAREN . block np_non_conditional_end
    (22) block -> . LBRACE statements RBRACE

    LBRACE          shift and go to state 48

    block                          shift and go to state 333

state 333

    (95) non_conditional_loop -> FOR LPAREN ID np_add_id EQUALS np_add_operator expression np_assign_expression_for TO expression np_non_conditional_limit BY expression RPAREN block . np_non_conditional_end
    (137) np_non_conditional_end -> .

    ID              reduce using rule 137 (np_non_conditional_end -> .)
    IF              reduce using rule 137 (np_non_conditional_end -> .)
    PRINT           reduce using rule 137 (np_non_conditional_end -> .)
    PRINTLN         reduce using rule 137 (np_non_conditional_end -> .)
    READ            reduce using rule 137 (np_non_conditional_end -> .)
    RETURN          reduce using rule 137 (np_non_conditional_end -> .)
    FOR             reduce using rule 137 (np_non_conditional_end -> .)
    WHILE           reduce using rule 137 (np_non_conditional_end -> .)
    RBRACE          reduce using rule 137 (np_non_conditional_end -> .)

    np_non_conditional_end         shift and go to state 334

state 334

    (95) non_conditional_loop -> FOR LPAREN ID np_add_id EQUALS np_add_operator expression np_assign_expression_for TO expression np_non_conditional_limit BY expression RPAREN block np_non_conditional_end .

    ID              reduce using rule 95 (non_conditional_loop -> FOR LPAREN ID np_add_id EQUALS np_add_operator expression np_assign_expression_for TO expression np_non_conditional_limit BY expression RPAREN block np_non_conditional_end .)
    IF              reduce using rule 95 (non_conditional_loop -> FOR LPAREN ID np_add_id EQUALS np_add_operator expression np_assign_expression_for TO expression np_non_conditional_limit BY expression RPAREN block np_non_conditional_end .)
    PRINT           reduce using rule 95 (non_conditional_loop -> FOR LPAREN ID np_add_id EQUALS np_add_operator expression np_assign_expression_for TO expression np_non_conditional_limit BY expression RPAREN block np_non_conditional_end .)
    PRINTLN         reduce using rule 95 (non_conditional_loop -> FOR LPAREN ID np_add_id EQUALS np_add_operator expression np_assign_expression_for TO expression np_non_conditional_limit BY expression RPAREN block np_non_conditional_end .)
    READ            reduce using rule 95 (non_conditional_loop -> FOR LPAREN ID np_add_id EQUALS np_add_operator expression np_assign_expression_for TO expression np_non_conditional_limit BY expression RPAREN block np_non_conditional_end .)
    RETURN          reduce using rule 95 (non_conditional_loop -> FOR LPAREN ID np_add_id EQUALS np_add_operator expression np_assign_expression_for TO expression np_non_conditional_limit BY expression RPAREN block np_non_conditional_end .)
    FOR             reduce using rule 95 (non_conditional_loop -> FOR LPAREN ID np_add_id EQUALS np_add_operator expression np_assign_expression_for TO expression np_non_conditional_limit BY expression RPAREN block np_non_conditional_end .)
    WHILE           reduce using rule 95 (non_conditional_loop -> FOR LPAREN ID np_add_id EQUALS np_add_operator expression np_assign_expression_for TO expression np_non_conditional_limit BY expression RPAREN block np_non_conditional_end .)
    RBRACE          reduce using rule 95 (non_conditional_loop -> FOR LPAREN ID np_add_id EQUALS np_add_operator expression np_assign_expression_for TO expression np_non_conditional_limit BY expression RPAREN block np_non_conditional_end .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for AND in state 240 resolved as shift
WARNING: shift/reduce conflict for OR in state 240 resolved as shift
WARNING: shift/reduce conflict for AND in state 241 resolved as shift
WARNING: shift/reduce conflict for OR in state 241 resolved as shift
