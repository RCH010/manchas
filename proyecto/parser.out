Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID np_create_global SEMI vars program_1
Rule 2     program -> PROGRAM ID np_create_global SEMI program_1
Rule 3     program_1 -> function program_1
Rule 4     program_1 -> main_block
Rule 5     vars -> vars_1
Rule 6     vars_1 -> LET vars_prima_1 vars_1
Rule 7     vars_1 -> LET vars_prima_1
Rule 8     vars_prima_1 -> ID COLON type np_add_vars SEMI
Rule 9     vars_prima_1 -> ID np_add_satck_vars COMMA vars_prima_1
Rule 10    type -> INT type_1
Rule 11    type -> FLOAT type_1
Rule 12    type -> CHAR type_1
Rule 13    type -> BOOL type_1
Rule 14    type_1 -> LBRACKET expression RBRACKET
Rule 15    type_1 -> epsilon
Rule 16    function -> FUNCTION ID COLON return_type np_create_new_scope LPAREN RPAREN block
Rule 17    function -> FUNCTION ID COLON return_type np_create_new_scope LPAREN params RPAREN block
Rule 18    function -> FUNCTION ID COLON return_type np_create_new_scope LPAREN RPAREN vars block
Rule 19    function -> FUNCTION ID COLON return_type np_create_new_scope LPAREN params RPAREN vars block
Rule 20    main_block -> MAIN np_create_main_scope LPAREN RPAREN block
Rule 21    main_block -> MAIN np_create_main_scope LPAREN RPAREN vars block
Rule 22    block -> LBRACE statements RBRACE
Rule 23    return_type -> VOID
Rule 24    return_type -> type
Rule 25    params -> ID COLON type np_add_vars COMMA params
Rule 26    params -> ID COLON type np_add_vars
Rule 27    statements -> assignment statements1
Rule 28    statements -> condition statements1
Rule 29    statements -> writing statements1
Rule 30    statements -> reading statements1
Rule 31    statements -> repetition statements1
Rule 32    statements -> return statements1
Rule 33    statements -> function_call statements1
Rule 34    statements -> expression statements1
Rule 35    statements -> special_functions statements1
Rule 36    special_functions -> mean
Rule 37    special_functions -> median
Rule 38    special_functions -> mode
Rule 39    special_functions -> variance
Rule 40    special_functions -> standard_deviation
Rule 41    statements1 -> statements
Rule 42    statements1 -> epsilon
Rule 43    assignment -> ID EQUALS expression SEMI
Rule 44    assignment -> ID LBRACKET expression RBRACKET EQUALS expression SEMI
Rule 45    condition -> IF LPAREN expression RPAREN block
Rule 46    condition -> IF LPAREN expression RPAREN block ELSE block
Rule 47    expression -> exp
Rule 48    expression -> expression1
Rule 49    expression1 -> exp LT exp
Rule 50    expression1 -> exp LE exp
Rule 51    expression1 -> exp GT exp
Rule 52    expression1 -> exp GE exp
Rule 53    expression1 -> exp EQ exp
Rule 54    expression1 -> exp NE exp
Rule 55    expression1 -> exp AND exp
Rule 56    expression1 -> exp OR exp
Rule 57    exp -> term np_add_quadruple
Rule 58    exp -> term exp_1
Rule 59    exp_1 -> PLUS np_add_operator exp
Rule 60    exp_1 -> MINUS np_add_operator exp
Rule 61    term -> factor
Rule 62    term -> factor term_2
Rule 63    term_2 -> TIMES np_add_operator term
Rule 64    term_2 -> DIVIDE np_add_operator term
Rule 65    factor -> LPAREN np_add_paren expression RPAREN np_pop_paren
Rule 66    factor -> LBRACKET expression RBRACKET
Rule 67    factor -> function_call
Rule 68    factor -> factor_prima_1
Rule 69    factor_prima_1 -> PLUS varcte
Rule 70    factor_prima_1 -> MINUS varcte
Rule 71    factor_prima_1 -> varcte
Rule 72    varcte -> ID np_add_id_quad
Rule 73    varcte -> CTEI np_add_cte_int
Rule 74    varcte -> CTEF np_add_cte_float
Rule 75    varcte -> CTEC np_add_cte_char
Rule 76    varcte -> TRUE np_add_cte_bool
Rule 77    varcte -> FALSE np_add_cte_bool
Rule 78    writing -> PRINT LPAREN writing_1 RPAREN SEMI
Rule 79    writing_1 -> expression COMMA writing_1
Rule 80    writing_1 -> expression
Rule 81    writing_1 -> CTESTRING
Rule 82    writing_1 -> CTESTRING COMMA
Rule 83    reading -> READ LPAREN reading_1 RPAREN SEMI
Rule 84    reading_1 -> ID COMMA reading_1
Rule 85    reading_1 -> ID LBRACKET expression RBRACKET COMMA reading_1
Rule 86    reading_1 -> ID
Rule 87    reading_1 -> ID LBRACKET expression RBRACKET
Rule 88    repetition -> non_conditional_loop
Rule 89    repetition -> conditional_loop
Rule 90    conditional_loop -> WHILE LPAREN expression RPAREN DO block
Rule 91    non_conditional_loop -> FOR LPAREN ID EQUALS expression TO expression BY expression RPAREN block
Rule 92    return -> RETURN expression SEMI
Rule 93    function_call -> ID LPAREN RPAREN SEMI
Rule 94    function_call -> ID LPAREN function_call_1 RPAREN SEMI
Rule 95    function_call -> ID LPAREN function_call_1 RPAREN
Rule 96    function_call -> ID LPAREN RPAREN
Rule 97    function_call_1 -> expression
Rule 98    function_call_1 -> expression COMMA function_call_1
Rule 99    mean -> MEAN LPAREN expression RPAREN SEMI
Rule 100   median -> MEDIAN LPAREN expression RPAREN SEMI
Rule 101   mode -> MODE LPAREN expression RPAREN SEMI
Rule 102   variance -> VARIANCE LPAREN expression RPAREN SEMI
Rule 103   standard_deviation -> STDEV LPAREN expression RPAREN SEMI
Rule 104   epsilon -> <empty>
Rule 105   np_create_global -> <empty>
Rule 106   np_create_main_scope -> <empty>
Rule 107   np_create_new_scope -> <empty>
Rule 108   np_add_satck_vars -> <empty>
Rule 109   np_add_vars -> <empty>
Rule 110   np_add_id_quad -> <empty>
Rule 111   np_add_cte_int -> <empty>
Rule 112   np_add_cte_float -> <empty>
Rule 113   np_add_cte_char -> <empty>
Rule 114   np_add_cte_bool -> <empty>
Rule 115   np_add_operator -> <empty>
Rule 116   np_add_paren -> <empty>
Rule 117   np_pop_paren -> <empty>
Rule 118   np_add_quadruple -> <empty>

Terminals, with rules where they appear

AND                  : 55
BOOL                 : 13
BY                   : 91
CHAR                 : 12
COLON                : 8 16 17 18 19 25 26
COMMA                : 9 25 79 82 84 85 98
CTEC                 : 75
CTEF                 : 74
CTEI                 : 73
CTESTRING            : 81 82
DIVIDE               : 64
DO                   : 90
ELSE                 : 46
EQ                   : 53
EQUALS               : 43 44 91
FALSE                : 77
FLOAT                : 11
FOR                  : 91
FUNCTION             : 16 17 18 19
GE                   : 52
GT                   : 51
ID                   : 1 2 8 9 16 17 18 19 25 26 43 44 72 84 85 86 87 91 93 94 95 96
IF                   : 45 46
INT                  : 10
LBRACE               : 22
LBRACKET             : 14 44 66 85 87
LE                   : 50
LET                  : 6 7
LPAREN               : 16 17 18 19 20 21 45 46 65 78 83 90 91 93 94 95 96 99 100 101 102 103
LT                   : 49
MAIN                 : 20 21
MEAN                 : 99
MEDIAN               : 100
MINUS                : 60 70
MODE                 : 101
NE                   : 54
OR                   : 56
PLUS                 : 59 69
PRINT                : 78
PROGRAM              : 1 2
RBRACE               : 22
RBRACKET             : 14 44 66 85 87
READ                 : 83
RETURN               : 92
RPAREN               : 16 17 18 19 20 21 45 46 65 78 83 90 91 93 94 95 96 99 100 101 102 103
SEMI                 : 1 2 8 43 44 78 83 92 93 94 99 100 101 102 103
STDEV                : 103
TIMES                : 63
TO                   : 91
TRUE                 : 76
VARIANCE             : 102
VOID                 : 23
WHILE                : 90
error                : 

Nonterminals, with rules where they appear

assignment           : 27
block                : 16 17 18 19 20 21 45 46 46 90 91
condition            : 28
conditional_loop     : 89
epsilon              : 15 42
exp                  : 47 49 49 50 50 51 51 52 52 53 53 54 54 55 55 56 56 59 60
exp_1                : 58
expression           : 14 34 43 44 44 45 46 65 66 79 80 85 87 90 91 91 91 92 97 98 99 100 101 102 103
expression1          : 48
factor               : 61 62
factor_prima_1       : 68
function             : 3
function_call        : 33 67
function_call_1      : 94 95 98
main_block           : 4
mean                 : 36
median               : 37
mode                 : 38
non_conditional_loop : 88
np_add_cte_bool      : 76 77
np_add_cte_char      : 75
np_add_cte_float     : 74
np_add_cte_int       : 73
np_add_id_quad       : 72
np_add_operator      : 59 60 63 64
np_add_paren         : 65
np_add_quadruple     : 57
np_add_satck_vars    : 9
np_add_vars          : 8 25 26
np_create_global     : 1 2
np_create_main_scope : 20 21
np_create_new_scope  : 16 17 18 19
np_pop_paren         : 65
params               : 17 19 25
program              : 0
program_1            : 1 2 3
reading              : 30
reading_1            : 83 84 85
repetition           : 31
return               : 32
return_type          : 16 17 18 19
special_functions    : 35
standard_deviation   : 40
statements           : 22 41
statements1          : 27 28 29 30 31 32 33 34 35
term                 : 57 58 63 64
term_2               : 62
type                 : 8 24 25 26
type_1               : 10 11 12 13
varcte               : 69 70 71
variance             : 39
vars                 : 1 18 19 21
vars_1               : 5 6
vars_prima_1         : 6 7 9
writing              : 29
writing_1            : 78 79

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID np_create_global SEMI vars program_1
    (2) program -> . PROGRAM ID np_create_global SEMI program_1

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID np_create_global SEMI vars program_1
    (2) program -> PROGRAM . ID np_create_global SEMI program_1

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . np_create_global SEMI vars program_1
    (2) program -> PROGRAM ID . np_create_global SEMI program_1
    (105) np_create_global -> .

    SEMI            reduce using rule 105 (np_create_global -> .)

    np_create_global               shift and go to state 4

state 4

    (1) program -> PROGRAM ID np_create_global . SEMI vars program_1
    (2) program -> PROGRAM ID np_create_global . SEMI program_1

    SEMI            shift and go to state 5


state 5

    (1) program -> PROGRAM ID np_create_global SEMI . vars program_1
    (2) program -> PROGRAM ID np_create_global SEMI . program_1
    (5) vars -> . vars_1
    (3) program_1 -> . function program_1
    (4) program_1 -> . main_block
    (6) vars_1 -> . LET vars_prima_1 vars_1
    (7) vars_1 -> . LET vars_prima_1
    (16) function -> . FUNCTION ID COLON return_type np_create_new_scope LPAREN RPAREN block
    (17) function -> . FUNCTION ID COLON return_type np_create_new_scope LPAREN params RPAREN block
    (18) function -> . FUNCTION ID COLON return_type np_create_new_scope LPAREN RPAREN vars block
    (19) function -> . FUNCTION ID COLON return_type np_create_new_scope LPAREN params RPAREN vars block
    (20) main_block -> . MAIN np_create_main_scope LPAREN RPAREN block
    (21) main_block -> . MAIN np_create_main_scope LPAREN RPAREN vars block

    LET             shift and go to state 11
    FUNCTION        shift and go to state 12
    MAIN            shift and go to state 13

    vars                           shift and go to state 6
    program_1                      shift and go to state 7
    vars_1                         shift and go to state 8
    function                       shift and go to state 9
    main_block                     shift and go to state 10

state 6

    (1) program -> PROGRAM ID np_create_global SEMI vars . program_1
    (3) program_1 -> . function program_1
    (4) program_1 -> . main_block
    (16) function -> . FUNCTION ID COLON return_type np_create_new_scope LPAREN RPAREN block
    (17) function -> . FUNCTION ID COLON return_type np_create_new_scope LPAREN params RPAREN block
    (18) function -> . FUNCTION ID COLON return_type np_create_new_scope LPAREN RPAREN vars block
    (19) function -> . FUNCTION ID COLON return_type np_create_new_scope LPAREN params RPAREN vars block
    (20) main_block -> . MAIN np_create_main_scope LPAREN RPAREN block
    (21) main_block -> . MAIN np_create_main_scope LPAREN RPAREN vars block

    FUNCTION        shift and go to state 12
    MAIN            shift and go to state 13

    program_1                      shift and go to state 14
    function                       shift and go to state 9
    main_block                     shift and go to state 10

state 7

    (2) program -> PROGRAM ID np_create_global SEMI program_1 .

    $end            reduce using rule 2 (program -> PROGRAM ID np_create_global SEMI program_1 .)


state 8

    (5) vars -> vars_1 .

    FUNCTION        reduce using rule 5 (vars -> vars_1 .)
    MAIN            reduce using rule 5 (vars -> vars_1 .)
    LBRACE          reduce using rule 5 (vars -> vars_1 .)


state 9

    (3) program_1 -> function . program_1
    (3) program_1 -> . function program_1
    (4) program_1 -> . main_block
    (16) function -> . FUNCTION ID COLON return_type np_create_new_scope LPAREN RPAREN block
    (17) function -> . FUNCTION ID COLON return_type np_create_new_scope LPAREN params RPAREN block
    (18) function -> . FUNCTION ID COLON return_type np_create_new_scope LPAREN RPAREN vars block
    (19) function -> . FUNCTION ID COLON return_type np_create_new_scope LPAREN params RPAREN vars block
    (20) main_block -> . MAIN np_create_main_scope LPAREN RPAREN block
    (21) main_block -> . MAIN np_create_main_scope LPAREN RPAREN vars block

    FUNCTION        shift and go to state 12
    MAIN            shift and go to state 13

    function                       shift and go to state 9
    program_1                      shift and go to state 15
    main_block                     shift and go to state 10

state 10

    (4) program_1 -> main_block .

    $end            reduce using rule 4 (program_1 -> main_block .)


state 11

    (6) vars_1 -> LET . vars_prima_1 vars_1
    (7) vars_1 -> LET . vars_prima_1
    (8) vars_prima_1 -> . ID COLON type np_add_vars SEMI
    (9) vars_prima_1 -> . ID np_add_satck_vars COMMA vars_prima_1

    ID              shift and go to state 17

    vars_prima_1                   shift and go to state 16

state 12

    (16) function -> FUNCTION . ID COLON return_type np_create_new_scope LPAREN RPAREN block
    (17) function -> FUNCTION . ID COLON return_type np_create_new_scope LPAREN params RPAREN block
    (18) function -> FUNCTION . ID COLON return_type np_create_new_scope LPAREN RPAREN vars block
    (19) function -> FUNCTION . ID COLON return_type np_create_new_scope LPAREN params RPAREN vars block

    ID              shift and go to state 18


state 13

    (20) main_block -> MAIN . np_create_main_scope LPAREN RPAREN block
    (21) main_block -> MAIN . np_create_main_scope LPAREN RPAREN vars block
    (106) np_create_main_scope -> .

    LPAREN          reduce using rule 106 (np_create_main_scope -> .)

    np_create_main_scope           shift and go to state 19

state 14

    (1) program -> PROGRAM ID np_create_global SEMI vars program_1 .

    $end            reduce using rule 1 (program -> PROGRAM ID np_create_global SEMI vars program_1 .)


state 15

    (3) program_1 -> function program_1 .

    $end            reduce using rule 3 (program_1 -> function program_1 .)


state 16

    (6) vars_1 -> LET vars_prima_1 . vars_1
    (7) vars_1 -> LET vars_prima_1 .
    (6) vars_1 -> . LET vars_prima_1 vars_1
    (7) vars_1 -> . LET vars_prima_1

    FUNCTION        reduce using rule 7 (vars_1 -> LET vars_prima_1 .)
    MAIN            reduce using rule 7 (vars_1 -> LET vars_prima_1 .)
    LBRACE          reduce using rule 7 (vars_1 -> LET vars_prima_1 .)
    LET             shift and go to state 11

    vars_1                         shift and go to state 20

state 17

    (8) vars_prima_1 -> ID . COLON type np_add_vars SEMI
    (9) vars_prima_1 -> ID . np_add_satck_vars COMMA vars_prima_1
    (108) np_add_satck_vars -> .

    COLON           shift and go to state 21
    COMMA           reduce using rule 108 (np_add_satck_vars -> .)

    np_add_satck_vars              shift and go to state 22

state 18

    (16) function -> FUNCTION ID . COLON return_type np_create_new_scope LPAREN RPAREN block
    (17) function -> FUNCTION ID . COLON return_type np_create_new_scope LPAREN params RPAREN block
    (18) function -> FUNCTION ID . COLON return_type np_create_new_scope LPAREN RPAREN vars block
    (19) function -> FUNCTION ID . COLON return_type np_create_new_scope LPAREN params RPAREN vars block

    COLON           shift and go to state 23


state 19

    (20) main_block -> MAIN np_create_main_scope . LPAREN RPAREN block
    (21) main_block -> MAIN np_create_main_scope . LPAREN RPAREN vars block

    LPAREN          shift and go to state 24


state 20

    (6) vars_1 -> LET vars_prima_1 vars_1 .

    FUNCTION        reduce using rule 6 (vars_1 -> LET vars_prima_1 vars_1 .)
    MAIN            reduce using rule 6 (vars_1 -> LET vars_prima_1 vars_1 .)
    LBRACE          reduce using rule 6 (vars_1 -> LET vars_prima_1 vars_1 .)


state 21

    (8) vars_prima_1 -> ID COLON . type np_add_vars SEMI
    (10) type -> . INT type_1
    (11) type -> . FLOAT type_1
    (12) type -> . CHAR type_1
    (13) type -> . BOOL type_1

    INT             shift and go to state 26
    FLOAT           shift and go to state 27
    CHAR            shift and go to state 28
    BOOL            shift and go to state 29

    type                           shift and go to state 25

state 22

    (9) vars_prima_1 -> ID np_add_satck_vars . COMMA vars_prima_1

    COMMA           shift and go to state 30


state 23

    (16) function -> FUNCTION ID COLON . return_type np_create_new_scope LPAREN RPAREN block
    (17) function -> FUNCTION ID COLON . return_type np_create_new_scope LPAREN params RPAREN block
    (18) function -> FUNCTION ID COLON . return_type np_create_new_scope LPAREN RPAREN vars block
    (19) function -> FUNCTION ID COLON . return_type np_create_new_scope LPAREN params RPAREN vars block
    (23) return_type -> . VOID
    (24) return_type -> . type
    (10) type -> . INT type_1
    (11) type -> . FLOAT type_1
    (12) type -> . CHAR type_1
    (13) type -> . BOOL type_1

    VOID            shift and go to state 32
    INT             shift and go to state 26
    FLOAT           shift and go to state 27
    CHAR            shift and go to state 28
    BOOL            shift and go to state 29

    return_type                    shift and go to state 31
    type                           shift and go to state 33

state 24

    (20) main_block -> MAIN np_create_main_scope LPAREN . RPAREN block
    (21) main_block -> MAIN np_create_main_scope LPAREN . RPAREN vars block

    RPAREN          shift and go to state 34


state 25

    (8) vars_prima_1 -> ID COLON type . np_add_vars SEMI
    (109) np_add_vars -> .

    SEMI            reduce using rule 109 (np_add_vars -> .)

    np_add_vars                    shift and go to state 35

state 26

    (10) type -> INT . type_1
    (14) type_1 -> . LBRACKET expression RBRACKET
    (15) type_1 -> . epsilon
    (104) epsilon -> .

    LBRACKET        shift and go to state 37
    SEMI            reduce using rule 104 (epsilon -> .)
    LPAREN          reduce using rule 104 (epsilon -> .)
    COMMA           reduce using rule 104 (epsilon -> .)
    RPAREN          reduce using rule 104 (epsilon -> .)

    type_1                         shift and go to state 36
    epsilon                        shift and go to state 38

state 27

    (11) type -> FLOAT . type_1
    (14) type_1 -> . LBRACKET expression RBRACKET
    (15) type_1 -> . epsilon
    (104) epsilon -> .

    LBRACKET        shift and go to state 37
    SEMI            reduce using rule 104 (epsilon -> .)
    LPAREN          reduce using rule 104 (epsilon -> .)
    COMMA           reduce using rule 104 (epsilon -> .)
    RPAREN          reduce using rule 104 (epsilon -> .)

    type_1                         shift and go to state 39
    epsilon                        shift and go to state 38

state 28

    (12) type -> CHAR . type_1
    (14) type_1 -> . LBRACKET expression RBRACKET
    (15) type_1 -> . epsilon
    (104) epsilon -> .

    LBRACKET        shift and go to state 37
    SEMI            reduce using rule 104 (epsilon -> .)
    LPAREN          reduce using rule 104 (epsilon -> .)
    COMMA           reduce using rule 104 (epsilon -> .)
    RPAREN          reduce using rule 104 (epsilon -> .)

    type_1                         shift and go to state 40
    epsilon                        shift and go to state 38

state 29

    (13) type -> BOOL . type_1
    (14) type_1 -> . LBRACKET expression RBRACKET
    (15) type_1 -> . epsilon
    (104) epsilon -> .

    LBRACKET        shift and go to state 37
    SEMI            reduce using rule 104 (epsilon -> .)
    LPAREN          reduce using rule 104 (epsilon -> .)
    COMMA           reduce using rule 104 (epsilon -> .)
    RPAREN          reduce using rule 104 (epsilon -> .)

    type_1                         shift and go to state 41
    epsilon                        shift and go to state 38

state 30

    (9) vars_prima_1 -> ID np_add_satck_vars COMMA . vars_prima_1
    (8) vars_prima_1 -> . ID COLON type np_add_vars SEMI
    (9) vars_prima_1 -> . ID np_add_satck_vars COMMA vars_prima_1

    ID              shift and go to state 17

    vars_prima_1                   shift and go to state 42

state 31

    (16) function -> FUNCTION ID COLON return_type . np_create_new_scope LPAREN RPAREN block
    (17) function -> FUNCTION ID COLON return_type . np_create_new_scope LPAREN params RPAREN block
    (18) function -> FUNCTION ID COLON return_type . np_create_new_scope LPAREN RPAREN vars block
    (19) function -> FUNCTION ID COLON return_type . np_create_new_scope LPAREN params RPAREN vars block
    (107) np_create_new_scope -> .

    LPAREN          reduce using rule 107 (np_create_new_scope -> .)

    np_create_new_scope            shift and go to state 43

state 32

    (23) return_type -> VOID .

    LPAREN          reduce using rule 23 (return_type -> VOID .)


state 33

    (24) return_type -> type .

    LPAREN          reduce using rule 24 (return_type -> type .)


state 34

    (20) main_block -> MAIN np_create_main_scope LPAREN RPAREN . block
    (21) main_block -> MAIN np_create_main_scope LPAREN RPAREN . vars block
    (22) block -> . LBRACE statements RBRACE
    (5) vars -> . vars_1
    (6) vars_1 -> . LET vars_prima_1 vars_1
    (7) vars_1 -> . LET vars_prima_1

    LBRACE          shift and go to state 46
    LET             shift and go to state 11

    block                          shift and go to state 44
    vars                           shift and go to state 45
    vars_1                         shift and go to state 8

state 35

    (8) vars_prima_1 -> ID COLON type np_add_vars . SEMI

    SEMI            shift and go to state 47


state 36

    (10) type -> INT type_1 .

    SEMI            reduce using rule 10 (type -> INT type_1 .)
    LPAREN          reduce using rule 10 (type -> INT type_1 .)
    COMMA           reduce using rule 10 (type -> INT type_1 .)
    RPAREN          reduce using rule 10 (type -> INT type_1 .)


state 37

    (14) type_1 -> LBRACKET . expression RBRACKET
    (47) expression -> . exp
    (48) expression -> . expression1
    (57) exp -> . term np_add_quadruple
    (58) exp -> . term exp_1
    (49) expression1 -> . exp LT exp
    (50) expression1 -> . exp LE exp
    (51) expression1 -> . exp GT exp
    (52) expression1 -> . exp GE exp
    (53) expression1 -> . exp EQ exp
    (54) expression1 -> . exp NE exp
    (55) expression1 -> . exp AND exp
    (56) expression1 -> . exp OR exp
    (61) term -> . factor
    (62) term -> . factor term_2
    (65) factor -> . LPAREN np_add_paren expression RPAREN np_pop_paren
    (66) factor -> . LBRACKET expression RBRACKET
    (67) factor -> . function_call
    (68) factor -> . factor_prima_1
    (93) function_call -> . ID LPAREN RPAREN SEMI
    (94) function_call -> . ID LPAREN function_call_1 RPAREN SEMI
    (95) function_call -> . ID LPAREN function_call_1 RPAREN
    (96) function_call -> . ID LPAREN RPAREN
    (69) factor_prima_1 -> . PLUS varcte
    (70) factor_prima_1 -> . MINUS varcte
    (71) factor_prima_1 -> . varcte
    (72) varcte -> . ID np_add_id_quad
    (73) varcte -> . CTEI np_add_cte_int
    (74) varcte -> . CTEF np_add_cte_float
    (75) varcte -> . CTEC np_add_cte_char
    (76) varcte -> . TRUE np_add_cte_bool
    (77) varcte -> . FALSE np_add_cte_bool

    LPAREN          shift and go to state 54
    LBRACKET        shift and go to state 48
    ID              shift and go to state 57
    PLUS            shift and go to state 58
    MINUS           shift and go to state 60
    CTEI            shift and go to state 61
    CTEF            shift and go to state 62
    CTEC            shift and go to state 63
    TRUE            shift and go to state 64
    FALSE           shift and go to state 65

    expression                     shift and go to state 49
    exp                            shift and go to state 50
    expression1                    shift and go to state 51
    term                           shift and go to state 52
    factor                         shift and go to state 53
    function_call                  shift and go to state 55
    factor_prima_1                 shift and go to state 56
    varcte                         shift and go to state 59

state 38

    (15) type_1 -> epsilon .

    SEMI            reduce using rule 15 (type_1 -> epsilon .)
    LPAREN          reduce using rule 15 (type_1 -> epsilon .)
    COMMA           reduce using rule 15 (type_1 -> epsilon .)
    RPAREN          reduce using rule 15 (type_1 -> epsilon .)


state 39

    (11) type -> FLOAT type_1 .

    SEMI            reduce using rule 11 (type -> FLOAT type_1 .)
    LPAREN          reduce using rule 11 (type -> FLOAT type_1 .)
    COMMA           reduce using rule 11 (type -> FLOAT type_1 .)
    RPAREN          reduce using rule 11 (type -> FLOAT type_1 .)


state 40

    (12) type -> CHAR type_1 .

    SEMI            reduce using rule 12 (type -> CHAR type_1 .)
    LPAREN          reduce using rule 12 (type -> CHAR type_1 .)
    COMMA           reduce using rule 12 (type -> CHAR type_1 .)
    RPAREN          reduce using rule 12 (type -> CHAR type_1 .)


state 41

    (13) type -> BOOL type_1 .

    SEMI            reduce using rule 13 (type -> BOOL type_1 .)
    LPAREN          reduce using rule 13 (type -> BOOL type_1 .)
    COMMA           reduce using rule 13 (type -> BOOL type_1 .)
    RPAREN          reduce using rule 13 (type -> BOOL type_1 .)


state 42

    (9) vars_prima_1 -> ID np_add_satck_vars COMMA vars_prima_1 .

    LET             reduce using rule 9 (vars_prima_1 -> ID np_add_satck_vars COMMA vars_prima_1 .)
    FUNCTION        reduce using rule 9 (vars_prima_1 -> ID np_add_satck_vars COMMA vars_prima_1 .)
    MAIN            reduce using rule 9 (vars_prima_1 -> ID np_add_satck_vars COMMA vars_prima_1 .)
    LBRACE          reduce using rule 9 (vars_prima_1 -> ID np_add_satck_vars COMMA vars_prima_1 .)


state 43

    (16) function -> FUNCTION ID COLON return_type np_create_new_scope . LPAREN RPAREN block
    (17) function -> FUNCTION ID COLON return_type np_create_new_scope . LPAREN params RPAREN block
    (18) function -> FUNCTION ID COLON return_type np_create_new_scope . LPAREN RPAREN vars block
    (19) function -> FUNCTION ID COLON return_type np_create_new_scope . LPAREN params RPAREN vars block

    LPAREN          shift and go to state 66


state 44

    (20) main_block -> MAIN np_create_main_scope LPAREN RPAREN block .

    $end            reduce using rule 20 (main_block -> MAIN np_create_main_scope LPAREN RPAREN block .)


state 45

    (21) main_block -> MAIN np_create_main_scope LPAREN RPAREN vars . block
    (22) block -> . LBRACE statements RBRACE

    LBRACE          shift and go to state 46

    block                          shift and go to state 67

state 46

    (22) block -> LBRACE . statements RBRACE
    (27) statements -> . assignment statements1
    (28) statements -> . condition statements1
    (29) statements -> . writing statements1
    (30) statements -> . reading statements1
    (31) statements -> . repetition statements1
    (32) statements -> . return statements1
    (33) statements -> . function_call statements1
    (34) statements -> . expression statements1
    (35) statements -> . special_functions statements1
    (43) assignment -> . ID EQUALS expression SEMI
    (44) assignment -> . ID LBRACKET expression RBRACKET EQUALS expression SEMI
    (45) condition -> . IF LPAREN expression RPAREN block
    (46) condition -> . IF LPAREN expression RPAREN block ELSE block
    (78) writing -> . PRINT LPAREN writing_1 RPAREN SEMI
    (83) reading -> . READ LPAREN reading_1 RPAREN SEMI
    (88) repetition -> . non_conditional_loop
    (89) repetition -> . conditional_loop
    (92) return -> . RETURN expression SEMI
    (93) function_call -> . ID LPAREN RPAREN SEMI
    (94) function_call -> . ID LPAREN function_call_1 RPAREN SEMI
    (95) function_call -> . ID LPAREN function_call_1 RPAREN
    (96) function_call -> . ID LPAREN RPAREN
    (47) expression -> . exp
    (48) expression -> . expression1
    (36) special_functions -> . mean
    (37) special_functions -> . median
    (38) special_functions -> . mode
    (39) special_functions -> . variance
    (40) special_functions -> . standard_deviation
    (91) non_conditional_loop -> . FOR LPAREN ID EQUALS expression TO expression BY expression RPAREN block
    (90) conditional_loop -> . WHILE LPAREN expression RPAREN DO block
    (57) exp -> . term np_add_quadruple
    (58) exp -> . term exp_1
    (49) expression1 -> . exp LT exp
    (50) expression1 -> . exp LE exp
    (51) expression1 -> . exp GT exp
    (52) expression1 -> . exp GE exp
    (53) expression1 -> . exp EQ exp
    (54) expression1 -> . exp NE exp
    (55) expression1 -> . exp AND exp
    (56) expression1 -> . exp OR exp
    (99) mean -> . MEAN LPAREN expression RPAREN SEMI
    (100) median -> . MEDIAN LPAREN expression RPAREN SEMI
    (101) mode -> . MODE LPAREN expression RPAREN SEMI
    (102) variance -> . VARIANCE LPAREN expression RPAREN SEMI
    (103) standard_deviation -> . STDEV LPAREN expression RPAREN SEMI
    (61) term -> . factor
    (62) term -> . factor term_2
    (65) factor -> . LPAREN np_add_paren expression RPAREN np_pop_paren
    (66) factor -> . LBRACKET expression RBRACKET
    (67) factor -> . function_call
    (68) factor -> . factor_prima_1
    (69) factor_prima_1 -> . PLUS varcte
    (70) factor_prima_1 -> . MINUS varcte
    (71) factor_prima_1 -> . varcte
    (72) varcte -> . ID np_add_id_quad
    (73) varcte -> . CTEI np_add_cte_int
    (74) varcte -> . CTEF np_add_cte_float
    (75) varcte -> . CTEC np_add_cte_char
    (76) varcte -> . TRUE np_add_cte_bool
    (77) varcte -> . FALSE np_add_cte_bool

    ID              shift and go to state 78
    IF              shift and go to state 79
    PRINT           shift and go to state 80
    READ            shift and go to state 81
    RETURN          shift and go to state 84
    FOR             shift and go to state 90
    WHILE           shift and go to state 91
    MEAN            shift and go to state 92
    MEDIAN          shift and go to state 93
    MODE            shift and go to state 94
    VARIANCE        shift and go to state 95
    STDEV           shift and go to state 96
    LPAREN          shift and go to state 54
    LBRACKET        shift and go to state 48
    PLUS            shift and go to state 58
    MINUS           shift and go to state 60
    CTEI            shift and go to state 61
    CTEF            shift and go to state 62
    CTEC            shift and go to state 63
    TRUE            shift and go to state 64
    FALSE           shift and go to state 65

    statements                     shift and go to state 68
    assignment                     shift and go to state 69
    condition                      shift and go to state 70
    writing                        shift and go to state 71
    reading                        shift and go to state 72
    repetition                     shift and go to state 73
    return                         shift and go to state 74
    function_call                  shift and go to state 75
    expression                     shift and go to state 76
    special_functions              shift and go to state 77
    non_conditional_loop           shift and go to state 82
    conditional_loop               shift and go to state 83
    exp                            shift and go to state 50
    expression1                    shift and go to state 51
    mean                           shift and go to state 85
    median                         shift and go to state 86
    mode                           shift and go to state 87
    variance                       shift and go to state 88
    standard_deviation             shift and go to state 89
    term                           shift and go to state 52
    factor                         shift and go to state 53
    factor_prima_1                 shift and go to state 56
    varcte                         shift and go to state 59

state 47

    (8) vars_prima_1 -> ID COLON type np_add_vars SEMI .

    LET             reduce using rule 8 (vars_prima_1 -> ID COLON type np_add_vars SEMI .)
    FUNCTION        reduce using rule 8 (vars_prima_1 -> ID COLON type np_add_vars SEMI .)
    MAIN            reduce using rule 8 (vars_prima_1 -> ID COLON type np_add_vars SEMI .)
    LBRACE          reduce using rule 8 (vars_prima_1 -> ID COLON type np_add_vars SEMI .)


state 48

    (66) factor -> LBRACKET . expression RBRACKET
    (47) expression -> . exp
    (48) expression -> . expression1
    (57) exp -> . term np_add_quadruple
    (58) exp -> . term exp_1
    (49) expression1 -> . exp LT exp
    (50) expression1 -> . exp LE exp
    (51) expression1 -> . exp GT exp
    (52) expression1 -> . exp GE exp
    (53) expression1 -> . exp EQ exp
    (54) expression1 -> . exp NE exp
    (55) expression1 -> . exp AND exp
    (56) expression1 -> . exp OR exp
    (61) term -> . factor
    (62) term -> . factor term_2
    (65) factor -> . LPAREN np_add_paren expression RPAREN np_pop_paren
    (66) factor -> . LBRACKET expression RBRACKET
    (67) factor -> . function_call
    (68) factor -> . factor_prima_1
    (93) function_call -> . ID LPAREN RPAREN SEMI
    (94) function_call -> . ID LPAREN function_call_1 RPAREN SEMI
    (95) function_call -> . ID LPAREN function_call_1 RPAREN
    (96) function_call -> . ID LPAREN RPAREN
    (69) factor_prima_1 -> . PLUS varcte
    (70) factor_prima_1 -> . MINUS varcte
    (71) factor_prima_1 -> . varcte
    (72) varcte -> . ID np_add_id_quad
    (73) varcte -> . CTEI np_add_cte_int
    (74) varcte -> . CTEF np_add_cte_float
    (75) varcte -> . CTEC np_add_cte_char
    (76) varcte -> . TRUE np_add_cte_bool
    (77) varcte -> . FALSE np_add_cte_bool

    LPAREN          shift and go to state 54
    LBRACKET        shift and go to state 48
    ID              shift and go to state 57
    PLUS            shift and go to state 58
    MINUS           shift and go to state 60
    CTEI            shift and go to state 61
    CTEF            shift and go to state 62
    CTEC            shift and go to state 63
    TRUE            shift and go to state 64
    FALSE           shift and go to state 65

    expression                     shift and go to state 97
    exp                            shift and go to state 50
    expression1                    shift and go to state 51
    term                           shift and go to state 52
    factor                         shift and go to state 53
    function_call                  shift and go to state 55
    factor_prima_1                 shift and go to state 56
    varcte                         shift and go to state 59

state 49

    (14) type_1 -> LBRACKET expression . RBRACKET

    RBRACKET        shift and go to state 98


state 50

    (47) expression -> exp .
    (49) expression1 -> exp . LT exp
    (50) expression1 -> exp . LE exp
    (51) expression1 -> exp . GT exp
    (52) expression1 -> exp . GE exp
    (53) expression1 -> exp . EQ exp
    (54) expression1 -> exp . NE exp
    (55) expression1 -> exp . AND exp
    (56) expression1 -> exp . OR exp

    RBRACKET        reduce using rule 47 (expression -> exp .)
    ID              reduce using rule 47 (expression -> exp .)
    IF              reduce using rule 47 (expression -> exp .)
    PRINT           reduce using rule 47 (expression -> exp .)
    READ            reduce using rule 47 (expression -> exp .)
    RETURN          reduce using rule 47 (expression -> exp .)
    FOR             reduce using rule 47 (expression -> exp .)
    WHILE           reduce using rule 47 (expression -> exp .)
    MEAN            reduce using rule 47 (expression -> exp .)
    MEDIAN          reduce using rule 47 (expression -> exp .)
    MODE            reduce using rule 47 (expression -> exp .)
    VARIANCE        reduce using rule 47 (expression -> exp .)
    STDEV           reduce using rule 47 (expression -> exp .)
    LPAREN          reduce using rule 47 (expression -> exp .)
    LBRACKET        reduce using rule 47 (expression -> exp .)
    PLUS            reduce using rule 47 (expression -> exp .)
    MINUS           reduce using rule 47 (expression -> exp .)
    CTEI            reduce using rule 47 (expression -> exp .)
    CTEF            reduce using rule 47 (expression -> exp .)
    CTEC            reduce using rule 47 (expression -> exp .)
    TRUE            reduce using rule 47 (expression -> exp .)
    FALSE           reduce using rule 47 (expression -> exp .)
    RBRACE          reduce using rule 47 (expression -> exp .)
    SEMI            reduce using rule 47 (expression -> exp .)
    RPAREN          reduce using rule 47 (expression -> exp .)
    COMMA           reduce using rule 47 (expression -> exp .)
    TO              reduce using rule 47 (expression -> exp .)
    BY              reduce using rule 47 (expression -> exp .)
    LT              shift and go to state 99
    LE              shift and go to state 100
    GT              shift and go to state 101
    GE              shift and go to state 102
    EQ              shift and go to state 103
    NE              shift and go to state 104
    AND             shift and go to state 105
    OR              shift and go to state 106


state 51

    (48) expression -> expression1 .

    RBRACKET        reduce using rule 48 (expression -> expression1 .)
    ID              reduce using rule 48 (expression -> expression1 .)
    IF              reduce using rule 48 (expression -> expression1 .)
    PRINT           reduce using rule 48 (expression -> expression1 .)
    READ            reduce using rule 48 (expression -> expression1 .)
    RETURN          reduce using rule 48 (expression -> expression1 .)
    FOR             reduce using rule 48 (expression -> expression1 .)
    WHILE           reduce using rule 48 (expression -> expression1 .)
    MEAN            reduce using rule 48 (expression -> expression1 .)
    MEDIAN          reduce using rule 48 (expression -> expression1 .)
    MODE            reduce using rule 48 (expression -> expression1 .)
    VARIANCE        reduce using rule 48 (expression -> expression1 .)
    STDEV           reduce using rule 48 (expression -> expression1 .)
    LPAREN          reduce using rule 48 (expression -> expression1 .)
    LBRACKET        reduce using rule 48 (expression -> expression1 .)
    PLUS            reduce using rule 48 (expression -> expression1 .)
    MINUS           reduce using rule 48 (expression -> expression1 .)
    CTEI            reduce using rule 48 (expression -> expression1 .)
    CTEF            reduce using rule 48 (expression -> expression1 .)
    CTEC            reduce using rule 48 (expression -> expression1 .)
    TRUE            reduce using rule 48 (expression -> expression1 .)
    FALSE           reduce using rule 48 (expression -> expression1 .)
    RBRACE          reduce using rule 48 (expression -> expression1 .)
    SEMI            reduce using rule 48 (expression -> expression1 .)
    RPAREN          reduce using rule 48 (expression -> expression1 .)
    COMMA           reduce using rule 48 (expression -> expression1 .)
    TO              reduce using rule 48 (expression -> expression1 .)
    BY              reduce using rule 48 (expression -> expression1 .)


state 52

    (57) exp -> term . np_add_quadruple
    (58) exp -> term . exp_1
    (118) np_add_quadruple -> .
    (59) exp_1 -> . PLUS np_add_operator exp
    (60) exp_1 -> . MINUS np_add_operator exp

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    LT              reduce using rule 118 (np_add_quadruple -> .)
    LE              reduce using rule 118 (np_add_quadruple -> .)
    GT              reduce using rule 118 (np_add_quadruple -> .)
    GE              reduce using rule 118 (np_add_quadruple -> .)
    EQ              reduce using rule 118 (np_add_quadruple -> .)
    NE              reduce using rule 118 (np_add_quadruple -> .)
    AND             reduce using rule 118 (np_add_quadruple -> .)
    OR              reduce using rule 118 (np_add_quadruple -> .)
    RBRACKET        reduce using rule 118 (np_add_quadruple -> .)
    ID              reduce using rule 118 (np_add_quadruple -> .)
    IF              reduce using rule 118 (np_add_quadruple -> .)
    PRINT           reduce using rule 118 (np_add_quadruple -> .)
    READ            reduce using rule 118 (np_add_quadruple -> .)
    RETURN          reduce using rule 118 (np_add_quadruple -> .)
    FOR             reduce using rule 118 (np_add_quadruple -> .)
    WHILE           reduce using rule 118 (np_add_quadruple -> .)
    MEAN            reduce using rule 118 (np_add_quadruple -> .)
    MEDIAN          reduce using rule 118 (np_add_quadruple -> .)
    MODE            reduce using rule 118 (np_add_quadruple -> .)
    VARIANCE        reduce using rule 118 (np_add_quadruple -> .)
    STDEV           reduce using rule 118 (np_add_quadruple -> .)
    LPAREN          reduce using rule 118 (np_add_quadruple -> .)
    LBRACKET        reduce using rule 118 (np_add_quadruple -> .)
    CTEI            reduce using rule 118 (np_add_quadruple -> .)
    CTEF            reduce using rule 118 (np_add_quadruple -> .)
    CTEC            reduce using rule 118 (np_add_quadruple -> .)
    TRUE            reduce using rule 118 (np_add_quadruple -> .)
    FALSE           reduce using rule 118 (np_add_quadruple -> .)
    RBRACE          reduce using rule 118 (np_add_quadruple -> .)
    SEMI            reduce using rule 118 (np_add_quadruple -> .)
    RPAREN          reduce using rule 118 (np_add_quadruple -> .)
    COMMA           reduce using rule 118 (np_add_quadruple -> .)
    TO              reduce using rule 118 (np_add_quadruple -> .)
    BY              reduce using rule 118 (np_add_quadruple -> .)
    PLUS            shift and go to state 109
    MINUS           shift and go to state 110

  ! PLUS            [ reduce using rule 118 (np_add_quadruple -> .) ]
  ! MINUS           [ reduce using rule 118 (np_add_quadruple -> .) ]

    np_add_quadruple               shift and go to state 107
    exp_1                          shift and go to state 108

state 53

    (61) term -> factor .
    (62) term -> factor . term_2
    (63) term_2 -> . TIMES np_add_operator term
    (64) term_2 -> . DIVIDE np_add_operator term

    PLUS            reduce using rule 61 (term -> factor .)
    MINUS           reduce using rule 61 (term -> factor .)
    LT              reduce using rule 61 (term -> factor .)
    LE              reduce using rule 61 (term -> factor .)
    GT              reduce using rule 61 (term -> factor .)
    GE              reduce using rule 61 (term -> factor .)
    EQ              reduce using rule 61 (term -> factor .)
    NE              reduce using rule 61 (term -> factor .)
    AND             reduce using rule 61 (term -> factor .)
    OR              reduce using rule 61 (term -> factor .)
    RBRACKET        reduce using rule 61 (term -> factor .)
    ID              reduce using rule 61 (term -> factor .)
    IF              reduce using rule 61 (term -> factor .)
    PRINT           reduce using rule 61 (term -> factor .)
    READ            reduce using rule 61 (term -> factor .)
    RETURN          reduce using rule 61 (term -> factor .)
    FOR             reduce using rule 61 (term -> factor .)
    WHILE           reduce using rule 61 (term -> factor .)
    MEAN            reduce using rule 61 (term -> factor .)
    MEDIAN          reduce using rule 61 (term -> factor .)
    MODE            reduce using rule 61 (term -> factor .)
    VARIANCE        reduce using rule 61 (term -> factor .)
    STDEV           reduce using rule 61 (term -> factor .)
    LPAREN          reduce using rule 61 (term -> factor .)
    LBRACKET        reduce using rule 61 (term -> factor .)
    CTEI            reduce using rule 61 (term -> factor .)
    CTEF            reduce using rule 61 (term -> factor .)
    CTEC            reduce using rule 61 (term -> factor .)
    TRUE            reduce using rule 61 (term -> factor .)
    FALSE           reduce using rule 61 (term -> factor .)
    RBRACE          reduce using rule 61 (term -> factor .)
    SEMI            reduce using rule 61 (term -> factor .)
    RPAREN          reduce using rule 61 (term -> factor .)
    COMMA           reduce using rule 61 (term -> factor .)
    TO              reduce using rule 61 (term -> factor .)
    BY              reduce using rule 61 (term -> factor .)
    TIMES           shift and go to state 112
    DIVIDE          shift and go to state 113

    term_2                         shift and go to state 111

state 54

    (65) factor -> LPAREN . np_add_paren expression RPAREN np_pop_paren
    (116) np_add_paren -> .

    LPAREN          reduce using rule 116 (np_add_paren -> .)
    LBRACKET        reduce using rule 116 (np_add_paren -> .)
    ID              reduce using rule 116 (np_add_paren -> .)
    PLUS            reduce using rule 116 (np_add_paren -> .)
    MINUS           reduce using rule 116 (np_add_paren -> .)
    CTEI            reduce using rule 116 (np_add_paren -> .)
    CTEF            reduce using rule 116 (np_add_paren -> .)
    CTEC            reduce using rule 116 (np_add_paren -> .)
    TRUE            reduce using rule 116 (np_add_paren -> .)
    FALSE           reduce using rule 116 (np_add_paren -> .)

    np_add_paren                   shift and go to state 114

state 55

    (67) factor -> function_call .

    TIMES           reduce using rule 67 (factor -> function_call .)
    DIVIDE          reduce using rule 67 (factor -> function_call .)
    PLUS            reduce using rule 67 (factor -> function_call .)
    MINUS           reduce using rule 67 (factor -> function_call .)
    LT              reduce using rule 67 (factor -> function_call .)
    LE              reduce using rule 67 (factor -> function_call .)
    GT              reduce using rule 67 (factor -> function_call .)
    GE              reduce using rule 67 (factor -> function_call .)
    EQ              reduce using rule 67 (factor -> function_call .)
    NE              reduce using rule 67 (factor -> function_call .)
    AND             reduce using rule 67 (factor -> function_call .)
    OR              reduce using rule 67 (factor -> function_call .)
    RBRACKET        reduce using rule 67 (factor -> function_call .)
    SEMI            reduce using rule 67 (factor -> function_call .)
    ID              reduce using rule 67 (factor -> function_call .)
    IF              reduce using rule 67 (factor -> function_call .)
    PRINT           reduce using rule 67 (factor -> function_call .)
    READ            reduce using rule 67 (factor -> function_call .)
    RETURN          reduce using rule 67 (factor -> function_call .)
    FOR             reduce using rule 67 (factor -> function_call .)
    WHILE           reduce using rule 67 (factor -> function_call .)
    MEAN            reduce using rule 67 (factor -> function_call .)
    MEDIAN          reduce using rule 67 (factor -> function_call .)
    MODE            reduce using rule 67 (factor -> function_call .)
    VARIANCE        reduce using rule 67 (factor -> function_call .)
    STDEV           reduce using rule 67 (factor -> function_call .)
    LPAREN          reduce using rule 67 (factor -> function_call .)
    LBRACKET        reduce using rule 67 (factor -> function_call .)
    CTEI            reduce using rule 67 (factor -> function_call .)
    CTEF            reduce using rule 67 (factor -> function_call .)
    CTEC            reduce using rule 67 (factor -> function_call .)
    TRUE            reduce using rule 67 (factor -> function_call .)
    FALSE           reduce using rule 67 (factor -> function_call .)
    RBRACE          reduce using rule 67 (factor -> function_call .)
    RPAREN          reduce using rule 67 (factor -> function_call .)
    COMMA           reduce using rule 67 (factor -> function_call .)
    TO              reduce using rule 67 (factor -> function_call .)
    BY              reduce using rule 67 (factor -> function_call .)


state 56

    (68) factor -> factor_prima_1 .

    TIMES           reduce using rule 68 (factor -> factor_prima_1 .)
    DIVIDE          reduce using rule 68 (factor -> factor_prima_1 .)
    PLUS            reduce using rule 68 (factor -> factor_prima_1 .)
    MINUS           reduce using rule 68 (factor -> factor_prima_1 .)
    LT              reduce using rule 68 (factor -> factor_prima_1 .)
    LE              reduce using rule 68 (factor -> factor_prima_1 .)
    GT              reduce using rule 68 (factor -> factor_prima_1 .)
    GE              reduce using rule 68 (factor -> factor_prima_1 .)
    EQ              reduce using rule 68 (factor -> factor_prima_1 .)
    NE              reduce using rule 68 (factor -> factor_prima_1 .)
    AND             reduce using rule 68 (factor -> factor_prima_1 .)
    OR              reduce using rule 68 (factor -> factor_prima_1 .)
    RBRACKET        reduce using rule 68 (factor -> factor_prima_1 .)
    ID              reduce using rule 68 (factor -> factor_prima_1 .)
    IF              reduce using rule 68 (factor -> factor_prima_1 .)
    PRINT           reduce using rule 68 (factor -> factor_prima_1 .)
    READ            reduce using rule 68 (factor -> factor_prima_1 .)
    RETURN          reduce using rule 68 (factor -> factor_prima_1 .)
    FOR             reduce using rule 68 (factor -> factor_prima_1 .)
    WHILE           reduce using rule 68 (factor -> factor_prima_1 .)
    MEAN            reduce using rule 68 (factor -> factor_prima_1 .)
    MEDIAN          reduce using rule 68 (factor -> factor_prima_1 .)
    MODE            reduce using rule 68 (factor -> factor_prima_1 .)
    VARIANCE        reduce using rule 68 (factor -> factor_prima_1 .)
    STDEV           reduce using rule 68 (factor -> factor_prima_1 .)
    LPAREN          reduce using rule 68 (factor -> factor_prima_1 .)
    LBRACKET        reduce using rule 68 (factor -> factor_prima_1 .)
    CTEI            reduce using rule 68 (factor -> factor_prima_1 .)
    CTEF            reduce using rule 68 (factor -> factor_prima_1 .)
    CTEC            reduce using rule 68 (factor -> factor_prima_1 .)
    TRUE            reduce using rule 68 (factor -> factor_prima_1 .)
    FALSE           reduce using rule 68 (factor -> factor_prima_1 .)
    RBRACE          reduce using rule 68 (factor -> factor_prima_1 .)
    SEMI            reduce using rule 68 (factor -> factor_prima_1 .)
    RPAREN          reduce using rule 68 (factor -> factor_prima_1 .)
    COMMA           reduce using rule 68 (factor -> factor_prima_1 .)
    TO              reduce using rule 68 (factor -> factor_prima_1 .)
    BY              reduce using rule 68 (factor -> factor_prima_1 .)


state 57

    (93) function_call -> ID . LPAREN RPAREN SEMI
    (94) function_call -> ID . LPAREN function_call_1 RPAREN SEMI
    (95) function_call -> ID . LPAREN function_call_1 RPAREN
    (96) function_call -> ID . LPAREN RPAREN
    (72) varcte -> ID . np_add_id_quad
    (110) np_add_id_quad -> .

  ! shift/reduce conflict for LPAREN resolved as shift
    LPAREN          shift and go to state 115
    TIMES           reduce using rule 110 (np_add_id_quad -> .)
    DIVIDE          reduce using rule 110 (np_add_id_quad -> .)
    PLUS            reduce using rule 110 (np_add_id_quad -> .)
    MINUS           reduce using rule 110 (np_add_id_quad -> .)
    LT              reduce using rule 110 (np_add_id_quad -> .)
    LE              reduce using rule 110 (np_add_id_quad -> .)
    GT              reduce using rule 110 (np_add_id_quad -> .)
    GE              reduce using rule 110 (np_add_id_quad -> .)
    EQ              reduce using rule 110 (np_add_id_quad -> .)
    NE              reduce using rule 110 (np_add_id_quad -> .)
    AND             reduce using rule 110 (np_add_id_quad -> .)
    OR              reduce using rule 110 (np_add_id_quad -> .)
    RBRACKET        reduce using rule 110 (np_add_id_quad -> .)
    SEMI            reduce using rule 110 (np_add_id_quad -> .)
    ID              reduce using rule 110 (np_add_id_quad -> .)
    IF              reduce using rule 110 (np_add_id_quad -> .)
    PRINT           reduce using rule 110 (np_add_id_quad -> .)
    READ            reduce using rule 110 (np_add_id_quad -> .)
    RETURN          reduce using rule 110 (np_add_id_quad -> .)
    FOR             reduce using rule 110 (np_add_id_quad -> .)
    WHILE           reduce using rule 110 (np_add_id_quad -> .)
    MEAN            reduce using rule 110 (np_add_id_quad -> .)
    MEDIAN          reduce using rule 110 (np_add_id_quad -> .)
    MODE            reduce using rule 110 (np_add_id_quad -> .)
    VARIANCE        reduce using rule 110 (np_add_id_quad -> .)
    STDEV           reduce using rule 110 (np_add_id_quad -> .)
    LBRACKET        reduce using rule 110 (np_add_id_quad -> .)
    CTEI            reduce using rule 110 (np_add_id_quad -> .)
    CTEF            reduce using rule 110 (np_add_id_quad -> .)
    CTEC            reduce using rule 110 (np_add_id_quad -> .)
    TRUE            reduce using rule 110 (np_add_id_quad -> .)
    FALSE           reduce using rule 110 (np_add_id_quad -> .)
    RBRACE          reduce using rule 110 (np_add_id_quad -> .)
    RPAREN          reduce using rule 110 (np_add_id_quad -> .)
    COMMA           reduce using rule 110 (np_add_id_quad -> .)
    TO              reduce using rule 110 (np_add_id_quad -> .)
    BY              reduce using rule 110 (np_add_id_quad -> .)

  ! LPAREN          [ reduce using rule 110 (np_add_id_quad -> .) ]

    np_add_id_quad                 shift and go to state 116

state 58

    (69) factor_prima_1 -> PLUS . varcte
    (72) varcte -> . ID np_add_id_quad
    (73) varcte -> . CTEI np_add_cte_int
    (74) varcte -> . CTEF np_add_cte_float
    (75) varcte -> . CTEC np_add_cte_char
    (76) varcte -> . TRUE np_add_cte_bool
    (77) varcte -> . FALSE np_add_cte_bool

    ID              shift and go to state 118
    CTEI            shift and go to state 61
    CTEF            shift and go to state 62
    CTEC            shift and go to state 63
    TRUE            shift and go to state 64
    FALSE           shift and go to state 65

    varcte                         shift and go to state 117

state 59

    (71) factor_prima_1 -> varcte .

    TIMES           reduce using rule 71 (factor_prima_1 -> varcte .)
    DIVIDE          reduce using rule 71 (factor_prima_1 -> varcte .)
    PLUS            reduce using rule 71 (factor_prima_1 -> varcte .)
    MINUS           reduce using rule 71 (factor_prima_1 -> varcte .)
    LT              reduce using rule 71 (factor_prima_1 -> varcte .)
    LE              reduce using rule 71 (factor_prima_1 -> varcte .)
    GT              reduce using rule 71 (factor_prima_1 -> varcte .)
    GE              reduce using rule 71 (factor_prima_1 -> varcte .)
    EQ              reduce using rule 71 (factor_prima_1 -> varcte .)
    NE              reduce using rule 71 (factor_prima_1 -> varcte .)
    AND             reduce using rule 71 (factor_prima_1 -> varcte .)
    OR              reduce using rule 71 (factor_prima_1 -> varcte .)
    RBRACKET        reduce using rule 71 (factor_prima_1 -> varcte .)
    ID              reduce using rule 71 (factor_prima_1 -> varcte .)
    IF              reduce using rule 71 (factor_prima_1 -> varcte .)
    PRINT           reduce using rule 71 (factor_prima_1 -> varcte .)
    READ            reduce using rule 71 (factor_prima_1 -> varcte .)
    RETURN          reduce using rule 71 (factor_prima_1 -> varcte .)
    FOR             reduce using rule 71 (factor_prima_1 -> varcte .)
    WHILE           reduce using rule 71 (factor_prima_1 -> varcte .)
    MEAN            reduce using rule 71 (factor_prima_1 -> varcte .)
    MEDIAN          reduce using rule 71 (factor_prima_1 -> varcte .)
    MODE            reduce using rule 71 (factor_prima_1 -> varcte .)
    VARIANCE        reduce using rule 71 (factor_prima_1 -> varcte .)
    STDEV           reduce using rule 71 (factor_prima_1 -> varcte .)
    LPAREN          reduce using rule 71 (factor_prima_1 -> varcte .)
    LBRACKET        reduce using rule 71 (factor_prima_1 -> varcte .)
    CTEI            reduce using rule 71 (factor_prima_1 -> varcte .)
    CTEF            reduce using rule 71 (factor_prima_1 -> varcte .)
    CTEC            reduce using rule 71 (factor_prima_1 -> varcte .)
    TRUE            reduce using rule 71 (factor_prima_1 -> varcte .)
    FALSE           reduce using rule 71 (factor_prima_1 -> varcte .)
    RBRACE          reduce using rule 71 (factor_prima_1 -> varcte .)
    SEMI            reduce using rule 71 (factor_prima_1 -> varcte .)
    RPAREN          reduce using rule 71 (factor_prima_1 -> varcte .)
    COMMA           reduce using rule 71 (factor_prima_1 -> varcte .)
    TO              reduce using rule 71 (factor_prima_1 -> varcte .)
    BY              reduce using rule 71 (factor_prima_1 -> varcte .)


state 60

    (70) factor_prima_1 -> MINUS . varcte
    (72) varcte -> . ID np_add_id_quad
    (73) varcte -> . CTEI np_add_cte_int
    (74) varcte -> . CTEF np_add_cte_float
    (75) varcte -> . CTEC np_add_cte_char
    (76) varcte -> . TRUE np_add_cte_bool
    (77) varcte -> . FALSE np_add_cte_bool

    ID              shift and go to state 118
    CTEI            shift and go to state 61
    CTEF            shift and go to state 62
    CTEC            shift and go to state 63
    TRUE            shift and go to state 64
    FALSE           shift and go to state 65

    varcte                         shift and go to state 119

state 61

    (73) varcte -> CTEI . np_add_cte_int
    (111) np_add_cte_int -> .

    TIMES           reduce using rule 111 (np_add_cte_int -> .)
    DIVIDE          reduce using rule 111 (np_add_cte_int -> .)
    PLUS            reduce using rule 111 (np_add_cte_int -> .)
    MINUS           reduce using rule 111 (np_add_cte_int -> .)
    LT              reduce using rule 111 (np_add_cte_int -> .)
    LE              reduce using rule 111 (np_add_cte_int -> .)
    GT              reduce using rule 111 (np_add_cte_int -> .)
    GE              reduce using rule 111 (np_add_cte_int -> .)
    EQ              reduce using rule 111 (np_add_cte_int -> .)
    NE              reduce using rule 111 (np_add_cte_int -> .)
    AND             reduce using rule 111 (np_add_cte_int -> .)
    OR              reduce using rule 111 (np_add_cte_int -> .)
    RBRACKET        reduce using rule 111 (np_add_cte_int -> .)
    ID              reduce using rule 111 (np_add_cte_int -> .)
    IF              reduce using rule 111 (np_add_cte_int -> .)
    PRINT           reduce using rule 111 (np_add_cte_int -> .)
    READ            reduce using rule 111 (np_add_cte_int -> .)
    RETURN          reduce using rule 111 (np_add_cte_int -> .)
    FOR             reduce using rule 111 (np_add_cte_int -> .)
    WHILE           reduce using rule 111 (np_add_cte_int -> .)
    MEAN            reduce using rule 111 (np_add_cte_int -> .)
    MEDIAN          reduce using rule 111 (np_add_cte_int -> .)
    MODE            reduce using rule 111 (np_add_cte_int -> .)
    VARIANCE        reduce using rule 111 (np_add_cte_int -> .)
    STDEV           reduce using rule 111 (np_add_cte_int -> .)
    LPAREN          reduce using rule 111 (np_add_cte_int -> .)
    LBRACKET        reduce using rule 111 (np_add_cte_int -> .)
    CTEI            reduce using rule 111 (np_add_cte_int -> .)
    CTEF            reduce using rule 111 (np_add_cte_int -> .)
    CTEC            reduce using rule 111 (np_add_cte_int -> .)
    TRUE            reduce using rule 111 (np_add_cte_int -> .)
    FALSE           reduce using rule 111 (np_add_cte_int -> .)
    RBRACE          reduce using rule 111 (np_add_cte_int -> .)
    SEMI            reduce using rule 111 (np_add_cte_int -> .)
    RPAREN          reduce using rule 111 (np_add_cte_int -> .)
    COMMA           reduce using rule 111 (np_add_cte_int -> .)
    TO              reduce using rule 111 (np_add_cte_int -> .)
    BY              reduce using rule 111 (np_add_cte_int -> .)

    np_add_cte_int                 shift and go to state 120

state 62

    (74) varcte -> CTEF . np_add_cte_float
    (112) np_add_cte_float -> .

    TIMES           reduce using rule 112 (np_add_cte_float -> .)
    DIVIDE          reduce using rule 112 (np_add_cte_float -> .)
    PLUS            reduce using rule 112 (np_add_cte_float -> .)
    MINUS           reduce using rule 112 (np_add_cte_float -> .)
    LT              reduce using rule 112 (np_add_cte_float -> .)
    LE              reduce using rule 112 (np_add_cte_float -> .)
    GT              reduce using rule 112 (np_add_cte_float -> .)
    GE              reduce using rule 112 (np_add_cte_float -> .)
    EQ              reduce using rule 112 (np_add_cte_float -> .)
    NE              reduce using rule 112 (np_add_cte_float -> .)
    AND             reduce using rule 112 (np_add_cte_float -> .)
    OR              reduce using rule 112 (np_add_cte_float -> .)
    RBRACKET        reduce using rule 112 (np_add_cte_float -> .)
    ID              reduce using rule 112 (np_add_cte_float -> .)
    IF              reduce using rule 112 (np_add_cte_float -> .)
    PRINT           reduce using rule 112 (np_add_cte_float -> .)
    READ            reduce using rule 112 (np_add_cte_float -> .)
    RETURN          reduce using rule 112 (np_add_cte_float -> .)
    FOR             reduce using rule 112 (np_add_cte_float -> .)
    WHILE           reduce using rule 112 (np_add_cte_float -> .)
    MEAN            reduce using rule 112 (np_add_cte_float -> .)
    MEDIAN          reduce using rule 112 (np_add_cte_float -> .)
    MODE            reduce using rule 112 (np_add_cte_float -> .)
    VARIANCE        reduce using rule 112 (np_add_cte_float -> .)
    STDEV           reduce using rule 112 (np_add_cte_float -> .)
    LPAREN          reduce using rule 112 (np_add_cte_float -> .)
    LBRACKET        reduce using rule 112 (np_add_cte_float -> .)
    CTEI            reduce using rule 112 (np_add_cte_float -> .)
    CTEF            reduce using rule 112 (np_add_cte_float -> .)
    CTEC            reduce using rule 112 (np_add_cte_float -> .)
    TRUE            reduce using rule 112 (np_add_cte_float -> .)
    FALSE           reduce using rule 112 (np_add_cte_float -> .)
    RBRACE          reduce using rule 112 (np_add_cte_float -> .)
    SEMI            reduce using rule 112 (np_add_cte_float -> .)
    RPAREN          reduce using rule 112 (np_add_cte_float -> .)
    COMMA           reduce using rule 112 (np_add_cte_float -> .)
    TO              reduce using rule 112 (np_add_cte_float -> .)
    BY              reduce using rule 112 (np_add_cte_float -> .)

    np_add_cte_float               shift and go to state 121

state 63

    (75) varcte -> CTEC . np_add_cte_char
    (113) np_add_cte_char -> .

    TIMES           reduce using rule 113 (np_add_cte_char -> .)
    DIVIDE          reduce using rule 113 (np_add_cte_char -> .)
    PLUS            reduce using rule 113 (np_add_cte_char -> .)
    MINUS           reduce using rule 113 (np_add_cte_char -> .)
    LT              reduce using rule 113 (np_add_cte_char -> .)
    LE              reduce using rule 113 (np_add_cte_char -> .)
    GT              reduce using rule 113 (np_add_cte_char -> .)
    GE              reduce using rule 113 (np_add_cte_char -> .)
    EQ              reduce using rule 113 (np_add_cte_char -> .)
    NE              reduce using rule 113 (np_add_cte_char -> .)
    AND             reduce using rule 113 (np_add_cte_char -> .)
    OR              reduce using rule 113 (np_add_cte_char -> .)
    RBRACKET        reduce using rule 113 (np_add_cte_char -> .)
    ID              reduce using rule 113 (np_add_cte_char -> .)
    IF              reduce using rule 113 (np_add_cte_char -> .)
    PRINT           reduce using rule 113 (np_add_cte_char -> .)
    READ            reduce using rule 113 (np_add_cte_char -> .)
    RETURN          reduce using rule 113 (np_add_cte_char -> .)
    FOR             reduce using rule 113 (np_add_cte_char -> .)
    WHILE           reduce using rule 113 (np_add_cte_char -> .)
    MEAN            reduce using rule 113 (np_add_cte_char -> .)
    MEDIAN          reduce using rule 113 (np_add_cte_char -> .)
    MODE            reduce using rule 113 (np_add_cte_char -> .)
    VARIANCE        reduce using rule 113 (np_add_cte_char -> .)
    STDEV           reduce using rule 113 (np_add_cte_char -> .)
    LPAREN          reduce using rule 113 (np_add_cte_char -> .)
    LBRACKET        reduce using rule 113 (np_add_cte_char -> .)
    CTEI            reduce using rule 113 (np_add_cte_char -> .)
    CTEF            reduce using rule 113 (np_add_cte_char -> .)
    CTEC            reduce using rule 113 (np_add_cte_char -> .)
    TRUE            reduce using rule 113 (np_add_cte_char -> .)
    FALSE           reduce using rule 113 (np_add_cte_char -> .)
    RBRACE          reduce using rule 113 (np_add_cte_char -> .)
    SEMI            reduce using rule 113 (np_add_cte_char -> .)
    RPAREN          reduce using rule 113 (np_add_cte_char -> .)
    COMMA           reduce using rule 113 (np_add_cte_char -> .)
    TO              reduce using rule 113 (np_add_cte_char -> .)
    BY              reduce using rule 113 (np_add_cte_char -> .)

    np_add_cte_char                shift and go to state 122

state 64

    (76) varcte -> TRUE . np_add_cte_bool
    (114) np_add_cte_bool -> .

    TIMES           reduce using rule 114 (np_add_cte_bool -> .)
    DIVIDE          reduce using rule 114 (np_add_cte_bool -> .)
    PLUS            reduce using rule 114 (np_add_cte_bool -> .)
    MINUS           reduce using rule 114 (np_add_cte_bool -> .)
    LT              reduce using rule 114 (np_add_cte_bool -> .)
    LE              reduce using rule 114 (np_add_cte_bool -> .)
    GT              reduce using rule 114 (np_add_cte_bool -> .)
    GE              reduce using rule 114 (np_add_cte_bool -> .)
    EQ              reduce using rule 114 (np_add_cte_bool -> .)
    NE              reduce using rule 114 (np_add_cte_bool -> .)
    AND             reduce using rule 114 (np_add_cte_bool -> .)
    OR              reduce using rule 114 (np_add_cte_bool -> .)
    RBRACKET        reduce using rule 114 (np_add_cte_bool -> .)
    ID              reduce using rule 114 (np_add_cte_bool -> .)
    IF              reduce using rule 114 (np_add_cte_bool -> .)
    PRINT           reduce using rule 114 (np_add_cte_bool -> .)
    READ            reduce using rule 114 (np_add_cte_bool -> .)
    RETURN          reduce using rule 114 (np_add_cte_bool -> .)
    FOR             reduce using rule 114 (np_add_cte_bool -> .)
    WHILE           reduce using rule 114 (np_add_cte_bool -> .)
    MEAN            reduce using rule 114 (np_add_cte_bool -> .)
    MEDIAN          reduce using rule 114 (np_add_cte_bool -> .)
    MODE            reduce using rule 114 (np_add_cte_bool -> .)
    VARIANCE        reduce using rule 114 (np_add_cte_bool -> .)
    STDEV           reduce using rule 114 (np_add_cte_bool -> .)
    LPAREN          reduce using rule 114 (np_add_cte_bool -> .)
    LBRACKET        reduce using rule 114 (np_add_cte_bool -> .)
    CTEI            reduce using rule 114 (np_add_cte_bool -> .)
    CTEF            reduce using rule 114 (np_add_cte_bool -> .)
    CTEC            reduce using rule 114 (np_add_cte_bool -> .)
    TRUE            reduce using rule 114 (np_add_cte_bool -> .)
    FALSE           reduce using rule 114 (np_add_cte_bool -> .)
    RBRACE          reduce using rule 114 (np_add_cte_bool -> .)
    SEMI            reduce using rule 114 (np_add_cte_bool -> .)
    RPAREN          reduce using rule 114 (np_add_cte_bool -> .)
    COMMA           reduce using rule 114 (np_add_cte_bool -> .)
    TO              reduce using rule 114 (np_add_cte_bool -> .)
    BY              reduce using rule 114 (np_add_cte_bool -> .)

    np_add_cte_bool                shift and go to state 123

state 65

    (77) varcte -> FALSE . np_add_cte_bool
    (114) np_add_cte_bool -> .

    TIMES           reduce using rule 114 (np_add_cte_bool -> .)
    DIVIDE          reduce using rule 114 (np_add_cte_bool -> .)
    PLUS            reduce using rule 114 (np_add_cte_bool -> .)
    MINUS           reduce using rule 114 (np_add_cte_bool -> .)
    LT              reduce using rule 114 (np_add_cte_bool -> .)
    LE              reduce using rule 114 (np_add_cte_bool -> .)
    GT              reduce using rule 114 (np_add_cte_bool -> .)
    GE              reduce using rule 114 (np_add_cte_bool -> .)
    EQ              reduce using rule 114 (np_add_cte_bool -> .)
    NE              reduce using rule 114 (np_add_cte_bool -> .)
    AND             reduce using rule 114 (np_add_cte_bool -> .)
    OR              reduce using rule 114 (np_add_cte_bool -> .)
    RBRACKET        reduce using rule 114 (np_add_cte_bool -> .)
    ID              reduce using rule 114 (np_add_cte_bool -> .)
    IF              reduce using rule 114 (np_add_cte_bool -> .)
    PRINT           reduce using rule 114 (np_add_cte_bool -> .)
    READ            reduce using rule 114 (np_add_cte_bool -> .)
    RETURN          reduce using rule 114 (np_add_cte_bool -> .)
    FOR             reduce using rule 114 (np_add_cte_bool -> .)
    WHILE           reduce using rule 114 (np_add_cte_bool -> .)
    MEAN            reduce using rule 114 (np_add_cte_bool -> .)
    MEDIAN          reduce using rule 114 (np_add_cte_bool -> .)
    MODE            reduce using rule 114 (np_add_cte_bool -> .)
    VARIANCE        reduce using rule 114 (np_add_cte_bool -> .)
    STDEV           reduce using rule 114 (np_add_cte_bool -> .)
    LPAREN          reduce using rule 114 (np_add_cte_bool -> .)
    LBRACKET        reduce using rule 114 (np_add_cte_bool -> .)
    CTEI            reduce using rule 114 (np_add_cte_bool -> .)
    CTEF            reduce using rule 114 (np_add_cte_bool -> .)
    CTEC            reduce using rule 114 (np_add_cte_bool -> .)
    TRUE            reduce using rule 114 (np_add_cte_bool -> .)
    FALSE           reduce using rule 114 (np_add_cte_bool -> .)
    RBRACE          reduce using rule 114 (np_add_cte_bool -> .)
    SEMI            reduce using rule 114 (np_add_cte_bool -> .)
    RPAREN          reduce using rule 114 (np_add_cte_bool -> .)
    COMMA           reduce using rule 114 (np_add_cte_bool -> .)
    TO              reduce using rule 114 (np_add_cte_bool -> .)
    BY              reduce using rule 114 (np_add_cte_bool -> .)

    np_add_cte_bool                shift and go to state 124

state 66

    (16) function -> FUNCTION ID COLON return_type np_create_new_scope LPAREN . RPAREN block
    (17) function -> FUNCTION ID COLON return_type np_create_new_scope LPAREN . params RPAREN block
    (18) function -> FUNCTION ID COLON return_type np_create_new_scope LPAREN . RPAREN vars block
    (19) function -> FUNCTION ID COLON return_type np_create_new_scope LPAREN . params RPAREN vars block
    (25) params -> . ID COLON type np_add_vars COMMA params
    (26) params -> . ID COLON type np_add_vars

    RPAREN          shift and go to state 126
    ID              shift and go to state 125

    params                         shift and go to state 127

state 67

    (21) main_block -> MAIN np_create_main_scope LPAREN RPAREN vars block .

    $end            reduce using rule 21 (main_block -> MAIN np_create_main_scope LPAREN RPAREN vars block .)


state 68

    (22) block -> LBRACE statements . RBRACE

    RBRACE          shift and go to state 128


state 69

    (27) statements -> assignment . statements1
    (41) statements1 -> . statements
    (42) statements1 -> . epsilon
    (27) statements -> . assignment statements1
    (28) statements -> . condition statements1
    (29) statements -> . writing statements1
    (30) statements -> . reading statements1
    (31) statements -> . repetition statements1
    (32) statements -> . return statements1
    (33) statements -> . function_call statements1
    (34) statements -> . expression statements1
    (35) statements -> . special_functions statements1
    (104) epsilon -> .
    (43) assignment -> . ID EQUALS expression SEMI
    (44) assignment -> . ID LBRACKET expression RBRACKET EQUALS expression SEMI
    (45) condition -> . IF LPAREN expression RPAREN block
    (46) condition -> . IF LPAREN expression RPAREN block ELSE block
    (78) writing -> . PRINT LPAREN writing_1 RPAREN SEMI
    (83) reading -> . READ LPAREN reading_1 RPAREN SEMI
    (88) repetition -> . non_conditional_loop
    (89) repetition -> . conditional_loop
    (92) return -> . RETURN expression SEMI
    (93) function_call -> . ID LPAREN RPAREN SEMI
    (94) function_call -> . ID LPAREN function_call_1 RPAREN SEMI
    (95) function_call -> . ID LPAREN function_call_1 RPAREN
    (96) function_call -> . ID LPAREN RPAREN
    (47) expression -> . exp
    (48) expression -> . expression1
    (36) special_functions -> . mean
    (37) special_functions -> . median
    (38) special_functions -> . mode
    (39) special_functions -> . variance
    (40) special_functions -> . standard_deviation
    (91) non_conditional_loop -> . FOR LPAREN ID EQUALS expression TO expression BY expression RPAREN block
    (90) conditional_loop -> . WHILE LPAREN expression RPAREN DO block
    (57) exp -> . term np_add_quadruple
    (58) exp -> . term exp_1
    (49) expression1 -> . exp LT exp
    (50) expression1 -> . exp LE exp
    (51) expression1 -> . exp GT exp
    (52) expression1 -> . exp GE exp
    (53) expression1 -> . exp EQ exp
    (54) expression1 -> . exp NE exp
    (55) expression1 -> . exp AND exp
    (56) expression1 -> . exp OR exp
    (99) mean -> . MEAN LPAREN expression RPAREN SEMI
    (100) median -> . MEDIAN LPAREN expression RPAREN SEMI
    (101) mode -> . MODE LPAREN expression RPAREN SEMI
    (102) variance -> . VARIANCE LPAREN expression RPAREN SEMI
    (103) standard_deviation -> . STDEV LPAREN expression RPAREN SEMI
    (61) term -> . factor
    (62) term -> . factor term_2
    (65) factor -> . LPAREN np_add_paren expression RPAREN np_pop_paren
    (66) factor -> . LBRACKET expression RBRACKET
    (67) factor -> . function_call
    (68) factor -> . factor_prima_1
    (69) factor_prima_1 -> . PLUS varcte
    (70) factor_prima_1 -> . MINUS varcte
    (71) factor_prima_1 -> . varcte
    (72) varcte -> . ID np_add_id_quad
    (73) varcte -> . CTEI np_add_cte_int
    (74) varcte -> . CTEF np_add_cte_float
    (75) varcte -> . CTEC np_add_cte_char
    (76) varcte -> . TRUE np_add_cte_bool
    (77) varcte -> . FALSE np_add_cte_bool

    RBRACE          reduce using rule 104 (epsilon -> .)
    ID              shift and go to state 78
    IF              shift and go to state 79
    PRINT           shift and go to state 80
    READ            shift and go to state 81
    RETURN          shift and go to state 84
    FOR             shift and go to state 90
    WHILE           shift and go to state 91
    MEAN            shift and go to state 92
    MEDIAN          shift and go to state 93
    MODE            shift and go to state 94
    VARIANCE        shift and go to state 95
    STDEV           shift and go to state 96
    LPAREN          shift and go to state 54
    LBRACKET        shift and go to state 48
    PLUS            shift and go to state 58
    MINUS           shift and go to state 60
    CTEI            shift and go to state 61
    CTEF            shift and go to state 62
    CTEC            shift and go to state 63
    TRUE            shift and go to state 64
    FALSE           shift and go to state 65

    assignment                     shift and go to state 69
    statements1                    shift and go to state 129
    statements                     shift and go to state 130
    epsilon                        shift and go to state 131
    condition                      shift and go to state 70
    writing                        shift and go to state 71
    reading                        shift and go to state 72
    repetition                     shift and go to state 73
    return                         shift and go to state 74
    function_call                  shift and go to state 75
    expression                     shift and go to state 76
    special_functions              shift and go to state 77
    non_conditional_loop           shift and go to state 82
    conditional_loop               shift and go to state 83
    exp                            shift and go to state 50
    expression1                    shift and go to state 51
    mean                           shift and go to state 85
    median                         shift and go to state 86
    mode                           shift and go to state 87
    variance                       shift and go to state 88
    standard_deviation             shift and go to state 89
    term                           shift and go to state 52
    factor                         shift and go to state 53
    factor_prima_1                 shift and go to state 56
    varcte                         shift and go to state 59

state 70

    (28) statements -> condition . statements1
    (41) statements1 -> . statements
    (42) statements1 -> . epsilon
    (27) statements -> . assignment statements1
    (28) statements -> . condition statements1
    (29) statements -> . writing statements1
    (30) statements -> . reading statements1
    (31) statements -> . repetition statements1
    (32) statements -> . return statements1
    (33) statements -> . function_call statements1
    (34) statements -> . expression statements1
    (35) statements -> . special_functions statements1
    (104) epsilon -> .
    (43) assignment -> . ID EQUALS expression SEMI
    (44) assignment -> . ID LBRACKET expression RBRACKET EQUALS expression SEMI
    (45) condition -> . IF LPAREN expression RPAREN block
    (46) condition -> . IF LPAREN expression RPAREN block ELSE block
    (78) writing -> . PRINT LPAREN writing_1 RPAREN SEMI
    (83) reading -> . READ LPAREN reading_1 RPAREN SEMI
    (88) repetition -> . non_conditional_loop
    (89) repetition -> . conditional_loop
    (92) return -> . RETURN expression SEMI
    (93) function_call -> . ID LPAREN RPAREN SEMI
    (94) function_call -> . ID LPAREN function_call_1 RPAREN SEMI
    (95) function_call -> . ID LPAREN function_call_1 RPAREN
    (96) function_call -> . ID LPAREN RPAREN
    (47) expression -> . exp
    (48) expression -> . expression1
    (36) special_functions -> . mean
    (37) special_functions -> . median
    (38) special_functions -> . mode
    (39) special_functions -> . variance
    (40) special_functions -> . standard_deviation
    (91) non_conditional_loop -> . FOR LPAREN ID EQUALS expression TO expression BY expression RPAREN block
    (90) conditional_loop -> . WHILE LPAREN expression RPAREN DO block
    (57) exp -> . term np_add_quadruple
    (58) exp -> . term exp_1
    (49) expression1 -> . exp LT exp
    (50) expression1 -> . exp LE exp
    (51) expression1 -> . exp GT exp
    (52) expression1 -> . exp GE exp
    (53) expression1 -> . exp EQ exp
    (54) expression1 -> . exp NE exp
    (55) expression1 -> . exp AND exp
    (56) expression1 -> . exp OR exp
    (99) mean -> . MEAN LPAREN expression RPAREN SEMI
    (100) median -> . MEDIAN LPAREN expression RPAREN SEMI
    (101) mode -> . MODE LPAREN expression RPAREN SEMI
    (102) variance -> . VARIANCE LPAREN expression RPAREN SEMI
    (103) standard_deviation -> . STDEV LPAREN expression RPAREN SEMI
    (61) term -> . factor
    (62) term -> . factor term_2
    (65) factor -> . LPAREN np_add_paren expression RPAREN np_pop_paren
    (66) factor -> . LBRACKET expression RBRACKET
    (67) factor -> . function_call
    (68) factor -> . factor_prima_1
    (69) factor_prima_1 -> . PLUS varcte
    (70) factor_prima_1 -> . MINUS varcte
    (71) factor_prima_1 -> . varcte
    (72) varcte -> . ID np_add_id_quad
    (73) varcte -> . CTEI np_add_cte_int
    (74) varcte -> . CTEF np_add_cte_float
    (75) varcte -> . CTEC np_add_cte_char
    (76) varcte -> . TRUE np_add_cte_bool
    (77) varcte -> . FALSE np_add_cte_bool

    RBRACE          reduce using rule 104 (epsilon -> .)
    ID              shift and go to state 78
    IF              shift and go to state 79
    PRINT           shift and go to state 80
    READ            shift and go to state 81
    RETURN          shift and go to state 84
    FOR             shift and go to state 90
    WHILE           shift and go to state 91
    MEAN            shift and go to state 92
    MEDIAN          shift and go to state 93
    MODE            shift and go to state 94
    VARIANCE        shift and go to state 95
    STDEV           shift and go to state 96
    LPAREN          shift and go to state 54
    LBRACKET        shift and go to state 48
    PLUS            shift and go to state 58
    MINUS           shift and go to state 60
    CTEI            shift and go to state 61
    CTEF            shift and go to state 62
    CTEC            shift and go to state 63
    TRUE            shift and go to state 64
    FALSE           shift and go to state 65

    condition                      shift and go to state 70
    statements1                    shift and go to state 132
    statements                     shift and go to state 130
    epsilon                        shift and go to state 131
    assignment                     shift and go to state 69
    writing                        shift and go to state 71
    reading                        shift and go to state 72
    repetition                     shift and go to state 73
    return                         shift and go to state 74
    function_call                  shift and go to state 75
    expression                     shift and go to state 76
    special_functions              shift and go to state 77
    non_conditional_loop           shift and go to state 82
    conditional_loop               shift and go to state 83
    exp                            shift and go to state 50
    expression1                    shift and go to state 51
    mean                           shift and go to state 85
    median                         shift and go to state 86
    mode                           shift and go to state 87
    variance                       shift and go to state 88
    standard_deviation             shift and go to state 89
    term                           shift and go to state 52
    factor                         shift and go to state 53
    factor_prima_1                 shift and go to state 56
    varcte                         shift and go to state 59

state 71

    (29) statements -> writing . statements1
    (41) statements1 -> . statements
    (42) statements1 -> . epsilon
    (27) statements -> . assignment statements1
    (28) statements -> . condition statements1
    (29) statements -> . writing statements1
    (30) statements -> . reading statements1
    (31) statements -> . repetition statements1
    (32) statements -> . return statements1
    (33) statements -> . function_call statements1
    (34) statements -> . expression statements1
    (35) statements -> . special_functions statements1
    (104) epsilon -> .
    (43) assignment -> . ID EQUALS expression SEMI
    (44) assignment -> . ID LBRACKET expression RBRACKET EQUALS expression SEMI
    (45) condition -> . IF LPAREN expression RPAREN block
    (46) condition -> . IF LPAREN expression RPAREN block ELSE block
    (78) writing -> . PRINT LPAREN writing_1 RPAREN SEMI
    (83) reading -> . READ LPAREN reading_1 RPAREN SEMI
    (88) repetition -> . non_conditional_loop
    (89) repetition -> . conditional_loop
    (92) return -> . RETURN expression SEMI
    (93) function_call -> . ID LPAREN RPAREN SEMI
    (94) function_call -> . ID LPAREN function_call_1 RPAREN SEMI
    (95) function_call -> . ID LPAREN function_call_1 RPAREN
    (96) function_call -> . ID LPAREN RPAREN
    (47) expression -> . exp
    (48) expression -> . expression1
    (36) special_functions -> . mean
    (37) special_functions -> . median
    (38) special_functions -> . mode
    (39) special_functions -> . variance
    (40) special_functions -> . standard_deviation
    (91) non_conditional_loop -> . FOR LPAREN ID EQUALS expression TO expression BY expression RPAREN block
    (90) conditional_loop -> . WHILE LPAREN expression RPAREN DO block
    (57) exp -> . term np_add_quadruple
    (58) exp -> . term exp_1
    (49) expression1 -> . exp LT exp
    (50) expression1 -> . exp LE exp
    (51) expression1 -> . exp GT exp
    (52) expression1 -> . exp GE exp
    (53) expression1 -> . exp EQ exp
    (54) expression1 -> . exp NE exp
    (55) expression1 -> . exp AND exp
    (56) expression1 -> . exp OR exp
    (99) mean -> . MEAN LPAREN expression RPAREN SEMI
    (100) median -> . MEDIAN LPAREN expression RPAREN SEMI
    (101) mode -> . MODE LPAREN expression RPAREN SEMI
    (102) variance -> . VARIANCE LPAREN expression RPAREN SEMI
    (103) standard_deviation -> . STDEV LPAREN expression RPAREN SEMI
    (61) term -> . factor
    (62) term -> . factor term_2
    (65) factor -> . LPAREN np_add_paren expression RPAREN np_pop_paren
    (66) factor -> . LBRACKET expression RBRACKET
    (67) factor -> . function_call
    (68) factor -> . factor_prima_1
    (69) factor_prima_1 -> . PLUS varcte
    (70) factor_prima_1 -> . MINUS varcte
    (71) factor_prima_1 -> . varcte
    (72) varcte -> . ID np_add_id_quad
    (73) varcte -> . CTEI np_add_cte_int
    (74) varcte -> . CTEF np_add_cte_float
    (75) varcte -> . CTEC np_add_cte_char
    (76) varcte -> . TRUE np_add_cte_bool
    (77) varcte -> . FALSE np_add_cte_bool

    RBRACE          reduce using rule 104 (epsilon -> .)
    ID              shift and go to state 78
    IF              shift and go to state 79
    PRINT           shift and go to state 80
    READ            shift and go to state 81
    RETURN          shift and go to state 84
    FOR             shift and go to state 90
    WHILE           shift and go to state 91
    MEAN            shift and go to state 92
    MEDIAN          shift and go to state 93
    MODE            shift and go to state 94
    VARIANCE        shift and go to state 95
    STDEV           shift and go to state 96
    LPAREN          shift and go to state 54
    LBRACKET        shift and go to state 48
    PLUS            shift and go to state 58
    MINUS           shift and go to state 60
    CTEI            shift and go to state 61
    CTEF            shift and go to state 62
    CTEC            shift and go to state 63
    TRUE            shift and go to state 64
    FALSE           shift and go to state 65

    writing                        shift and go to state 71
    statements1                    shift and go to state 133
    statements                     shift and go to state 130
    epsilon                        shift and go to state 131
    assignment                     shift and go to state 69
    condition                      shift and go to state 70
    reading                        shift and go to state 72
    repetition                     shift and go to state 73
    return                         shift and go to state 74
    function_call                  shift and go to state 75
    expression                     shift and go to state 76
    special_functions              shift and go to state 77
    non_conditional_loop           shift and go to state 82
    conditional_loop               shift and go to state 83
    exp                            shift and go to state 50
    expression1                    shift and go to state 51
    mean                           shift and go to state 85
    median                         shift and go to state 86
    mode                           shift and go to state 87
    variance                       shift and go to state 88
    standard_deviation             shift and go to state 89
    term                           shift and go to state 52
    factor                         shift and go to state 53
    factor_prima_1                 shift and go to state 56
    varcte                         shift and go to state 59

state 72

    (30) statements -> reading . statements1
    (41) statements1 -> . statements
    (42) statements1 -> . epsilon
    (27) statements -> . assignment statements1
    (28) statements -> . condition statements1
    (29) statements -> . writing statements1
    (30) statements -> . reading statements1
    (31) statements -> . repetition statements1
    (32) statements -> . return statements1
    (33) statements -> . function_call statements1
    (34) statements -> . expression statements1
    (35) statements -> . special_functions statements1
    (104) epsilon -> .
    (43) assignment -> . ID EQUALS expression SEMI
    (44) assignment -> . ID LBRACKET expression RBRACKET EQUALS expression SEMI
    (45) condition -> . IF LPAREN expression RPAREN block
    (46) condition -> . IF LPAREN expression RPAREN block ELSE block
    (78) writing -> . PRINT LPAREN writing_1 RPAREN SEMI
    (83) reading -> . READ LPAREN reading_1 RPAREN SEMI
    (88) repetition -> . non_conditional_loop
    (89) repetition -> . conditional_loop
    (92) return -> . RETURN expression SEMI
    (93) function_call -> . ID LPAREN RPAREN SEMI
    (94) function_call -> . ID LPAREN function_call_1 RPAREN SEMI
    (95) function_call -> . ID LPAREN function_call_1 RPAREN
    (96) function_call -> . ID LPAREN RPAREN
    (47) expression -> . exp
    (48) expression -> . expression1
    (36) special_functions -> . mean
    (37) special_functions -> . median
    (38) special_functions -> . mode
    (39) special_functions -> . variance
    (40) special_functions -> . standard_deviation
    (91) non_conditional_loop -> . FOR LPAREN ID EQUALS expression TO expression BY expression RPAREN block
    (90) conditional_loop -> . WHILE LPAREN expression RPAREN DO block
    (57) exp -> . term np_add_quadruple
    (58) exp -> . term exp_1
    (49) expression1 -> . exp LT exp
    (50) expression1 -> . exp LE exp
    (51) expression1 -> . exp GT exp
    (52) expression1 -> . exp GE exp
    (53) expression1 -> . exp EQ exp
    (54) expression1 -> . exp NE exp
    (55) expression1 -> . exp AND exp
    (56) expression1 -> . exp OR exp
    (99) mean -> . MEAN LPAREN expression RPAREN SEMI
    (100) median -> . MEDIAN LPAREN expression RPAREN SEMI
    (101) mode -> . MODE LPAREN expression RPAREN SEMI
    (102) variance -> . VARIANCE LPAREN expression RPAREN SEMI
    (103) standard_deviation -> . STDEV LPAREN expression RPAREN SEMI
    (61) term -> . factor
    (62) term -> . factor term_2
    (65) factor -> . LPAREN np_add_paren expression RPAREN np_pop_paren
    (66) factor -> . LBRACKET expression RBRACKET
    (67) factor -> . function_call
    (68) factor -> . factor_prima_1
    (69) factor_prima_1 -> . PLUS varcte
    (70) factor_prima_1 -> . MINUS varcte
    (71) factor_prima_1 -> . varcte
    (72) varcte -> . ID np_add_id_quad
    (73) varcte -> . CTEI np_add_cte_int
    (74) varcte -> . CTEF np_add_cte_float
    (75) varcte -> . CTEC np_add_cte_char
    (76) varcte -> . TRUE np_add_cte_bool
    (77) varcte -> . FALSE np_add_cte_bool

    RBRACE          reduce using rule 104 (epsilon -> .)
    ID              shift and go to state 78
    IF              shift and go to state 79
    PRINT           shift and go to state 80
    READ            shift and go to state 81
    RETURN          shift and go to state 84
    FOR             shift and go to state 90
    WHILE           shift and go to state 91
    MEAN            shift and go to state 92
    MEDIAN          shift and go to state 93
    MODE            shift and go to state 94
    VARIANCE        shift and go to state 95
    STDEV           shift and go to state 96
    LPAREN          shift and go to state 54
    LBRACKET        shift and go to state 48
    PLUS            shift and go to state 58
    MINUS           shift and go to state 60
    CTEI            shift and go to state 61
    CTEF            shift and go to state 62
    CTEC            shift and go to state 63
    TRUE            shift and go to state 64
    FALSE           shift and go to state 65

    reading                        shift and go to state 72
    statements1                    shift and go to state 134
    statements                     shift and go to state 130
    epsilon                        shift and go to state 131
    assignment                     shift and go to state 69
    condition                      shift and go to state 70
    writing                        shift and go to state 71
    repetition                     shift and go to state 73
    return                         shift and go to state 74
    function_call                  shift and go to state 75
    expression                     shift and go to state 76
    special_functions              shift and go to state 77
    non_conditional_loop           shift and go to state 82
    conditional_loop               shift and go to state 83
    exp                            shift and go to state 50
    expression1                    shift and go to state 51
    mean                           shift and go to state 85
    median                         shift and go to state 86
    mode                           shift and go to state 87
    variance                       shift and go to state 88
    standard_deviation             shift and go to state 89
    term                           shift and go to state 52
    factor                         shift and go to state 53
    factor_prima_1                 shift and go to state 56
    varcte                         shift and go to state 59

state 73

    (31) statements -> repetition . statements1
    (41) statements1 -> . statements
    (42) statements1 -> . epsilon
    (27) statements -> . assignment statements1
    (28) statements -> . condition statements1
    (29) statements -> . writing statements1
    (30) statements -> . reading statements1
    (31) statements -> . repetition statements1
    (32) statements -> . return statements1
    (33) statements -> . function_call statements1
    (34) statements -> . expression statements1
    (35) statements -> . special_functions statements1
    (104) epsilon -> .
    (43) assignment -> . ID EQUALS expression SEMI
    (44) assignment -> . ID LBRACKET expression RBRACKET EQUALS expression SEMI
    (45) condition -> . IF LPAREN expression RPAREN block
    (46) condition -> . IF LPAREN expression RPAREN block ELSE block
    (78) writing -> . PRINT LPAREN writing_1 RPAREN SEMI
    (83) reading -> . READ LPAREN reading_1 RPAREN SEMI
    (88) repetition -> . non_conditional_loop
    (89) repetition -> . conditional_loop
    (92) return -> . RETURN expression SEMI
    (93) function_call -> . ID LPAREN RPAREN SEMI
    (94) function_call -> . ID LPAREN function_call_1 RPAREN SEMI
    (95) function_call -> . ID LPAREN function_call_1 RPAREN
    (96) function_call -> . ID LPAREN RPAREN
    (47) expression -> . exp
    (48) expression -> . expression1
    (36) special_functions -> . mean
    (37) special_functions -> . median
    (38) special_functions -> . mode
    (39) special_functions -> . variance
    (40) special_functions -> . standard_deviation
    (91) non_conditional_loop -> . FOR LPAREN ID EQUALS expression TO expression BY expression RPAREN block
    (90) conditional_loop -> . WHILE LPAREN expression RPAREN DO block
    (57) exp -> . term np_add_quadruple
    (58) exp -> . term exp_1
    (49) expression1 -> . exp LT exp
    (50) expression1 -> . exp LE exp
    (51) expression1 -> . exp GT exp
    (52) expression1 -> . exp GE exp
    (53) expression1 -> . exp EQ exp
    (54) expression1 -> . exp NE exp
    (55) expression1 -> . exp AND exp
    (56) expression1 -> . exp OR exp
    (99) mean -> . MEAN LPAREN expression RPAREN SEMI
    (100) median -> . MEDIAN LPAREN expression RPAREN SEMI
    (101) mode -> . MODE LPAREN expression RPAREN SEMI
    (102) variance -> . VARIANCE LPAREN expression RPAREN SEMI
    (103) standard_deviation -> . STDEV LPAREN expression RPAREN SEMI
    (61) term -> . factor
    (62) term -> . factor term_2
    (65) factor -> . LPAREN np_add_paren expression RPAREN np_pop_paren
    (66) factor -> . LBRACKET expression RBRACKET
    (67) factor -> . function_call
    (68) factor -> . factor_prima_1
    (69) factor_prima_1 -> . PLUS varcte
    (70) factor_prima_1 -> . MINUS varcte
    (71) factor_prima_1 -> . varcte
    (72) varcte -> . ID np_add_id_quad
    (73) varcte -> . CTEI np_add_cte_int
    (74) varcte -> . CTEF np_add_cte_float
    (75) varcte -> . CTEC np_add_cte_char
    (76) varcte -> . TRUE np_add_cte_bool
    (77) varcte -> . FALSE np_add_cte_bool

    RBRACE          reduce using rule 104 (epsilon -> .)
    ID              shift and go to state 78
    IF              shift and go to state 79
    PRINT           shift and go to state 80
    READ            shift and go to state 81
    RETURN          shift and go to state 84
    FOR             shift and go to state 90
    WHILE           shift and go to state 91
    MEAN            shift and go to state 92
    MEDIAN          shift and go to state 93
    MODE            shift and go to state 94
    VARIANCE        shift and go to state 95
    STDEV           shift and go to state 96
    LPAREN          shift and go to state 54
    LBRACKET        shift and go to state 48
    PLUS            shift and go to state 58
    MINUS           shift and go to state 60
    CTEI            shift and go to state 61
    CTEF            shift and go to state 62
    CTEC            shift and go to state 63
    TRUE            shift and go to state 64
    FALSE           shift and go to state 65

    repetition                     shift and go to state 73
    statements1                    shift and go to state 135
    statements                     shift and go to state 130
    epsilon                        shift and go to state 131
    assignment                     shift and go to state 69
    condition                      shift and go to state 70
    writing                        shift and go to state 71
    reading                        shift and go to state 72
    return                         shift and go to state 74
    function_call                  shift and go to state 75
    expression                     shift and go to state 76
    special_functions              shift and go to state 77
    non_conditional_loop           shift and go to state 82
    conditional_loop               shift and go to state 83
    exp                            shift and go to state 50
    expression1                    shift and go to state 51
    mean                           shift and go to state 85
    median                         shift and go to state 86
    mode                           shift and go to state 87
    variance                       shift and go to state 88
    standard_deviation             shift and go to state 89
    term                           shift and go to state 52
    factor                         shift and go to state 53
    factor_prima_1                 shift and go to state 56
    varcte                         shift and go to state 59

state 74

    (32) statements -> return . statements1
    (41) statements1 -> . statements
    (42) statements1 -> . epsilon
    (27) statements -> . assignment statements1
    (28) statements -> . condition statements1
    (29) statements -> . writing statements1
    (30) statements -> . reading statements1
    (31) statements -> . repetition statements1
    (32) statements -> . return statements1
    (33) statements -> . function_call statements1
    (34) statements -> . expression statements1
    (35) statements -> . special_functions statements1
    (104) epsilon -> .
    (43) assignment -> . ID EQUALS expression SEMI
    (44) assignment -> . ID LBRACKET expression RBRACKET EQUALS expression SEMI
    (45) condition -> . IF LPAREN expression RPAREN block
    (46) condition -> . IF LPAREN expression RPAREN block ELSE block
    (78) writing -> . PRINT LPAREN writing_1 RPAREN SEMI
    (83) reading -> . READ LPAREN reading_1 RPAREN SEMI
    (88) repetition -> . non_conditional_loop
    (89) repetition -> . conditional_loop
    (92) return -> . RETURN expression SEMI
    (93) function_call -> . ID LPAREN RPAREN SEMI
    (94) function_call -> . ID LPAREN function_call_1 RPAREN SEMI
    (95) function_call -> . ID LPAREN function_call_1 RPAREN
    (96) function_call -> . ID LPAREN RPAREN
    (47) expression -> . exp
    (48) expression -> . expression1
    (36) special_functions -> . mean
    (37) special_functions -> . median
    (38) special_functions -> . mode
    (39) special_functions -> . variance
    (40) special_functions -> . standard_deviation
    (91) non_conditional_loop -> . FOR LPAREN ID EQUALS expression TO expression BY expression RPAREN block
    (90) conditional_loop -> . WHILE LPAREN expression RPAREN DO block
    (57) exp -> . term np_add_quadruple
    (58) exp -> . term exp_1
    (49) expression1 -> . exp LT exp
    (50) expression1 -> . exp LE exp
    (51) expression1 -> . exp GT exp
    (52) expression1 -> . exp GE exp
    (53) expression1 -> . exp EQ exp
    (54) expression1 -> . exp NE exp
    (55) expression1 -> . exp AND exp
    (56) expression1 -> . exp OR exp
    (99) mean -> . MEAN LPAREN expression RPAREN SEMI
    (100) median -> . MEDIAN LPAREN expression RPAREN SEMI
    (101) mode -> . MODE LPAREN expression RPAREN SEMI
    (102) variance -> . VARIANCE LPAREN expression RPAREN SEMI
    (103) standard_deviation -> . STDEV LPAREN expression RPAREN SEMI
    (61) term -> . factor
    (62) term -> . factor term_2
    (65) factor -> . LPAREN np_add_paren expression RPAREN np_pop_paren
    (66) factor -> . LBRACKET expression RBRACKET
    (67) factor -> . function_call
    (68) factor -> . factor_prima_1
    (69) factor_prima_1 -> . PLUS varcte
    (70) factor_prima_1 -> . MINUS varcte
    (71) factor_prima_1 -> . varcte
    (72) varcte -> . ID np_add_id_quad
    (73) varcte -> . CTEI np_add_cte_int
    (74) varcte -> . CTEF np_add_cte_float
    (75) varcte -> . CTEC np_add_cte_char
    (76) varcte -> . TRUE np_add_cte_bool
    (77) varcte -> . FALSE np_add_cte_bool

    RBRACE          reduce using rule 104 (epsilon -> .)
    ID              shift and go to state 78
    IF              shift and go to state 79
    PRINT           shift and go to state 80
    READ            shift and go to state 81
    RETURN          shift and go to state 84
    FOR             shift and go to state 90
    WHILE           shift and go to state 91
    MEAN            shift and go to state 92
    MEDIAN          shift and go to state 93
    MODE            shift and go to state 94
    VARIANCE        shift and go to state 95
    STDEV           shift and go to state 96
    LPAREN          shift and go to state 54
    LBRACKET        shift and go to state 48
    PLUS            shift and go to state 58
    MINUS           shift and go to state 60
    CTEI            shift and go to state 61
    CTEF            shift and go to state 62
    CTEC            shift and go to state 63
    TRUE            shift and go to state 64
    FALSE           shift and go to state 65

    return                         shift and go to state 74
    statements1                    shift and go to state 136
    statements                     shift and go to state 130
    epsilon                        shift and go to state 131
    assignment                     shift and go to state 69
    condition                      shift and go to state 70
    writing                        shift and go to state 71
    reading                        shift and go to state 72
    repetition                     shift and go to state 73
    function_call                  shift and go to state 75
    expression                     shift and go to state 76
    special_functions              shift and go to state 77
    non_conditional_loop           shift and go to state 82
    conditional_loop               shift and go to state 83
    exp                            shift and go to state 50
    expression1                    shift and go to state 51
    mean                           shift and go to state 85
    median                         shift and go to state 86
    mode                           shift and go to state 87
    variance                       shift and go to state 88
    standard_deviation             shift and go to state 89
    term                           shift and go to state 52
    factor                         shift and go to state 53
    factor_prima_1                 shift and go to state 56
    varcte                         shift and go to state 59

state 75

    (33) statements -> function_call . statements1
    (67) factor -> function_call .
    (41) statements1 -> . statements
    (42) statements1 -> . epsilon
    (27) statements -> . assignment statements1
    (28) statements -> . condition statements1
    (29) statements -> . writing statements1
    (30) statements -> . reading statements1
    (31) statements -> . repetition statements1
    (32) statements -> . return statements1
    (33) statements -> . function_call statements1
    (34) statements -> . expression statements1
    (35) statements -> . special_functions statements1
    (104) epsilon -> .
    (43) assignment -> . ID EQUALS expression SEMI
    (44) assignment -> . ID LBRACKET expression RBRACKET EQUALS expression SEMI
    (45) condition -> . IF LPAREN expression RPAREN block
    (46) condition -> . IF LPAREN expression RPAREN block ELSE block
    (78) writing -> . PRINT LPAREN writing_1 RPAREN SEMI
    (83) reading -> . READ LPAREN reading_1 RPAREN SEMI
    (88) repetition -> . non_conditional_loop
    (89) repetition -> . conditional_loop
    (92) return -> . RETURN expression SEMI
    (93) function_call -> . ID LPAREN RPAREN SEMI
    (94) function_call -> . ID LPAREN function_call_1 RPAREN SEMI
    (95) function_call -> . ID LPAREN function_call_1 RPAREN
    (96) function_call -> . ID LPAREN RPAREN
    (47) expression -> . exp
    (48) expression -> . expression1
    (36) special_functions -> . mean
    (37) special_functions -> . median
    (38) special_functions -> . mode
    (39) special_functions -> . variance
    (40) special_functions -> . standard_deviation
    (91) non_conditional_loop -> . FOR LPAREN ID EQUALS expression TO expression BY expression RPAREN block
    (90) conditional_loop -> . WHILE LPAREN expression RPAREN DO block
    (57) exp -> . term np_add_quadruple
    (58) exp -> . term exp_1
    (49) expression1 -> . exp LT exp
    (50) expression1 -> . exp LE exp
    (51) expression1 -> . exp GT exp
    (52) expression1 -> . exp GE exp
    (53) expression1 -> . exp EQ exp
    (54) expression1 -> . exp NE exp
    (55) expression1 -> . exp AND exp
    (56) expression1 -> . exp OR exp
    (99) mean -> . MEAN LPAREN expression RPAREN SEMI
    (100) median -> . MEDIAN LPAREN expression RPAREN SEMI
    (101) mode -> . MODE LPAREN expression RPAREN SEMI
    (102) variance -> . VARIANCE LPAREN expression RPAREN SEMI
    (103) standard_deviation -> . STDEV LPAREN expression RPAREN SEMI
    (61) term -> . factor
    (62) term -> . factor term_2
    (65) factor -> . LPAREN np_add_paren expression RPAREN np_pop_paren
    (66) factor -> . LBRACKET expression RBRACKET
    (67) factor -> . function_call
    (68) factor -> . factor_prima_1
    (69) factor_prima_1 -> . PLUS varcte
    (70) factor_prima_1 -> . MINUS varcte
    (71) factor_prima_1 -> . varcte
    (72) varcte -> . ID np_add_id_quad
    (73) varcte -> . CTEI np_add_cte_int
    (74) varcte -> . CTEF np_add_cte_float
    (75) varcte -> . CTEC np_add_cte_char
    (76) varcte -> . TRUE np_add_cte_bool
    (77) varcte -> . FALSE np_add_cte_bool

  ! reduce/reduce conflict for RBRACE resolved using rule 67 (factor -> function_call .)
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for MEAN resolved as shift
  ! shift/reduce conflict for MEDIAN resolved as shift
  ! shift/reduce conflict for MODE resolved as shift
  ! shift/reduce conflict for VARIANCE resolved as shift
  ! shift/reduce conflict for STDEV resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for CTEI resolved as shift
  ! shift/reduce conflict for CTEF resolved as shift
  ! shift/reduce conflict for CTEC resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    TIMES           reduce using rule 67 (factor -> function_call .)
    DIVIDE          reduce using rule 67 (factor -> function_call .)
    LT              reduce using rule 67 (factor -> function_call .)
    LE              reduce using rule 67 (factor -> function_call .)
    GT              reduce using rule 67 (factor -> function_call .)
    GE              reduce using rule 67 (factor -> function_call .)
    EQ              reduce using rule 67 (factor -> function_call .)
    NE              reduce using rule 67 (factor -> function_call .)
    AND             reduce using rule 67 (factor -> function_call .)
    OR              reduce using rule 67 (factor -> function_call .)
    RBRACE          reduce using rule 67 (factor -> function_call .)
    ID              shift and go to state 78
    IF              shift and go to state 79
    PRINT           shift and go to state 80
    READ            shift and go to state 81
    RETURN          shift and go to state 84
    FOR             shift and go to state 90
    WHILE           shift and go to state 91
    MEAN            shift and go to state 92
    MEDIAN          shift and go to state 93
    MODE            shift and go to state 94
    VARIANCE        shift and go to state 95
    STDEV           shift and go to state 96
    LPAREN          shift and go to state 54
    LBRACKET        shift and go to state 48
    PLUS            shift and go to state 58
    MINUS           shift and go to state 60
    CTEI            shift and go to state 61
    CTEF            shift and go to state 62
    CTEC            shift and go to state 63
    TRUE            shift and go to state 64
    FALSE           shift and go to state 65

  ! PLUS            [ reduce using rule 67 (factor -> function_call .) ]
  ! MINUS           [ reduce using rule 67 (factor -> function_call .) ]
  ! ID              [ reduce using rule 67 (factor -> function_call .) ]
  ! IF              [ reduce using rule 67 (factor -> function_call .) ]
  ! PRINT           [ reduce using rule 67 (factor -> function_call .) ]
  ! READ            [ reduce using rule 67 (factor -> function_call .) ]
  ! RETURN          [ reduce using rule 67 (factor -> function_call .) ]
  ! FOR             [ reduce using rule 67 (factor -> function_call .) ]
  ! WHILE           [ reduce using rule 67 (factor -> function_call .) ]
  ! MEAN            [ reduce using rule 67 (factor -> function_call .) ]
  ! MEDIAN          [ reduce using rule 67 (factor -> function_call .) ]
  ! MODE            [ reduce using rule 67 (factor -> function_call .) ]
  ! VARIANCE        [ reduce using rule 67 (factor -> function_call .) ]
  ! STDEV           [ reduce using rule 67 (factor -> function_call .) ]
  ! LPAREN          [ reduce using rule 67 (factor -> function_call .) ]
  ! LBRACKET        [ reduce using rule 67 (factor -> function_call .) ]
  ! CTEI            [ reduce using rule 67 (factor -> function_call .) ]
  ! CTEF            [ reduce using rule 67 (factor -> function_call .) ]
  ! CTEC            [ reduce using rule 67 (factor -> function_call .) ]
  ! TRUE            [ reduce using rule 67 (factor -> function_call .) ]
  ! FALSE           [ reduce using rule 67 (factor -> function_call .) ]
  ! RBRACE          [ reduce using rule 104 (epsilon -> .) ]

    function_call                  shift and go to state 75
    statements1                    shift and go to state 137
    statements                     shift and go to state 130
    epsilon                        shift and go to state 131
    assignment                     shift and go to state 69
    condition                      shift and go to state 70
    writing                        shift and go to state 71
    reading                        shift and go to state 72
    repetition                     shift and go to state 73
    return                         shift and go to state 74
    expression                     shift and go to state 76
    special_functions              shift and go to state 77
    non_conditional_loop           shift and go to state 82
    conditional_loop               shift and go to state 83
    exp                            shift and go to state 50
    expression1                    shift and go to state 51
    mean                           shift and go to state 85
    median                         shift and go to state 86
    mode                           shift and go to state 87
    variance                       shift and go to state 88
    standard_deviation             shift and go to state 89
    term                           shift and go to state 52
    factor                         shift and go to state 53
    factor_prima_1                 shift and go to state 56
    varcte                         shift and go to state 59

state 76

    (34) statements -> expression . statements1
    (41) statements1 -> . statements
    (42) statements1 -> . epsilon
    (27) statements -> . assignment statements1
    (28) statements -> . condition statements1
    (29) statements -> . writing statements1
    (30) statements -> . reading statements1
    (31) statements -> . repetition statements1
    (32) statements -> . return statements1
    (33) statements -> . function_call statements1
    (34) statements -> . expression statements1
    (35) statements -> . special_functions statements1
    (104) epsilon -> .
    (43) assignment -> . ID EQUALS expression SEMI
    (44) assignment -> . ID LBRACKET expression RBRACKET EQUALS expression SEMI
    (45) condition -> . IF LPAREN expression RPAREN block
    (46) condition -> . IF LPAREN expression RPAREN block ELSE block
    (78) writing -> . PRINT LPAREN writing_1 RPAREN SEMI
    (83) reading -> . READ LPAREN reading_1 RPAREN SEMI
    (88) repetition -> . non_conditional_loop
    (89) repetition -> . conditional_loop
    (92) return -> . RETURN expression SEMI
    (93) function_call -> . ID LPAREN RPAREN SEMI
    (94) function_call -> . ID LPAREN function_call_1 RPAREN SEMI
    (95) function_call -> . ID LPAREN function_call_1 RPAREN
    (96) function_call -> . ID LPAREN RPAREN
    (47) expression -> . exp
    (48) expression -> . expression1
    (36) special_functions -> . mean
    (37) special_functions -> . median
    (38) special_functions -> . mode
    (39) special_functions -> . variance
    (40) special_functions -> . standard_deviation
    (91) non_conditional_loop -> . FOR LPAREN ID EQUALS expression TO expression BY expression RPAREN block
    (90) conditional_loop -> . WHILE LPAREN expression RPAREN DO block
    (57) exp -> . term np_add_quadruple
    (58) exp -> . term exp_1
    (49) expression1 -> . exp LT exp
    (50) expression1 -> . exp LE exp
    (51) expression1 -> . exp GT exp
    (52) expression1 -> . exp GE exp
    (53) expression1 -> . exp EQ exp
    (54) expression1 -> . exp NE exp
    (55) expression1 -> . exp AND exp
    (56) expression1 -> . exp OR exp
    (99) mean -> . MEAN LPAREN expression RPAREN SEMI
    (100) median -> . MEDIAN LPAREN expression RPAREN SEMI
    (101) mode -> . MODE LPAREN expression RPAREN SEMI
    (102) variance -> . VARIANCE LPAREN expression RPAREN SEMI
    (103) standard_deviation -> . STDEV LPAREN expression RPAREN SEMI
    (61) term -> . factor
    (62) term -> . factor term_2
    (65) factor -> . LPAREN np_add_paren expression RPAREN np_pop_paren
    (66) factor -> . LBRACKET expression RBRACKET
    (67) factor -> . function_call
    (68) factor -> . factor_prima_1
    (69) factor_prima_1 -> . PLUS varcte
    (70) factor_prima_1 -> . MINUS varcte
    (71) factor_prima_1 -> . varcte
    (72) varcte -> . ID np_add_id_quad
    (73) varcte -> . CTEI np_add_cte_int
    (74) varcte -> . CTEF np_add_cte_float
    (75) varcte -> . CTEC np_add_cte_char
    (76) varcte -> . TRUE np_add_cte_bool
    (77) varcte -> . FALSE np_add_cte_bool

    RBRACE          reduce using rule 104 (epsilon -> .)
    ID              shift and go to state 78
    IF              shift and go to state 79
    PRINT           shift and go to state 80
    READ            shift and go to state 81
    RETURN          shift and go to state 84
    FOR             shift and go to state 90
    WHILE           shift and go to state 91
    MEAN            shift and go to state 92
    MEDIAN          shift and go to state 93
    MODE            shift and go to state 94
    VARIANCE        shift and go to state 95
    STDEV           shift and go to state 96
    LPAREN          shift and go to state 54
    LBRACKET        shift and go to state 48
    PLUS            shift and go to state 58
    MINUS           shift and go to state 60
    CTEI            shift and go to state 61
    CTEF            shift and go to state 62
    CTEC            shift and go to state 63
    TRUE            shift and go to state 64
    FALSE           shift and go to state 65

    expression                     shift and go to state 76
    statements1                    shift and go to state 138
    statements                     shift and go to state 130
    epsilon                        shift and go to state 131
    assignment                     shift and go to state 69
    condition                      shift and go to state 70
    writing                        shift and go to state 71
    reading                        shift and go to state 72
    repetition                     shift and go to state 73
    return                         shift and go to state 74
    function_call                  shift and go to state 75
    special_functions              shift and go to state 77
    non_conditional_loop           shift and go to state 82
    conditional_loop               shift and go to state 83
    exp                            shift and go to state 50
    expression1                    shift and go to state 51
    mean                           shift and go to state 85
    median                         shift and go to state 86
    mode                           shift and go to state 87
    variance                       shift and go to state 88
    standard_deviation             shift and go to state 89
    term                           shift and go to state 52
    factor                         shift and go to state 53
    factor_prima_1                 shift and go to state 56
    varcte                         shift and go to state 59

state 77

    (35) statements -> special_functions . statements1
    (41) statements1 -> . statements
    (42) statements1 -> . epsilon
    (27) statements -> . assignment statements1
    (28) statements -> . condition statements1
    (29) statements -> . writing statements1
    (30) statements -> . reading statements1
    (31) statements -> . repetition statements1
    (32) statements -> . return statements1
    (33) statements -> . function_call statements1
    (34) statements -> . expression statements1
    (35) statements -> . special_functions statements1
    (104) epsilon -> .
    (43) assignment -> . ID EQUALS expression SEMI
    (44) assignment -> . ID LBRACKET expression RBRACKET EQUALS expression SEMI
    (45) condition -> . IF LPAREN expression RPAREN block
    (46) condition -> . IF LPAREN expression RPAREN block ELSE block
    (78) writing -> . PRINT LPAREN writing_1 RPAREN SEMI
    (83) reading -> . READ LPAREN reading_1 RPAREN SEMI
    (88) repetition -> . non_conditional_loop
    (89) repetition -> . conditional_loop
    (92) return -> . RETURN expression SEMI
    (93) function_call -> . ID LPAREN RPAREN SEMI
    (94) function_call -> . ID LPAREN function_call_1 RPAREN SEMI
    (95) function_call -> . ID LPAREN function_call_1 RPAREN
    (96) function_call -> . ID LPAREN RPAREN
    (47) expression -> . exp
    (48) expression -> . expression1
    (36) special_functions -> . mean
    (37) special_functions -> . median
    (38) special_functions -> . mode
    (39) special_functions -> . variance
    (40) special_functions -> . standard_deviation
    (91) non_conditional_loop -> . FOR LPAREN ID EQUALS expression TO expression BY expression RPAREN block
    (90) conditional_loop -> . WHILE LPAREN expression RPAREN DO block
    (57) exp -> . term np_add_quadruple
    (58) exp -> . term exp_1
    (49) expression1 -> . exp LT exp
    (50) expression1 -> . exp LE exp
    (51) expression1 -> . exp GT exp
    (52) expression1 -> . exp GE exp
    (53) expression1 -> . exp EQ exp
    (54) expression1 -> . exp NE exp
    (55) expression1 -> . exp AND exp
    (56) expression1 -> . exp OR exp
    (99) mean -> . MEAN LPAREN expression RPAREN SEMI
    (100) median -> . MEDIAN LPAREN expression RPAREN SEMI
    (101) mode -> . MODE LPAREN expression RPAREN SEMI
    (102) variance -> . VARIANCE LPAREN expression RPAREN SEMI
    (103) standard_deviation -> . STDEV LPAREN expression RPAREN SEMI
    (61) term -> . factor
    (62) term -> . factor term_2
    (65) factor -> . LPAREN np_add_paren expression RPAREN np_pop_paren
    (66) factor -> . LBRACKET expression RBRACKET
    (67) factor -> . function_call
    (68) factor -> . factor_prima_1
    (69) factor_prima_1 -> . PLUS varcte
    (70) factor_prima_1 -> . MINUS varcte
    (71) factor_prima_1 -> . varcte
    (72) varcte -> . ID np_add_id_quad
    (73) varcte -> . CTEI np_add_cte_int
    (74) varcte -> . CTEF np_add_cte_float
    (75) varcte -> . CTEC np_add_cte_char
    (76) varcte -> . TRUE np_add_cte_bool
    (77) varcte -> . FALSE np_add_cte_bool

    RBRACE          reduce using rule 104 (epsilon -> .)
    ID              shift and go to state 78
    IF              shift and go to state 79
    PRINT           shift and go to state 80
    READ            shift and go to state 81
    RETURN          shift and go to state 84
    FOR             shift and go to state 90
    WHILE           shift and go to state 91
    MEAN            shift and go to state 92
    MEDIAN          shift and go to state 93
    MODE            shift and go to state 94
    VARIANCE        shift and go to state 95
    STDEV           shift and go to state 96
    LPAREN          shift and go to state 54
    LBRACKET        shift and go to state 48
    PLUS            shift and go to state 58
    MINUS           shift and go to state 60
    CTEI            shift and go to state 61
    CTEF            shift and go to state 62
    CTEC            shift and go to state 63
    TRUE            shift and go to state 64
    FALSE           shift and go to state 65

    special_functions              shift and go to state 77
    statements1                    shift and go to state 139
    statements                     shift and go to state 130
    epsilon                        shift and go to state 131
    assignment                     shift and go to state 69
    condition                      shift and go to state 70
    writing                        shift and go to state 71
    reading                        shift and go to state 72
    repetition                     shift and go to state 73
    return                         shift and go to state 74
    function_call                  shift and go to state 75
    expression                     shift and go to state 76
    non_conditional_loop           shift and go to state 82
    conditional_loop               shift and go to state 83
    exp                            shift and go to state 50
    expression1                    shift and go to state 51
    mean                           shift and go to state 85
    median                         shift and go to state 86
    mode                           shift and go to state 87
    variance                       shift and go to state 88
    standard_deviation             shift and go to state 89
    term                           shift and go to state 52
    factor                         shift and go to state 53
    factor_prima_1                 shift and go to state 56
    varcte                         shift and go to state 59

state 78

    (43) assignment -> ID . EQUALS expression SEMI
    (44) assignment -> ID . LBRACKET expression RBRACKET EQUALS expression SEMI
    (93) function_call -> ID . LPAREN RPAREN SEMI
    (94) function_call -> ID . LPAREN function_call_1 RPAREN SEMI
    (95) function_call -> ID . LPAREN function_call_1 RPAREN
    (96) function_call -> ID . LPAREN RPAREN
    (72) varcte -> ID . np_add_id_quad
    (110) np_add_id_quad -> .

  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
    EQUALS          shift and go to state 140
    LBRACKET        shift and go to state 141
    LPAREN          shift and go to state 115
    TIMES           reduce using rule 110 (np_add_id_quad -> .)
    DIVIDE          reduce using rule 110 (np_add_id_quad -> .)
    PLUS            reduce using rule 110 (np_add_id_quad -> .)
    MINUS           reduce using rule 110 (np_add_id_quad -> .)
    LT              reduce using rule 110 (np_add_id_quad -> .)
    LE              reduce using rule 110 (np_add_id_quad -> .)
    GT              reduce using rule 110 (np_add_id_quad -> .)
    GE              reduce using rule 110 (np_add_id_quad -> .)
    EQ              reduce using rule 110 (np_add_id_quad -> .)
    NE              reduce using rule 110 (np_add_id_quad -> .)
    AND             reduce using rule 110 (np_add_id_quad -> .)
    OR              reduce using rule 110 (np_add_id_quad -> .)
    ID              reduce using rule 110 (np_add_id_quad -> .)
    IF              reduce using rule 110 (np_add_id_quad -> .)
    PRINT           reduce using rule 110 (np_add_id_quad -> .)
    READ            reduce using rule 110 (np_add_id_quad -> .)
    RETURN          reduce using rule 110 (np_add_id_quad -> .)
    FOR             reduce using rule 110 (np_add_id_quad -> .)
    WHILE           reduce using rule 110 (np_add_id_quad -> .)
    MEAN            reduce using rule 110 (np_add_id_quad -> .)
    MEDIAN          reduce using rule 110 (np_add_id_quad -> .)
    MODE            reduce using rule 110 (np_add_id_quad -> .)
    VARIANCE        reduce using rule 110 (np_add_id_quad -> .)
    STDEV           reduce using rule 110 (np_add_id_quad -> .)
    CTEI            reduce using rule 110 (np_add_id_quad -> .)
    CTEF            reduce using rule 110 (np_add_id_quad -> .)
    CTEC            reduce using rule 110 (np_add_id_quad -> .)
    TRUE            reduce using rule 110 (np_add_id_quad -> .)
    FALSE           reduce using rule 110 (np_add_id_quad -> .)
    RBRACE          reduce using rule 110 (np_add_id_quad -> .)

  ! LPAREN          [ reduce using rule 110 (np_add_id_quad -> .) ]
  ! LBRACKET        [ reduce using rule 110 (np_add_id_quad -> .) ]

    np_add_id_quad                 shift and go to state 116

state 79

    (45) condition -> IF . LPAREN expression RPAREN block
    (46) condition -> IF . LPAREN expression RPAREN block ELSE block

    LPAREN          shift and go to state 142


state 80

    (78) writing -> PRINT . LPAREN writing_1 RPAREN SEMI

    LPAREN          shift and go to state 143


state 81

    (83) reading -> READ . LPAREN reading_1 RPAREN SEMI

    LPAREN          shift and go to state 144


state 82

    (88) repetition -> non_conditional_loop .

    ID              reduce using rule 88 (repetition -> non_conditional_loop .)
    IF              reduce using rule 88 (repetition -> non_conditional_loop .)
    PRINT           reduce using rule 88 (repetition -> non_conditional_loop .)
    READ            reduce using rule 88 (repetition -> non_conditional_loop .)
    RETURN          reduce using rule 88 (repetition -> non_conditional_loop .)
    FOR             reduce using rule 88 (repetition -> non_conditional_loop .)
    WHILE           reduce using rule 88 (repetition -> non_conditional_loop .)
    MEAN            reduce using rule 88 (repetition -> non_conditional_loop .)
    MEDIAN          reduce using rule 88 (repetition -> non_conditional_loop .)
    MODE            reduce using rule 88 (repetition -> non_conditional_loop .)
    VARIANCE        reduce using rule 88 (repetition -> non_conditional_loop .)
    STDEV           reduce using rule 88 (repetition -> non_conditional_loop .)
    LPAREN          reduce using rule 88 (repetition -> non_conditional_loop .)
    LBRACKET        reduce using rule 88 (repetition -> non_conditional_loop .)
    PLUS            reduce using rule 88 (repetition -> non_conditional_loop .)
    MINUS           reduce using rule 88 (repetition -> non_conditional_loop .)
    CTEI            reduce using rule 88 (repetition -> non_conditional_loop .)
    CTEF            reduce using rule 88 (repetition -> non_conditional_loop .)
    CTEC            reduce using rule 88 (repetition -> non_conditional_loop .)
    TRUE            reduce using rule 88 (repetition -> non_conditional_loop .)
    FALSE           reduce using rule 88 (repetition -> non_conditional_loop .)
    RBRACE          reduce using rule 88 (repetition -> non_conditional_loop .)


state 83

    (89) repetition -> conditional_loop .

    ID              reduce using rule 89 (repetition -> conditional_loop .)
    IF              reduce using rule 89 (repetition -> conditional_loop .)
    PRINT           reduce using rule 89 (repetition -> conditional_loop .)
    READ            reduce using rule 89 (repetition -> conditional_loop .)
    RETURN          reduce using rule 89 (repetition -> conditional_loop .)
    FOR             reduce using rule 89 (repetition -> conditional_loop .)
    WHILE           reduce using rule 89 (repetition -> conditional_loop .)
    MEAN            reduce using rule 89 (repetition -> conditional_loop .)
    MEDIAN          reduce using rule 89 (repetition -> conditional_loop .)
    MODE            reduce using rule 89 (repetition -> conditional_loop .)
    VARIANCE        reduce using rule 89 (repetition -> conditional_loop .)
    STDEV           reduce using rule 89 (repetition -> conditional_loop .)
    LPAREN          reduce using rule 89 (repetition -> conditional_loop .)
    LBRACKET        reduce using rule 89 (repetition -> conditional_loop .)
    PLUS            reduce using rule 89 (repetition -> conditional_loop .)
    MINUS           reduce using rule 89 (repetition -> conditional_loop .)
    CTEI            reduce using rule 89 (repetition -> conditional_loop .)
    CTEF            reduce using rule 89 (repetition -> conditional_loop .)
    CTEC            reduce using rule 89 (repetition -> conditional_loop .)
    TRUE            reduce using rule 89 (repetition -> conditional_loop .)
    FALSE           reduce using rule 89 (repetition -> conditional_loop .)
    RBRACE          reduce using rule 89 (repetition -> conditional_loop .)


state 84

    (92) return -> RETURN . expression SEMI
    (47) expression -> . exp
    (48) expression -> . expression1
    (57) exp -> . term np_add_quadruple
    (58) exp -> . term exp_1
    (49) expression1 -> . exp LT exp
    (50) expression1 -> . exp LE exp
    (51) expression1 -> . exp GT exp
    (52) expression1 -> . exp GE exp
    (53) expression1 -> . exp EQ exp
    (54) expression1 -> . exp NE exp
    (55) expression1 -> . exp AND exp
    (56) expression1 -> . exp OR exp
    (61) term -> . factor
    (62) term -> . factor term_2
    (65) factor -> . LPAREN np_add_paren expression RPAREN np_pop_paren
    (66) factor -> . LBRACKET expression RBRACKET
    (67) factor -> . function_call
    (68) factor -> . factor_prima_1
    (93) function_call -> . ID LPAREN RPAREN SEMI
    (94) function_call -> . ID LPAREN function_call_1 RPAREN SEMI
    (95) function_call -> . ID LPAREN function_call_1 RPAREN
    (96) function_call -> . ID LPAREN RPAREN
    (69) factor_prima_1 -> . PLUS varcte
    (70) factor_prima_1 -> . MINUS varcte
    (71) factor_prima_1 -> . varcte
    (72) varcte -> . ID np_add_id_quad
    (73) varcte -> . CTEI np_add_cte_int
    (74) varcte -> . CTEF np_add_cte_float
    (75) varcte -> . CTEC np_add_cte_char
    (76) varcte -> . TRUE np_add_cte_bool
    (77) varcte -> . FALSE np_add_cte_bool

    LPAREN          shift and go to state 54
    LBRACKET        shift and go to state 48
    ID              shift and go to state 57
    PLUS            shift and go to state 58
    MINUS           shift and go to state 60
    CTEI            shift and go to state 61
    CTEF            shift and go to state 62
    CTEC            shift and go to state 63
    TRUE            shift and go to state 64
    FALSE           shift and go to state 65

    expression                     shift and go to state 145
    exp                            shift and go to state 50
    expression1                    shift and go to state 51
    term                           shift and go to state 52
    factor                         shift and go to state 53
    function_call                  shift and go to state 55
    factor_prima_1                 shift and go to state 56
    varcte                         shift and go to state 59

state 85

    (36) special_functions -> mean .

    ID              reduce using rule 36 (special_functions -> mean .)
    IF              reduce using rule 36 (special_functions -> mean .)
    PRINT           reduce using rule 36 (special_functions -> mean .)
    READ            reduce using rule 36 (special_functions -> mean .)
    RETURN          reduce using rule 36 (special_functions -> mean .)
    FOR             reduce using rule 36 (special_functions -> mean .)
    WHILE           reduce using rule 36 (special_functions -> mean .)
    MEAN            reduce using rule 36 (special_functions -> mean .)
    MEDIAN          reduce using rule 36 (special_functions -> mean .)
    MODE            reduce using rule 36 (special_functions -> mean .)
    VARIANCE        reduce using rule 36 (special_functions -> mean .)
    STDEV           reduce using rule 36 (special_functions -> mean .)
    LPAREN          reduce using rule 36 (special_functions -> mean .)
    LBRACKET        reduce using rule 36 (special_functions -> mean .)
    PLUS            reduce using rule 36 (special_functions -> mean .)
    MINUS           reduce using rule 36 (special_functions -> mean .)
    CTEI            reduce using rule 36 (special_functions -> mean .)
    CTEF            reduce using rule 36 (special_functions -> mean .)
    CTEC            reduce using rule 36 (special_functions -> mean .)
    TRUE            reduce using rule 36 (special_functions -> mean .)
    FALSE           reduce using rule 36 (special_functions -> mean .)
    RBRACE          reduce using rule 36 (special_functions -> mean .)


state 86

    (37) special_functions -> median .

    ID              reduce using rule 37 (special_functions -> median .)
    IF              reduce using rule 37 (special_functions -> median .)
    PRINT           reduce using rule 37 (special_functions -> median .)
    READ            reduce using rule 37 (special_functions -> median .)
    RETURN          reduce using rule 37 (special_functions -> median .)
    FOR             reduce using rule 37 (special_functions -> median .)
    WHILE           reduce using rule 37 (special_functions -> median .)
    MEAN            reduce using rule 37 (special_functions -> median .)
    MEDIAN          reduce using rule 37 (special_functions -> median .)
    MODE            reduce using rule 37 (special_functions -> median .)
    VARIANCE        reduce using rule 37 (special_functions -> median .)
    STDEV           reduce using rule 37 (special_functions -> median .)
    LPAREN          reduce using rule 37 (special_functions -> median .)
    LBRACKET        reduce using rule 37 (special_functions -> median .)
    PLUS            reduce using rule 37 (special_functions -> median .)
    MINUS           reduce using rule 37 (special_functions -> median .)
    CTEI            reduce using rule 37 (special_functions -> median .)
    CTEF            reduce using rule 37 (special_functions -> median .)
    CTEC            reduce using rule 37 (special_functions -> median .)
    TRUE            reduce using rule 37 (special_functions -> median .)
    FALSE           reduce using rule 37 (special_functions -> median .)
    RBRACE          reduce using rule 37 (special_functions -> median .)


state 87

    (38) special_functions -> mode .

    ID              reduce using rule 38 (special_functions -> mode .)
    IF              reduce using rule 38 (special_functions -> mode .)
    PRINT           reduce using rule 38 (special_functions -> mode .)
    READ            reduce using rule 38 (special_functions -> mode .)
    RETURN          reduce using rule 38 (special_functions -> mode .)
    FOR             reduce using rule 38 (special_functions -> mode .)
    WHILE           reduce using rule 38 (special_functions -> mode .)
    MEAN            reduce using rule 38 (special_functions -> mode .)
    MEDIAN          reduce using rule 38 (special_functions -> mode .)
    MODE            reduce using rule 38 (special_functions -> mode .)
    VARIANCE        reduce using rule 38 (special_functions -> mode .)
    STDEV           reduce using rule 38 (special_functions -> mode .)
    LPAREN          reduce using rule 38 (special_functions -> mode .)
    LBRACKET        reduce using rule 38 (special_functions -> mode .)
    PLUS            reduce using rule 38 (special_functions -> mode .)
    MINUS           reduce using rule 38 (special_functions -> mode .)
    CTEI            reduce using rule 38 (special_functions -> mode .)
    CTEF            reduce using rule 38 (special_functions -> mode .)
    CTEC            reduce using rule 38 (special_functions -> mode .)
    TRUE            reduce using rule 38 (special_functions -> mode .)
    FALSE           reduce using rule 38 (special_functions -> mode .)
    RBRACE          reduce using rule 38 (special_functions -> mode .)


state 88

    (39) special_functions -> variance .

    ID              reduce using rule 39 (special_functions -> variance .)
    IF              reduce using rule 39 (special_functions -> variance .)
    PRINT           reduce using rule 39 (special_functions -> variance .)
    READ            reduce using rule 39 (special_functions -> variance .)
    RETURN          reduce using rule 39 (special_functions -> variance .)
    FOR             reduce using rule 39 (special_functions -> variance .)
    WHILE           reduce using rule 39 (special_functions -> variance .)
    MEAN            reduce using rule 39 (special_functions -> variance .)
    MEDIAN          reduce using rule 39 (special_functions -> variance .)
    MODE            reduce using rule 39 (special_functions -> variance .)
    VARIANCE        reduce using rule 39 (special_functions -> variance .)
    STDEV           reduce using rule 39 (special_functions -> variance .)
    LPAREN          reduce using rule 39 (special_functions -> variance .)
    LBRACKET        reduce using rule 39 (special_functions -> variance .)
    PLUS            reduce using rule 39 (special_functions -> variance .)
    MINUS           reduce using rule 39 (special_functions -> variance .)
    CTEI            reduce using rule 39 (special_functions -> variance .)
    CTEF            reduce using rule 39 (special_functions -> variance .)
    CTEC            reduce using rule 39 (special_functions -> variance .)
    TRUE            reduce using rule 39 (special_functions -> variance .)
    FALSE           reduce using rule 39 (special_functions -> variance .)
    RBRACE          reduce using rule 39 (special_functions -> variance .)


state 89

    (40) special_functions -> standard_deviation .

    ID              reduce using rule 40 (special_functions -> standard_deviation .)
    IF              reduce using rule 40 (special_functions -> standard_deviation .)
    PRINT           reduce using rule 40 (special_functions -> standard_deviation .)
    READ            reduce using rule 40 (special_functions -> standard_deviation .)
    RETURN          reduce using rule 40 (special_functions -> standard_deviation .)
    FOR             reduce using rule 40 (special_functions -> standard_deviation .)
    WHILE           reduce using rule 40 (special_functions -> standard_deviation .)
    MEAN            reduce using rule 40 (special_functions -> standard_deviation .)
    MEDIAN          reduce using rule 40 (special_functions -> standard_deviation .)
    MODE            reduce using rule 40 (special_functions -> standard_deviation .)
    VARIANCE        reduce using rule 40 (special_functions -> standard_deviation .)
    STDEV           reduce using rule 40 (special_functions -> standard_deviation .)
    LPAREN          reduce using rule 40 (special_functions -> standard_deviation .)
    LBRACKET        reduce using rule 40 (special_functions -> standard_deviation .)
    PLUS            reduce using rule 40 (special_functions -> standard_deviation .)
    MINUS           reduce using rule 40 (special_functions -> standard_deviation .)
    CTEI            reduce using rule 40 (special_functions -> standard_deviation .)
    CTEF            reduce using rule 40 (special_functions -> standard_deviation .)
    CTEC            reduce using rule 40 (special_functions -> standard_deviation .)
    TRUE            reduce using rule 40 (special_functions -> standard_deviation .)
    FALSE           reduce using rule 40 (special_functions -> standard_deviation .)
    RBRACE          reduce using rule 40 (special_functions -> standard_deviation .)


state 90

    (91) non_conditional_loop -> FOR . LPAREN ID EQUALS expression TO expression BY expression RPAREN block

    LPAREN          shift and go to state 146


state 91

    (90) conditional_loop -> WHILE . LPAREN expression RPAREN DO block

    LPAREN          shift and go to state 147


state 92

    (99) mean -> MEAN . LPAREN expression RPAREN SEMI

    LPAREN          shift and go to state 148


state 93

    (100) median -> MEDIAN . LPAREN expression RPAREN SEMI

    LPAREN          shift and go to state 149


state 94

    (101) mode -> MODE . LPAREN expression RPAREN SEMI

    LPAREN          shift and go to state 150


state 95

    (102) variance -> VARIANCE . LPAREN expression RPAREN SEMI

    LPAREN          shift and go to state 151


state 96

    (103) standard_deviation -> STDEV . LPAREN expression RPAREN SEMI

    LPAREN          shift and go to state 152


state 97

    (66) factor -> LBRACKET expression . RBRACKET

    RBRACKET        shift and go to state 153


state 98

    (14) type_1 -> LBRACKET expression RBRACKET .

    SEMI            reduce using rule 14 (type_1 -> LBRACKET expression RBRACKET .)
    LPAREN          reduce using rule 14 (type_1 -> LBRACKET expression RBRACKET .)
    COMMA           reduce using rule 14 (type_1 -> LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 14 (type_1 -> LBRACKET expression RBRACKET .)


state 99

    (49) expression1 -> exp LT . exp
    (57) exp -> . term np_add_quadruple
    (58) exp -> . term exp_1
    (61) term -> . factor
    (62) term -> . factor term_2
    (65) factor -> . LPAREN np_add_paren expression RPAREN np_pop_paren
    (66) factor -> . LBRACKET expression RBRACKET
    (67) factor -> . function_call
    (68) factor -> . factor_prima_1
    (93) function_call -> . ID LPAREN RPAREN SEMI
    (94) function_call -> . ID LPAREN function_call_1 RPAREN SEMI
    (95) function_call -> . ID LPAREN function_call_1 RPAREN
    (96) function_call -> . ID LPAREN RPAREN
    (69) factor_prima_1 -> . PLUS varcte
    (70) factor_prima_1 -> . MINUS varcte
    (71) factor_prima_1 -> . varcte
    (72) varcte -> . ID np_add_id_quad
    (73) varcte -> . CTEI np_add_cte_int
    (74) varcte -> . CTEF np_add_cte_float
    (75) varcte -> . CTEC np_add_cte_char
    (76) varcte -> . TRUE np_add_cte_bool
    (77) varcte -> . FALSE np_add_cte_bool

    LPAREN          shift and go to state 54
    LBRACKET        shift and go to state 48
    ID              shift and go to state 57
    PLUS            shift and go to state 58
    MINUS           shift and go to state 60
    CTEI            shift and go to state 61
    CTEF            shift and go to state 62
    CTEC            shift and go to state 63
    TRUE            shift and go to state 64
    FALSE           shift and go to state 65

    exp                            shift and go to state 154
    term                           shift and go to state 52
    factor                         shift and go to state 53
    function_call                  shift and go to state 55
    factor_prima_1                 shift and go to state 56
    varcte                         shift and go to state 59

state 100

    (50) expression1 -> exp LE . exp
    (57) exp -> . term np_add_quadruple
    (58) exp -> . term exp_1
    (61) term -> . factor
    (62) term -> . factor term_2
    (65) factor -> . LPAREN np_add_paren expression RPAREN np_pop_paren
    (66) factor -> . LBRACKET expression RBRACKET
    (67) factor -> . function_call
    (68) factor -> . factor_prima_1
    (93) function_call -> . ID LPAREN RPAREN SEMI
    (94) function_call -> . ID LPAREN function_call_1 RPAREN SEMI
    (95) function_call -> . ID LPAREN function_call_1 RPAREN
    (96) function_call -> . ID LPAREN RPAREN
    (69) factor_prima_1 -> . PLUS varcte
    (70) factor_prima_1 -> . MINUS varcte
    (71) factor_prima_1 -> . varcte
    (72) varcte -> . ID np_add_id_quad
    (73) varcte -> . CTEI np_add_cte_int
    (74) varcte -> . CTEF np_add_cte_float
    (75) varcte -> . CTEC np_add_cte_char
    (76) varcte -> . TRUE np_add_cte_bool
    (77) varcte -> . FALSE np_add_cte_bool

    LPAREN          shift and go to state 54
    LBRACKET        shift and go to state 48
    ID              shift and go to state 57
    PLUS            shift and go to state 58
    MINUS           shift and go to state 60
    CTEI            shift and go to state 61
    CTEF            shift and go to state 62
    CTEC            shift and go to state 63
    TRUE            shift and go to state 64
    FALSE           shift and go to state 65

    exp                            shift and go to state 155
    term                           shift and go to state 52
    factor                         shift and go to state 53
    function_call                  shift and go to state 55
    factor_prima_1                 shift and go to state 56
    varcte                         shift and go to state 59

state 101

    (51) expression1 -> exp GT . exp
    (57) exp -> . term np_add_quadruple
    (58) exp -> . term exp_1
    (61) term -> . factor
    (62) term -> . factor term_2
    (65) factor -> . LPAREN np_add_paren expression RPAREN np_pop_paren
    (66) factor -> . LBRACKET expression RBRACKET
    (67) factor -> . function_call
    (68) factor -> . factor_prima_1
    (93) function_call -> . ID LPAREN RPAREN SEMI
    (94) function_call -> . ID LPAREN function_call_1 RPAREN SEMI
    (95) function_call -> . ID LPAREN function_call_1 RPAREN
    (96) function_call -> . ID LPAREN RPAREN
    (69) factor_prima_1 -> . PLUS varcte
    (70) factor_prima_1 -> . MINUS varcte
    (71) factor_prima_1 -> . varcte
    (72) varcte -> . ID np_add_id_quad
    (73) varcte -> . CTEI np_add_cte_int
    (74) varcte -> . CTEF np_add_cte_float
    (75) varcte -> . CTEC np_add_cte_char
    (76) varcte -> . TRUE np_add_cte_bool
    (77) varcte -> . FALSE np_add_cte_bool

    LPAREN          shift and go to state 54
    LBRACKET        shift and go to state 48
    ID              shift and go to state 57
    PLUS            shift and go to state 58
    MINUS           shift and go to state 60
    CTEI            shift and go to state 61
    CTEF            shift and go to state 62
    CTEC            shift and go to state 63
    TRUE            shift and go to state 64
    FALSE           shift and go to state 65

    exp                            shift and go to state 156
    term                           shift and go to state 52
    factor                         shift and go to state 53
    function_call                  shift and go to state 55
    factor_prima_1                 shift and go to state 56
    varcte                         shift and go to state 59

state 102

    (52) expression1 -> exp GE . exp
    (57) exp -> . term np_add_quadruple
    (58) exp -> . term exp_1
    (61) term -> . factor
    (62) term -> . factor term_2
    (65) factor -> . LPAREN np_add_paren expression RPAREN np_pop_paren
    (66) factor -> . LBRACKET expression RBRACKET
    (67) factor -> . function_call
    (68) factor -> . factor_prima_1
    (93) function_call -> . ID LPAREN RPAREN SEMI
    (94) function_call -> . ID LPAREN function_call_1 RPAREN SEMI
    (95) function_call -> . ID LPAREN function_call_1 RPAREN
    (96) function_call -> . ID LPAREN RPAREN
    (69) factor_prima_1 -> . PLUS varcte
    (70) factor_prima_1 -> . MINUS varcte
    (71) factor_prima_1 -> . varcte
    (72) varcte -> . ID np_add_id_quad
    (73) varcte -> . CTEI np_add_cte_int
    (74) varcte -> . CTEF np_add_cte_float
    (75) varcte -> . CTEC np_add_cte_char
    (76) varcte -> . TRUE np_add_cte_bool
    (77) varcte -> . FALSE np_add_cte_bool

    LPAREN          shift and go to state 54
    LBRACKET        shift and go to state 48
    ID              shift and go to state 57
    PLUS            shift and go to state 58
    MINUS           shift and go to state 60
    CTEI            shift and go to state 61
    CTEF            shift and go to state 62
    CTEC            shift and go to state 63
    TRUE            shift and go to state 64
    FALSE           shift and go to state 65

    exp                            shift and go to state 157
    term                           shift and go to state 52
    factor                         shift and go to state 53
    function_call                  shift and go to state 55
    factor_prima_1                 shift and go to state 56
    varcte                         shift and go to state 59

state 103

    (53) expression1 -> exp EQ . exp
    (57) exp -> . term np_add_quadruple
    (58) exp -> . term exp_1
    (61) term -> . factor
    (62) term -> . factor term_2
    (65) factor -> . LPAREN np_add_paren expression RPAREN np_pop_paren
    (66) factor -> . LBRACKET expression RBRACKET
    (67) factor -> . function_call
    (68) factor -> . factor_prima_1
    (93) function_call -> . ID LPAREN RPAREN SEMI
    (94) function_call -> . ID LPAREN function_call_1 RPAREN SEMI
    (95) function_call -> . ID LPAREN function_call_1 RPAREN
    (96) function_call -> . ID LPAREN RPAREN
    (69) factor_prima_1 -> . PLUS varcte
    (70) factor_prima_1 -> . MINUS varcte
    (71) factor_prima_1 -> . varcte
    (72) varcte -> . ID np_add_id_quad
    (73) varcte -> . CTEI np_add_cte_int
    (74) varcte -> . CTEF np_add_cte_float
    (75) varcte -> . CTEC np_add_cte_char
    (76) varcte -> . TRUE np_add_cte_bool
    (77) varcte -> . FALSE np_add_cte_bool

    LPAREN          shift and go to state 54
    LBRACKET        shift and go to state 48
    ID              shift and go to state 57
    PLUS            shift and go to state 58
    MINUS           shift and go to state 60
    CTEI            shift and go to state 61
    CTEF            shift and go to state 62
    CTEC            shift and go to state 63
    TRUE            shift and go to state 64
    FALSE           shift and go to state 65

    exp                            shift and go to state 158
    term                           shift and go to state 52
    factor                         shift and go to state 53
    function_call                  shift and go to state 55
    factor_prima_1                 shift and go to state 56
    varcte                         shift and go to state 59

state 104

    (54) expression1 -> exp NE . exp
    (57) exp -> . term np_add_quadruple
    (58) exp -> . term exp_1
    (61) term -> . factor
    (62) term -> . factor term_2
    (65) factor -> . LPAREN np_add_paren expression RPAREN np_pop_paren
    (66) factor -> . LBRACKET expression RBRACKET
    (67) factor -> . function_call
    (68) factor -> . factor_prima_1
    (93) function_call -> . ID LPAREN RPAREN SEMI
    (94) function_call -> . ID LPAREN function_call_1 RPAREN SEMI
    (95) function_call -> . ID LPAREN function_call_1 RPAREN
    (96) function_call -> . ID LPAREN RPAREN
    (69) factor_prima_1 -> . PLUS varcte
    (70) factor_prima_1 -> . MINUS varcte
    (71) factor_prima_1 -> . varcte
    (72) varcte -> . ID np_add_id_quad
    (73) varcte -> . CTEI np_add_cte_int
    (74) varcte -> . CTEF np_add_cte_float
    (75) varcte -> . CTEC np_add_cte_char
    (76) varcte -> . TRUE np_add_cte_bool
    (77) varcte -> . FALSE np_add_cte_bool

    LPAREN          shift and go to state 54
    LBRACKET        shift and go to state 48
    ID              shift and go to state 57
    PLUS            shift and go to state 58
    MINUS           shift and go to state 60
    CTEI            shift and go to state 61
    CTEF            shift and go to state 62
    CTEC            shift and go to state 63
    TRUE            shift and go to state 64
    FALSE           shift and go to state 65

    exp                            shift and go to state 159
    term                           shift and go to state 52
    factor                         shift and go to state 53
    function_call                  shift and go to state 55
    factor_prima_1                 shift and go to state 56
    varcte                         shift and go to state 59

state 105

    (55) expression1 -> exp AND . exp
    (57) exp -> . term np_add_quadruple
    (58) exp -> . term exp_1
    (61) term -> . factor
    (62) term -> . factor term_2
    (65) factor -> . LPAREN np_add_paren expression RPAREN np_pop_paren
    (66) factor -> . LBRACKET expression RBRACKET
    (67) factor -> . function_call
    (68) factor -> . factor_prima_1
    (93) function_call -> . ID LPAREN RPAREN SEMI
    (94) function_call -> . ID LPAREN function_call_1 RPAREN SEMI
    (95) function_call -> . ID LPAREN function_call_1 RPAREN
    (96) function_call -> . ID LPAREN RPAREN
    (69) factor_prima_1 -> . PLUS varcte
    (70) factor_prima_1 -> . MINUS varcte
    (71) factor_prima_1 -> . varcte
    (72) varcte -> . ID np_add_id_quad
    (73) varcte -> . CTEI np_add_cte_int
    (74) varcte -> . CTEF np_add_cte_float
    (75) varcte -> . CTEC np_add_cte_char
    (76) varcte -> . TRUE np_add_cte_bool
    (77) varcte -> . FALSE np_add_cte_bool

    LPAREN          shift and go to state 54
    LBRACKET        shift and go to state 48
    ID              shift and go to state 57
    PLUS            shift and go to state 58
    MINUS           shift and go to state 60
    CTEI            shift and go to state 61
    CTEF            shift and go to state 62
    CTEC            shift and go to state 63
    TRUE            shift and go to state 64
    FALSE           shift and go to state 65

    exp                            shift and go to state 160
    term                           shift and go to state 52
    factor                         shift and go to state 53
    function_call                  shift and go to state 55
    factor_prima_1                 shift and go to state 56
    varcte                         shift and go to state 59

state 106

    (56) expression1 -> exp OR . exp
    (57) exp -> . term np_add_quadruple
    (58) exp -> . term exp_1
    (61) term -> . factor
    (62) term -> . factor term_2
    (65) factor -> . LPAREN np_add_paren expression RPAREN np_pop_paren
    (66) factor -> . LBRACKET expression RBRACKET
    (67) factor -> . function_call
    (68) factor -> . factor_prima_1
    (93) function_call -> . ID LPAREN RPAREN SEMI
    (94) function_call -> . ID LPAREN function_call_1 RPAREN SEMI
    (95) function_call -> . ID LPAREN function_call_1 RPAREN
    (96) function_call -> . ID LPAREN RPAREN
    (69) factor_prima_1 -> . PLUS varcte
    (70) factor_prima_1 -> . MINUS varcte
    (71) factor_prima_1 -> . varcte
    (72) varcte -> . ID np_add_id_quad
    (73) varcte -> . CTEI np_add_cte_int
    (74) varcte -> . CTEF np_add_cte_float
    (75) varcte -> . CTEC np_add_cte_char
    (76) varcte -> . TRUE np_add_cte_bool
    (77) varcte -> . FALSE np_add_cte_bool

    LPAREN          shift and go to state 54
    LBRACKET        shift and go to state 48
    ID              shift and go to state 57
    PLUS            shift and go to state 58
    MINUS           shift and go to state 60
    CTEI            shift and go to state 61
    CTEF            shift and go to state 62
    CTEC            shift and go to state 63
    TRUE            shift and go to state 64
    FALSE           shift and go to state 65

    exp                            shift and go to state 161
    term                           shift and go to state 52
    factor                         shift and go to state 53
    function_call                  shift and go to state 55
    factor_prima_1                 shift and go to state 56
    varcte                         shift and go to state 59

state 107

    (57) exp -> term np_add_quadruple .

    LT              reduce using rule 57 (exp -> term np_add_quadruple .)
    LE              reduce using rule 57 (exp -> term np_add_quadruple .)
    GT              reduce using rule 57 (exp -> term np_add_quadruple .)
    GE              reduce using rule 57 (exp -> term np_add_quadruple .)
    EQ              reduce using rule 57 (exp -> term np_add_quadruple .)
    NE              reduce using rule 57 (exp -> term np_add_quadruple .)
    AND             reduce using rule 57 (exp -> term np_add_quadruple .)
    OR              reduce using rule 57 (exp -> term np_add_quadruple .)
    RBRACKET        reduce using rule 57 (exp -> term np_add_quadruple .)
    ID              reduce using rule 57 (exp -> term np_add_quadruple .)
    IF              reduce using rule 57 (exp -> term np_add_quadruple .)
    PRINT           reduce using rule 57 (exp -> term np_add_quadruple .)
    READ            reduce using rule 57 (exp -> term np_add_quadruple .)
    RETURN          reduce using rule 57 (exp -> term np_add_quadruple .)
    FOR             reduce using rule 57 (exp -> term np_add_quadruple .)
    WHILE           reduce using rule 57 (exp -> term np_add_quadruple .)
    MEAN            reduce using rule 57 (exp -> term np_add_quadruple .)
    MEDIAN          reduce using rule 57 (exp -> term np_add_quadruple .)
    MODE            reduce using rule 57 (exp -> term np_add_quadruple .)
    VARIANCE        reduce using rule 57 (exp -> term np_add_quadruple .)
    STDEV           reduce using rule 57 (exp -> term np_add_quadruple .)
    LPAREN          reduce using rule 57 (exp -> term np_add_quadruple .)
    LBRACKET        reduce using rule 57 (exp -> term np_add_quadruple .)
    PLUS            reduce using rule 57 (exp -> term np_add_quadruple .)
    MINUS           reduce using rule 57 (exp -> term np_add_quadruple .)
    CTEI            reduce using rule 57 (exp -> term np_add_quadruple .)
    CTEF            reduce using rule 57 (exp -> term np_add_quadruple .)
    CTEC            reduce using rule 57 (exp -> term np_add_quadruple .)
    TRUE            reduce using rule 57 (exp -> term np_add_quadruple .)
    FALSE           reduce using rule 57 (exp -> term np_add_quadruple .)
    RBRACE          reduce using rule 57 (exp -> term np_add_quadruple .)
    SEMI            reduce using rule 57 (exp -> term np_add_quadruple .)
    RPAREN          reduce using rule 57 (exp -> term np_add_quadruple .)
    COMMA           reduce using rule 57 (exp -> term np_add_quadruple .)
    TO              reduce using rule 57 (exp -> term np_add_quadruple .)
    BY              reduce using rule 57 (exp -> term np_add_quadruple .)


state 108

    (58) exp -> term exp_1 .

    LT              reduce using rule 58 (exp -> term exp_1 .)
    LE              reduce using rule 58 (exp -> term exp_1 .)
    GT              reduce using rule 58 (exp -> term exp_1 .)
    GE              reduce using rule 58 (exp -> term exp_1 .)
    EQ              reduce using rule 58 (exp -> term exp_1 .)
    NE              reduce using rule 58 (exp -> term exp_1 .)
    AND             reduce using rule 58 (exp -> term exp_1 .)
    OR              reduce using rule 58 (exp -> term exp_1 .)
    RBRACKET        reduce using rule 58 (exp -> term exp_1 .)
    ID              reduce using rule 58 (exp -> term exp_1 .)
    IF              reduce using rule 58 (exp -> term exp_1 .)
    PRINT           reduce using rule 58 (exp -> term exp_1 .)
    READ            reduce using rule 58 (exp -> term exp_1 .)
    RETURN          reduce using rule 58 (exp -> term exp_1 .)
    FOR             reduce using rule 58 (exp -> term exp_1 .)
    WHILE           reduce using rule 58 (exp -> term exp_1 .)
    MEAN            reduce using rule 58 (exp -> term exp_1 .)
    MEDIAN          reduce using rule 58 (exp -> term exp_1 .)
    MODE            reduce using rule 58 (exp -> term exp_1 .)
    VARIANCE        reduce using rule 58 (exp -> term exp_1 .)
    STDEV           reduce using rule 58 (exp -> term exp_1 .)
    LPAREN          reduce using rule 58 (exp -> term exp_1 .)
    LBRACKET        reduce using rule 58 (exp -> term exp_1 .)
    PLUS            reduce using rule 58 (exp -> term exp_1 .)
    MINUS           reduce using rule 58 (exp -> term exp_1 .)
    CTEI            reduce using rule 58 (exp -> term exp_1 .)
    CTEF            reduce using rule 58 (exp -> term exp_1 .)
    CTEC            reduce using rule 58 (exp -> term exp_1 .)
    TRUE            reduce using rule 58 (exp -> term exp_1 .)
    FALSE           reduce using rule 58 (exp -> term exp_1 .)
    RBRACE          reduce using rule 58 (exp -> term exp_1 .)
    SEMI            reduce using rule 58 (exp -> term exp_1 .)
    RPAREN          reduce using rule 58 (exp -> term exp_1 .)
    COMMA           reduce using rule 58 (exp -> term exp_1 .)
    TO              reduce using rule 58 (exp -> term exp_1 .)
    BY              reduce using rule 58 (exp -> term exp_1 .)


state 109

    (59) exp_1 -> PLUS . np_add_operator exp
    (115) np_add_operator -> .

    LPAREN          reduce using rule 115 (np_add_operator -> .)
    LBRACKET        reduce using rule 115 (np_add_operator -> .)
    ID              reduce using rule 115 (np_add_operator -> .)
    PLUS            reduce using rule 115 (np_add_operator -> .)
    MINUS           reduce using rule 115 (np_add_operator -> .)
    CTEI            reduce using rule 115 (np_add_operator -> .)
    CTEF            reduce using rule 115 (np_add_operator -> .)
    CTEC            reduce using rule 115 (np_add_operator -> .)
    TRUE            reduce using rule 115 (np_add_operator -> .)
    FALSE           reduce using rule 115 (np_add_operator -> .)

    np_add_operator                shift and go to state 162

state 110

    (60) exp_1 -> MINUS . np_add_operator exp
    (115) np_add_operator -> .

    LPAREN          reduce using rule 115 (np_add_operator -> .)
    LBRACKET        reduce using rule 115 (np_add_operator -> .)
    ID              reduce using rule 115 (np_add_operator -> .)
    PLUS            reduce using rule 115 (np_add_operator -> .)
    MINUS           reduce using rule 115 (np_add_operator -> .)
    CTEI            reduce using rule 115 (np_add_operator -> .)
    CTEF            reduce using rule 115 (np_add_operator -> .)
    CTEC            reduce using rule 115 (np_add_operator -> .)
    TRUE            reduce using rule 115 (np_add_operator -> .)
    FALSE           reduce using rule 115 (np_add_operator -> .)

    np_add_operator                shift and go to state 163

state 111

    (62) term -> factor term_2 .

    PLUS            reduce using rule 62 (term -> factor term_2 .)
    MINUS           reduce using rule 62 (term -> factor term_2 .)
    LT              reduce using rule 62 (term -> factor term_2 .)
    LE              reduce using rule 62 (term -> factor term_2 .)
    GT              reduce using rule 62 (term -> factor term_2 .)
    GE              reduce using rule 62 (term -> factor term_2 .)
    EQ              reduce using rule 62 (term -> factor term_2 .)
    NE              reduce using rule 62 (term -> factor term_2 .)
    AND             reduce using rule 62 (term -> factor term_2 .)
    OR              reduce using rule 62 (term -> factor term_2 .)
    RBRACKET        reduce using rule 62 (term -> factor term_2 .)
    ID              reduce using rule 62 (term -> factor term_2 .)
    IF              reduce using rule 62 (term -> factor term_2 .)
    PRINT           reduce using rule 62 (term -> factor term_2 .)
    READ            reduce using rule 62 (term -> factor term_2 .)
    RETURN          reduce using rule 62 (term -> factor term_2 .)
    FOR             reduce using rule 62 (term -> factor term_2 .)
    WHILE           reduce using rule 62 (term -> factor term_2 .)
    MEAN            reduce using rule 62 (term -> factor term_2 .)
    MEDIAN          reduce using rule 62 (term -> factor term_2 .)
    MODE            reduce using rule 62 (term -> factor term_2 .)
    VARIANCE        reduce using rule 62 (term -> factor term_2 .)
    STDEV           reduce using rule 62 (term -> factor term_2 .)
    LPAREN          reduce using rule 62 (term -> factor term_2 .)
    LBRACKET        reduce using rule 62 (term -> factor term_2 .)
    CTEI            reduce using rule 62 (term -> factor term_2 .)
    CTEF            reduce using rule 62 (term -> factor term_2 .)
    CTEC            reduce using rule 62 (term -> factor term_2 .)
    TRUE            reduce using rule 62 (term -> factor term_2 .)
    FALSE           reduce using rule 62 (term -> factor term_2 .)
    RBRACE          reduce using rule 62 (term -> factor term_2 .)
    SEMI            reduce using rule 62 (term -> factor term_2 .)
    RPAREN          reduce using rule 62 (term -> factor term_2 .)
    COMMA           reduce using rule 62 (term -> factor term_2 .)
    TO              reduce using rule 62 (term -> factor term_2 .)
    BY              reduce using rule 62 (term -> factor term_2 .)


state 112

    (63) term_2 -> TIMES . np_add_operator term
    (115) np_add_operator -> .

    LPAREN          reduce using rule 115 (np_add_operator -> .)
    LBRACKET        reduce using rule 115 (np_add_operator -> .)
    ID              reduce using rule 115 (np_add_operator -> .)
    PLUS            reduce using rule 115 (np_add_operator -> .)
    MINUS           reduce using rule 115 (np_add_operator -> .)
    CTEI            reduce using rule 115 (np_add_operator -> .)
    CTEF            reduce using rule 115 (np_add_operator -> .)
    CTEC            reduce using rule 115 (np_add_operator -> .)
    TRUE            reduce using rule 115 (np_add_operator -> .)
    FALSE           reduce using rule 115 (np_add_operator -> .)

    np_add_operator                shift and go to state 164

state 113

    (64) term_2 -> DIVIDE . np_add_operator term
    (115) np_add_operator -> .

    LPAREN          reduce using rule 115 (np_add_operator -> .)
    LBRACKET        reduce using rule 115 (np_add_operator -> .)
    ID              reduce using rule 115 (np_add_operator -> .)
    PLUS            reduce using rule 115 (np_add_operator -> .)
    MINUS           reduce using rule 115 (np_add_operator -> .)
    CTEI            reduce using rule 115 (np_add_operator -> .)
    CTEF            reduce using rule 115 (np_add_operator -> .)
    CTEC            reduce using rule 115 (np_add_operator -> .)
    TRUE            reduce using rule 115 (np_add_operator -> .)
    FALSE           reduce using rule 115 (np_add_operator -> .)

    np_add_operator                shift and go to state 165

state 114

    (65) factor -> LPAREN np_add_paren . expression RPAREN np_pop_paren
    (47) expression -> . exp
    (48) expression -> . expression1
    (57) exp -> . term np_add_quadruple
    (58) exp -> . term exp_1
    (49) expression1 -> . exp LT exp
    (50) expression1 -> . exp LE exp
    (51) expression1 -> . exp GT exp
    (52) expression1 -> . exp GE exp
    (53) expression1 -> . exp EQ exp
    (54) expression1 -> . exp NE exp
    (55) expression1 -> . exp AND exp
    (56) expression1 -> . exp OR exp
    (61) term -> . factor
    (62) term -> . factor term_2
    (65) factor -> . LPAREN np_add_paren expression RPAREN np_pop_paren
    (66) factor -> . LBRACKET expression RBRACKET
    (67) factor -> . function_call
    (68) factor -> . factor_prima_1
    (93) function_call -> . ID LPAREN RPAREN SEMI
    (94) function_call -> . ID LPAREN function_call_1 RPAREN SEMI
    (95) function_call -> . ID LPAREN function_call_1 RPAREN
    (96) function_call -> . ID LPAREN RPAREN
    (69) factor_prima_1 -> . PLUS varcte
    (70) factor_prima_1 -> . MINUS varcte
    (71) factor_prima_1 -> . varcte
    (72) varcte -> . ID np_add_id_quad
    (73) varcte -> . CTEI np_add_cte_int
    (74) varcte -> . CTEF np_add_cte_float
    (75) varcte -> . CTEC np_add_cte_char
    (76) varcte -> . TRUE np_add_cte_bool
    (77) varcte -> . FALSE np_add_cte_bool

    LPAREN          shift and go to state 54
    LBRACKET        shift and go to state 48
    ID              shift and go to state 57
    PLUS            shift and go to state 58
    MINUS           shift and go to state 60
    CTEI            shift and go to state 61
    CTEF            shift and go to state 62
    CTEC            shift and go to state 63
    TRUE            shift and go to state 64
    FALSE           shift and go to state 65

    expression                     shift and go to state 166
    exp                            shift and go to state 50
    expression1                    shift and go to state 51
    term                           shift and go to state 52
    factor                         shift and go to state 53
    function_call                  shift and go to state 55
    factor_prima_1                 shift and go to state 56
    varcte                         shift and go to state 59

state 115

    (93) function_call -> ID LPAREN . RPAREN SEMI
    (94) function_call -> ID LPAREN . function_call_1 RPAREN SEMI
    (95) function_call -> ID LPAREN . function_call_1 RPAREN
    (96) function_call -> ID LPAREN . RPAREN
    (97) function_call_1 -> . expression
    (98) function_call_1 -> . expression COMMA function_call_1
    (47) expression -> . exp
    (48) expression -> . expression1
    (57) exp -> . term np_add_quadruple
    (58) exp -> . term exp_1
    (49) expression1 -> . exp LT exp
    (50) expression1 -> . exp LE exp
    (51) expression1 -> . exp GT exp
    (52) expression1 -> . exp GE exp
    (53) expression1 -> . exp EQ exp
    (54) expression1 -> . exp NE exp
    (55) expression1 -> . exp AND exp
    (56) expression1 -> . exp OR exp
    (61) term -> . factor
    (62) term -> . factor term_2
    (65) factor -> . LPAREN np_add_paren expression RPAREN np_pop_paren
    (66) factor -> . LBRACKET expression RBRACKET
    (67) factor -> . function_call
    (68) factor -> . factor_prima_1
    (93) function_call -> . ID LPAREN RPAREN SEMI
    (94) function_call -> . ID LPAREN function_call_1 RPAREN SEMI
    (95) function_call -> . ID LPAREN function_call_1 RPAREN
    (96) function_call -> . ID LPAREN RPAREN
    (69) factor_prima_1 -> . PLUS varcte
    (70) factor_prima_1 -> . MINUS varcte
    (71) factor_prima_1 -> . varcte
    (72) varcte -> . ID np_add_id_quad
    (73) varcte -> . CTEI np_add_cte_int
    (74) varcte -> . CTEF np_add_cte_float
    (75) varcte -> . CTEC np_add_cte_char
    (76) varcte -> . TRUE np_add_cte_bool
    (77) varcte -> . FALSE np_add_cte_bool

    RPAREN          shift and go to state 167
    LPAREN          shift and go to state 54
    LBRACKET        shift and go to state 48
    ID              shift and go to state 57
    PLUS            shift and go to state 58
    MINUS           shift and go to state 60
    CTEI            shift and go to state 61
    CTEF            shift and go to state 62
    CTEC            shift and go to state 63
    TRUE            shift and go to state 64
    FALSE           shift and go to state 65

    function_call_1                shift and go to state 168
    expression                     shift and go to state 169
    exp                            shift and go to state 50
    expression1                    shift and go to state 51
    term                           shift and go to state 52
    factor                         shift and go to state 53
    function_call                  shift and go to state 55
    factor_prima_1                 shift and go to state 56
    varcte                         shift and go to state 59

state 116

    (72) varcte -> ID np_add_id_quad .

    TIMES           reduce using rule 72 (varcte -> ID np_add_id_quad .)
    DIVIDE          reduce using rule 72 (varcte -> ID np_add_id_quad .)
    PLUS            reduce using rule 72 (varcte -> ID np_add_id_quad .)
    MINUS           reduce using rule 72 (varcte -> ID np_add_id_quad .)
    LT              reduce using rule 72 (varcte -> ID np_add_id_quad .)
    LE              reduce using rule 72 (varcte -> ID np_add_id_quad .)
    GT              reduce using rule 72 (varcte -> ID np_add_id_quad .)
    GE              reduce using rule 72 (varcte -> ID np_add_id_quad .)
    EQ              reduce using rule 72 (varcte -> ID np_add_id_quad .)
    NE              reduce using rule 72 (varcte -> ID np_add_id_quad .)
    AND             reduce using rule 72 (varcte -> ID np_add_id_quad .)
    OR              reduce using rule 72 (varcte -> ID np_add_id_quad .)
    RBRACKET        reduce using rule 72 (varcte -> ID np_add_id_quad .)
    ID              reduce using rule 72 (varcte -> ID np_add_id_quad .)
    IF              reduce using rule 72 (varcte -> ID np_add_id_quad .)
    PRINT           reduce using rule 72 (varcte -> ID np_add_id_quad .)
    READ            reduce using rule 72 (varcte -> ID np_add_id_quad .)
    RETURN          reduce using rule 72 (varcte -> ID np_add_id_quad .)
    FOR             reduce using rule 72 (varcte -> ID np_add_id_quad .)
    WHILE           reduce using rule 72 (varcte -> ID np_add_id_quad .)
    MEAN            reduce using rule 72 (varcte -> ID np_add_id_quad .)
    MEDIAN          reduce using rule 72 (varcte -> ID np_add_id_quad .)
    MODE            reduce using rule 72 (varcte -> ID np_add_id_quad .)
    VARIANCE        reduce using rule 72 (varcte -> ID np_add_id_quad .)
    STDEV           reduce using rule 72 (varcte -> ID np_add_id_quad .)
    LPAREN          reduce using rule 72 (varcte -> ID np_add_id_quad .)
    LBRACKET        reduce using rule 72 (varcte -> ID np_add_id_quad .)
    CTEI            reduce using rule 72 (varcte -> ID np_add_id_quad .)
    CTEF            reduce using rule 72 (varcte -> ID np_add_id_quad .)
    CTEC            reduce using rule 72 (varcte -> ID np_add_id_quad .)
    TRUE            reduce using rule 72 (varcte -> ID np_add_id_quad .)
    FALSE           reduce using rule 72 (varcte -> ID np_add_id_quad .)
    RBRACE          reduce using rule 72 (varcte -> ID np_add_id_quad .)
    SEMI            reduce using rule 72 (varcte -> ID np_add_id_quad .)
    RPAREN          reduce using rule 72 (varcte -> ID np_add_id_quad .)
    COMMA           reduce using rule 72 (varcte -> ID np_add_id_quad .)
    TO              reduce using rule 72 (varcte -> ID np_add_id_quad .)
    BY              reduce using rule 72 (varcte -> ID np_add_id_quad .)


state 117

    (69) factor_prima_1 -> PLUS varcte .

    TIMES           reduce using rule 69 (factor_prima_1 -> PLUS varcte .)
    DIVIDE          reduce using rule 69 (factor_prima_1 -> PLUS varcte .)
    PLUS            reduce using rule 69 (factor_prima_1 -> PLUS varcte .)
    MINUS           reduce using rule 69 (factor_prima_1 -> PLUS varcte .)
    LT              reduce using rule 69 (factor_prima_1 -> PLUS varcte .)
    LE              reduce using rule 69 (factor_prima_1 -> PLUS varcte .)
    GT              reduce using rule 69 (factor_prima_1 -> PLUS varcte .)
    GE              reduce using rule 69 (factor_prima_1 -> PLUS varcte .)
    EQ              reduce using rule 69 (factor_prima_1 -> PLUS varcte .)
    NE              reduce using rule 69 (factor_prima_1 -> PLUS varcte .)
    AND             reduce using rule 69 (factor_prima_1 -> PLUS varcte .)
    OR              reduce using rule 69 (factor_prima_1 -> PLUS varcte .)
    RBRACKET        reduce using rule 69 (factor_prima_1 -> PLUS varcte .)
    ID              reduce using rule 69 (factor_prima_1 -> PLUS varcte .)
    IF              reduce using rule 69 (factor_prima_1 -> PLUS varcte .)
    PRINT           reduce using rule 69 (factor_prima_1 -> PLUS varcte .)
    READ            reduce using rule 69 (factor_prima_1 -> PLUS varcte .)
    RETURN          reduce using rule 69 (factor_prima_1 -> PLUS varcte .)
    FOR             reduce using rule 69 (factor_prima_1 -> PLUS varcte .)
    WHILE           reduce using rule 69 (factor_prima_1 -> PLUS varcte .)
    MEAN            reduce using rule 69 (factor_prima_1 -> PLUS varcte .)
    MEDIAN          reduce using rule 69 (factor_prima_1 -> PLUS varcte .)
    MODE            reduce using rule 69 (factor_prima_1 -> PLUS varcte .)
    VARIANCE        reduce using rule 69 (factor_prima_1 -> PLUS varcte .)
    STDEV           reduce using rule 69 (factor_prima_1 -> PLUS varcte .)
    LPAREN          reduce using rule 69 (factor_prima_1 -> PLUS varcte .)
    LBRACKET        reduce using rule 69 (factor_prima_1 -> PLUS varcte .)
    CTEI            reduce using rule 69 (factor_prima_1 -> PLUS varcte .)
    CTEF            reduce using rule 69 (factor_prima_1 -> PLUS varcte .)
    CTEC            reduce using rule 69 (factor_prima_1 -> PLUS varcte .)
    TRUE            reduce using rule 69 (factor_prima_1 -> PLUS varcte .)
    FALSE           reduce using rule 69 (factor_prima_1 -> PLUS varcte .)
    RBRACE          reduce using rule 69 (factor_prima_1 -> PLUS varcte .)
    SEMI            reduce using rule 69 (factor_prima_1 -> PLUS varcte .)
    RPAREN          reduce using rule 69 (factor_prima_1 -> PLUS varcte .)
    COMMA           reduce using rule 69 (factor_prima_1 -> PLUS varcte .)
    TO              reduce using rule 69 (factor_prima_1 -> PLUS varcte .)
    BY              reduce using rule 69 (factor_prima_1 -> PLUS varcte .)


state 118

    (72) varcte -> ID . np_add_id_quad
    (110) np_add_id_quad -> .

    TIMES           reduce using rule 110 (np_add_id_quad -> .)
    DIVIDE          reduce using rule 110 (np_add_id_quad -> .)
    PLUS            reduce using rule 110 (np_add_id_quad -> .)
    MINUS           reduce using rule 110 (np_add_id_quad -> .)
    LT              reduce using rule 110 (np_add_id_quad -> .)
    LE              reduce using rule 110 (np_add_id_quad -> .)
    GT              reduce using rule 110 (np_add_id_quad -> .)
    GE              reduce using rule 110 (np_add_id_quad -> .)
    EQ              reduce using rule 110 (np_add_id_quad -> .)
    NE              reduce using rule 110 (np_add_id_quad -> .)
    AND             reduce using rule 110 (np_add_id_quad -> .)
    OR              reduce using rule 110 (np_add_id_quad -> .)
    RBRACKET        reduce using rule 110 (np_add_id_quad -> .)
    ID              reduce using rule 110 (np_add_id_quad -> .)
    IF              reduce using rule 110 (np_add_id_quad -> .)
    PRINT           reduce using rule 110 (np_add_id_quad -> .)
    READ            reduce using rule 110 (np_add_id_quad -> .)
    RETURN          reduce using rule 110 (np_add_id_quad -> .)
    FOR             reduce using rule 110 (np_add_id_quad -> .)
    WHILE           reduce using rule 110 (np_add_id_quad -> .)
    MEAN            reduce using rule 110 (np_add_id_quad -> .)
    MEDIAN          reduce using rule 110 (np_add_id_quad -> .)
    MODE            reduce using rule 110 (np_add_id_quad -> .)
    VARIANCE        reduce using rule 110 (np_add_id_quad -> .)
    STDEV           reduce using rule 110 (np_add_id_quad -> .)
    LPAREN          reduce using rule 110 (np_add_id_quad -> .)
    LBRACKET        reduce using rule 110 (np_add_id_quad -> .)
    CTEI            reduce using rule 110 (np_add_id_quad -> .)
    CTEF            reduce using rule 110 (np_add_id_quad -> .)
    CTEC            reduce using rule 110 (np_add_id_quad -> .)
    TRUE            reduce using rule 110 (np_add_id_quad -> .)
    FALSE           reduce using rule 110 (np_add_id_quad -> .)
    RBRACE          reduce using rule 110 (np_add_id_quad -> .)
    SEMI            reduce using rule 110 (np_add_id_quad -> .)
    RPAREN          reduce using rule 110 (np_add_id_quad -> .)
    COMMA           reduce using rule 110 (np_add_id_quad -> .)
    TO              reduce using rule 110 (np_add_id_quad -> .)
    BY              reduce using rule 110 (np_add_id_quad -> .)

    np_add_id_quad                 shift and go to state 116

state 119

    (70) factor_prima_1 -> MINUS varcte .

    TIMES           reduce using rule 70 (factor_prima_1 -> MINUS varcte .)
    DIVIDE          reduce using rule 70 (factor_prima_1 -> MINUS varcte .)
    PLUS            reduce using rule 70 (factor_prima_1 -> MINUS varcte .)
    MINUS           reduce using rule 70 (factor_prima_1 -> MINUS varcte .)
    LT              reduce using rule 70 (factor_prima_1 -> MINUS varcte .)
    LE              reduce using rule 70 (factor_prima_1 -> MINUS varcte .)
    GT              reduce using rule 70 (factor_prima_1 -> MINUS varcte .)
    GE              reduce using rule 70 (factor_prima_1 -> MINUS varcte .)
    EQ              reduce using rule 70 (factor_prima_1 -> MINUS varcte .)
    NE              reduce using rule 70 (factor_prima_1 -> MINUS varcte .)
    AND             reduce using rule 70 (factor_prima_1 -> MINUS varcte .)
    OR              reduce using rule 70 (factor_prima_1 -> MINUS varcte .)
    RBRACKET        reduce using rule 70 (factor_prima_1 -> MINUS varcte .)
    ID              reduce using rule 70 (factor_prima_1 -> MINUS varcte .)
    IF              reduce using rule 70 (factor_prima_1 -> MINUS varcte .)
    PRINT           reduce using rule 70 (factor_prima_1 -> MINUS varcte .)
    READ            reduce using rule 70 (factor_prima_1 -> MINUS varcte .)
    RETURN          reduce using rule 70 (factor_prima_1 -> MINUS varcte .)
    FOR             reduce using rule 70 (factor_prima_1 -> MINUS varcte .)
    WHILE           reduce using rule 70 (factor_prima_1 -> MINUS varcte .)
    MEAN            reduce using rule 70 (factor_prima_1 -> MINUS varcte .)
    MEDIAN          reduce using rule 70 (factor_prima_1 -> MINUS varcte .)
    MODE            reduce using rule 70 (factor_prima_1 -> MINUS varcte .)
    VARIANCE        reduce using rule 70 (factor_prima_1 -> MINUS varcte .)
    STDEV           reduce using rule 70 (factor_prima_1 -> MINUS varcte .)
    LPAREN          reduce using rule 70 (factor_prima_1 -> MINUS varcte .)
    LBRACKET        reduce using rule 70 (factor_prima_1 -> MINUS varcte .)
    CTEI            reduce using rule 70 (factor_prima_1 -> MINUS varcte .)
    CTEF            reduce using rule 70 (factor_prima_1 -> MINUS varcte .)
    CTEC            reduce using rule 70 (factor_prima_1 -> MINUS varcte .)
    TRUE            reduce using rule 70 (factor_prima_1 -> MINUS varcte .)
    FALSE           reduce using rule 70 (factor_prima_1 -> MINUS varcte .)
    RBRACE          reduce using rule 70 (factor_prima_1 -> MINUS varcte .)
    SEMI            reduce using rule 70 (factor_prima_1 -> MINUS varcte .)
    RPAREN          reduce using rule 70 (factor_prima_1 -> MINUS varcte .)
    COMMA           reduce using rule 70 (factor_prima_1 -> MINUS varcte .)
    TO              reduce using rule 70 (factor_prima_1 -> MINUS varcte .)
    BY              reduce using rule 70 (factor_prima_1 -> MINUS varcte .)


state 120

    (73) varcte -> CTEI np_add_cte_int .

    TIMES           reduce using rule 73 (varcte -> CTEI np_add_cte_int .)
    DIVIDE          reduce using rule 73 (varcte -> CTEI np_add_cte_int .)
    PLUS            reduce using rule 73 (varcte -> CTEI np_add_cte_int .)
    MINUS           reduce using rule 73 (varcte -> CTEI np_add_cte_int .)
    LT              reduce using rule 73 (varcte -> CTEI np_add_cte_int .)
    LE              reduce using rule 73 (varcte -> CTEI np_add_cte_int .)
    GT              reduce using rule 73 (varcte -> CTEI np_add_cte_int .)
    GE              reduce using rule 73 (varcte -> CTEI np_add_cte_int .)
    EQ              reduce using rule 73 (varcte -> CTEI np_add_cte_int .)
    NE              reduce using rule 73 (varcte -> CTEI np_add_cte_int .)
    AND             reduce using rule 73 (varcte -> CTEI np_add_cte_int .)
    OR              reduce using rule 73 (varcte -> CTEI np_add_cte_int .)
    RBRACKET        reduce using rule 73 (varcte -> CTEI np_add_cte_int .)
    ID              reduce using rule 73 (varcte -> CTEI np_add_cte_int .)
    IF              reduce using rule 73 (varcte -> CTEI np_add_cte_int .)
    PRINT           reduce using rule 73 (varcte -> CTEI np_add_cte_int .)
    READ            reduce using rule 73 (varcte -> CTEI np_add_cte_int .)
    RETURN          reduce using rule 73 (varcte -> CTEI np_add_cte_int .)
    FOR             reduce using rule 73 (varcte -> CTEI np_add_cte_int .)
    WHILE           reduce using rule 73 (varcte -> CTEI np_add_cte_int .)
    MEAN            reduce using rule 73 (varcte -> CTEI np_add_cte_int .)
    MEDIAN          reduce using rule 73 (varcte -> CTEI np_add_cte_int .)
    MODE            reduce using rule 73 (varcte -> CTEI np_add_cte_int .)
    VARIANCE        reduce using rule 73 (varcte -> CTEI np_add_cte_int .)
    STDEV           reduce using rule 73 (varcte -> CTEI np_add_cte_int .)
    LPAREN          reduce using rule 73 (varcte -> CTEI np_add_cte_int .)
    LBRACKET        reduce using rule 73 (varcte -> CTEI np_add_cte_int .)
    CTEI            reduce using rule 73 (varcte -> CTEI np_add_cte_int .)
    CTEF            reduce using rule 73 (varcte -> CTEI np_add_cte_int .)
    CTEC            reduce using rule 73 (varcte -> CTEI np_add_cte_int .)
    TRUE            reduce using rule 73 (varcte -> CTEI np_add_cte_int .)
    FALSE           reduce using rule 73 (varcte -> CTEI np_add_cte_int .)
    RBRACE          reduce using rule 73 (varcte -> CTEI np_add_cte_int .)
    SEMI            reduce using rule 73 (varcte -> CTEI np_add_cte_int .)
    RPAREN          reduce using rule 73 (varcte -> CTEI np_add_cte_int .)
    COMMA           reduce using rule 73 (varcte -> CTEI np_add_cte_int .)
    TO              reduce using rule 73 (varcte -> CTEI np_add_cte_int .)
    BY              reduce using rule 73 (varcte -> CTEI np_add_cte_int .)


state 121

    (74) varcte -> CTEF np_add_cte_float .

    TIMES           reduce using rule 74 (varcte -> CTEF np_add_cte_float .)
    DIVIDE          reduce using rule 74 (varcte -> CTEF np_add_cte_float .)
    PLUS            reduce using rule 74 (varcte -> CTEF np_add_cte_float .)
    MINUS           reduce using rule 74 (varcte -> CTEF np_add_cte_float .)
    LT              reduce using rule 74 (varcte -> CTEF np_add_cte_float .)
    LE              reduce using rule 74 (varcte -> CTEF np_add_cte_float .)
    GT              reduce using rule 74 (varcte -> CTEF np_add_cte_float .)
    GE              reduce using rule 74 (varcte -> CTEF np_add_cte_float .)
    EQ              reduce using rule 74 (varcte -> CTEF np_add_cte_float .)
    NE              reduce using rule 74 (varcte -> CTEF np_add_cte_float .)
    AND             reduce using rule 74 (varcte -> CTEF np_add_cte_float .)
    OR              reduce using rule 74 (varcte -> CTEF np_add_cte_float .)
    RBRACKET        reduce using rule 74 (varcte -> CTEF np_add_cte_float .)
    ID              reduce using rule 74 (varcte -> CTEF np_add_cte_float .)
    IF              reduce using rule 74 (varcte -> CTEF np_add_cte_float .)
    PRINT           reduce using rule 74 (varcte -> CTEF np_add_cte_float .)
    READ            reduce using rule 74 (varcte -> CTEF np_add_cte_float .)
    RETURN          reduce using rule 74 (varcte -> CTEF np_add_cte_float .)
    FOR             reduce using rule 74 (varcte -> CTEF np_add_cte_float .)
    WHILE           reduce using rule 74 (varcte -> CTEF np_add_cte_float .)
    MEAN            reduce using rule 74 (varcte -> CTEF np_add_cte_float .)
    MEDIAN          reduce using rule 74 (varcte -> CTEF np_add_cte_float .)
    MODE            reduce using rule 74 (varcte -> CTEF np_add_cte_float .)
    VARIANCE        reduce using rule 74 (varcte -> CTEF np_add_cte_float .)
    STDEV           reduce using rule 74 (varcte -> CTEF np_add_cte_float .)
    LPAREN          reduce using rule 74 (varcte -> CTEF np_add_cte_float .)
    LBRACKET        reduce using rule 74 (varcte -> CTEF np_add_cte_float .)
    CTEI            reduce using rule 74 (varcte -> CTEF np_add_cte_float .)
    CTEF            reduce using rule 74 (varcte -> CTEF np_add_cte_float .)
    CTEC            reduce using rule 74 (varcte -> CTEF np_add_cte_float .)
    TRUE            reduce using rule 74 (varcte -> CTEF np_add_cte_float .)
    FALSE           reduce using rule 74 (varcte -> CTEF np_add_cte_float .)
    RBRACE          reduce using rule 74 (varcte -> CTEF np_add_cte_float .)
    SEMI            reduce using rule 74 (varcte -> CTEF np_add_cte_float .)
    RPAREN          reduce using rule 74 (varcte -> CTEF np_add_cte_float .)
    COMMA           reduce using rule 74 (varcte -> CTEF np_add_cte_float .)
    TO              reduce using rule 74 (varcte -> CTEF np_add_cte_float .)
    BY              reduce using rule 74 (varcte -> CTEF np_add_cte_float .)


state 122

    (75) varcte -> CTEC np_add_cte_char .

    TIMES           reduce using rule 75 (varcte -> CTEC np_add_cte_char .)
    DIVIDE          reduce using rule 75 (varcte -> CTEC np_add_cte_char .)
    PLUS            reduce using rule 75 (varcte -> CTEC np_add_cte_char .)
    MINUS           reduce using rule 75 (varcte -> CTEC np_add_cte_char .)
    LT              reduce using rule 75 (varcte -> CTEC np_add_cte_char .)
    LE              reduce using rule 75 (varcte -> CTEC np_add_cte_char .)
    GT              reduce using rule 75 (varcte -> CTEC np_add_cte_char .)
    GE              reduce using rule 75 (varcte -> CTEC np_add_cte_char .)
    EQ              reduce using rule 75 (varcte -> CTEC np_add_cte_char .)
    NE              reduce using rule 75 (varcte -> CTEC np_add_cte_char .)
    AND             reduce using rule 75 (varcte -> CTEC np_add_cte_char .)
    OR              reduce using rule 75 (varcte -> CTEC np_add_cte_char .)
    RBRACKET        reduce using rule 75 (varcte -> CTEC np_add_cte_char .)
    ID              reduce using rule 75 (varcte -> CTEC np_add_cte_char .)
    IF              reduce using rule 75 (varcte -> CTEC np_add_cte_char .)
    PRINT           reduce using rule 75 (varcte -> CTEC np_add_cte_char .)
    READ            reduce using rule 75 (varcte -> CTEC np_add_cte_char .)
    RETURN          reduce using rule 75 (varcte -> CTEC np_add_cte_char .)
    FOR             reduce using rule 75 (varcte -> CTEC np_add_cte_char .)
    WHILE           reduce using rule 75 (varcte -> CTEC np_add_cte_char .)
    MEAN            reduce using rule 75 (varcte -> CTEC np_add_cte_char .)
    MEDIAN          reduce using rule 75 (varcte -> CTEC np_add_cte_char .)
    MODE            reduce using rule 75 (varcte -> CTEC np_add_cte_char .)
    VARIANCE        reduce using rule 75 (varcte -> CTEC np_add_cte_char .)
    STDEV           reduce using rule 75 (varcte -> CTEC np_add_cte_char .)
    LPAREN          reduce using rule 75 (varcte -> CTEC np_add_cte_char .)
    LBRACKET        reduce using rule 75 (varcte -> CTEC np_add_cte_char .)
    CTEI            reduce using rule 75 (varcte -> CTEC np_add_cte_char .)
    CTEF            reduce using rule 75 (varcte -> CTEC np_add_cte_char .)
    CTEC            reduce using rule 75 (varcte -> CTEC np_add_cte_char .)
    TRUE            reduce using rule 75 (varcte -> CTEC np_add_cte_char .)
    FALSE           reduce using rule 75 (varcte -> CTEC np_add_cte_char .)
    RBRACE          reduce using rule 75 (varcte -> CTEC np_add_cte_char .)
    SEMI            reduce using rule 75 (varcte -> CTEC np_add_cte_char .)
    RPAREN          reduce using rule 75 (varcte -> CTEC np_add_cte_char .)
    COMMA           reduce using rule 75 (varcte -> CTEC np_add_cte_char .)
    TO              reduce using rule 75 (varcte -> CTEC np_add_cte_char .)
    BY              reduce using rule 75 (varcte -> CTEC np_add_cte_char .)


state 123

    (76) varcte -> TRUE np_add_cte_bool .

    TIMES           reduce using rule 76 (varcte -> TRUE np_add_cte_bool .)
    DIVIDE          reduce using rule 76 (varcte -> TRUE np_add_cte_bool .)
    PLUS            reduce using rule 76 (varcte -> TRUE np_add_cte_bool .)
    MINUS           reduce using rule 76 (varcte -> TRUE np_add_cte_bool .)
    LT              reduce using rule 76 (varcte -> TRUE np_add_cte_bool .)
    LE              reduce using rule 76 (varcte -> TRUE np_add_cte_bool .)
    GT              reduce using rule 76 (varcte -> TRUE np_add_cte_bool .)
    GE              reduce using rule 76 (varcte -> TRUE np_add_cte_bool .)
    EQ              reduce using rule 76 (varcte -> TRUE np_add_cte_bool .)
    NE              reduce using rule 76 (varcte -> TRUE np_add_cte_bool .)
    AND             reduce using rule 76 (varcte -> TRUE np_add_cte_bool .)
    OR              reduce using rule 76 (varcte -> TRUE np_add_cte_bool .)
    RBRACKET        reduce using rule 76 (varcte -> TRUE np_add_cte_bool .)
    ID              reduce using rule 76 (varcte -> TRUE np_add_cte_bool .)
    IF              reduce using rule 76 (varcte -> TRUE np_add_cte_bool .)
    PRINT           reduce using rule 76 (varcte -> TRUE np_add_cte_bool .)
    READ            reduce using rule 76 (varcte -> TRUE np_add_cte_bool .)
    RETURN          reduce using rule 76 (varcte -> TRUE np_add_cte_bool .)
    FOR             reduce using rule 76 (varcte -> TRUE np_add_cte_bool .)
    WHILE           reduce using rule 76 (varcte -> TRUE np_add_cte_bool .)
    MEAN            reduce using rule 76 (varcte -> TRUE np_add_cte_bool .)
    MEDIAN          reduce using rule 76 (varcte -> TRUE np_add_cte_bool .)
    MODE            reduce using rule 76 (varcte -> TRUE np_add_cte_bool .)
    VARIANCE        reduce using rule 76 (varcte -> TRUE np_add_cte_bool .)
    STDEV           reduce using rule 76 (varcte -> TRUE np_add_cte_bool .)
    LPAREN          reduce using rule 76 (varcte -> TRUE np_add_cte_bool .)
    LBRACKET        reduce using rule 76 (varcte -> TRUE np_add_cte_bool .)
    CTEI            reduce using rule 76 (varcte -> TRUE np_add_cte_bool .)
    CTEF            reduce using rule 76 (varcte -> TRUE np_add_cte_bool .)
    CTEC            reduce using rule 76 (varcte -> TRUE np_add_cte_bool .)
    TRUE            reduce using rule 76 (varcte -> TRUE np_add_cte_bool .)
    FALSE           reduce using rule 76 (varcte -> TRUE np_add_cte_bool .)
    RBRACE          reduce using rule 76 (varcte -> TRUE np_add_cte_bool .)
    SEMI            reduce using rule 76 (varcte -> TRUE np_add_cte_bool .)
    RPAREN          reduce using rule 76 (varcte -> TRUE np_add_cte_bool .)
    COMMA           reduce using rule 76 (varcte -> TRUE np_add_cte_bool .)
    TO              reduce using rule 76 (varcte -> TRUE np_add_cte_bool .)
    BY              reduce using rule 76 (varcte -> TRUE np_add_cte_bool .)


state 124

    (77) varcte -> FALSE np_add_cte_bool .

    TIMES           reduce using rule 77 (varcte -> FALSE np_add_cte_bool .)
    DIVIDE          reduce using rule 77 (varcte -> FALSE np_add_cte_bool .)
    PLUS            reduce using rule 77 (varcte -> FALSE np_add_cte_bool .)
    MINUS           reduce using rule 77 (varcte -> FALSE np_add_cte_bool .)
    LT              reduce using rule 77 (varcte -> FALSE np_add_cte_bool .)
    LE              reduce using rule 77 (varcte -> FALSE np_add_cte_bool .)
    GT              reduce using rule 77 (varcte -> FALSE np_add_cte_bool .)
    GE              reduce using rule 77 (varcte -> FALSE np_add_cte_bool .)
    EQ              reduce using rule 77 (varcte -> FALSE np_add_cte_bool .)
    NE              reduce using rule 77 (varcte -> FALSE np_add_cte_bool .)
    AND             reduce using rule 77 (varcte -> FALSE np_add_cte_bool .)
    OR              reduce using rule 77 (varcte -> FALSE np_add_cte_bool .)
    RBRACKET        reduce using rule 77 (varcte -> FALSE np_add_cte_bool .)
    ID              reduce using rule 77 (varcte -> FALSE np_add_cte_bool .)
    IF              reduce using rule 77 (varcte -> FALSE np_add_cte_bool .)
    PRINT           reduce using rule 77 (varcte -> FALSE np_add_cte_bool .)
    READ            reduce using rule 77 (varcte -> FALSE np_add_cte_bool .)
    RETURN          reduce using rule 77 (varcte -> FALSE np_add_cte_bool .)
    FOR             reduce using rule 77 (varcte -> FALSE np_add_cte_bool .)
    WHILE           reduce using rule 77 (varcte -> FALSE np_add_cte_bool .)
    MEAN            reduce using rule 77 (varcte -> FALSE np_add_cte_bool .)
    MEDIAN          reduce using rule 77 (varcte -> FALSE np_add_cte_bool .)
    MODE            reduce using rule 77 (varcte -> FALSE np_add_cte_bool .)
    VARIANCE        reduce using rule 77 (varcte -> FALSE np_add_cte_bool .)
    STDEV           reduce using rule 77 (varcte -> FALSE np_add_cte_bool .)
    LPAREN          reduce using rule 77 (varcte -> FALSE np_add_cte_bool .)
    LBRACKET        reduce using rule 77 (varcte -> FALSE np_add_cte_bool .)
    CTEI            reduce using rule 77 (varcte -> FALSE np_add_cte_bool .)
    CTEF            reduce using rule 77 (varcte -> FALSE np_add_cte_bool .)
    CTEC            reduce using rule 77 (varcte -> FALSE np_add_cte_bool .)
    TRUE            reduce using rule 77 (varcte -> FALSE np_add_cte_bool .)
    FALSE           reduce using rule 77 (varcte -> FALSE np_add_cte_bool .)
    RBRACE          reduce using rule 77 (varcte -> FALSE np_add_cte_bool .)
    SEMI            reduce using rule 77 (varcte -> FALSE np_add_cte_bool .)
    RPAREN          reduce using rule 77 (varcte -> FALSE np_add_cte_bool .)
    COMMA           reduce using rule 77 (varcte -> FALSE np_add_cte_bool .)
    TO              reduce using rule 77 (varcte -> FALSE np_add_cte_bool .)
    BY              reduce using rule 77 (varcte -> FALSE np_add_cte_bool .)


state 125

    (25) params -> ID . COLON type np_add_vars COMMA params
    (26) params -> ID . COLON type np_add_vars

    COLON           shift and go to state 170


state 126

    (16) function -> FUNCTION ID COLON return_type np_create_new_scope LPAREN RPAREN . block
    (18) function -> FUNCTION ID COLON return_type np_create_new_scope LPAREN RPAREN . vars block
    (22) block -> . LBRACE statements RBRACE
    (5) vars -> . vars_1
    (6) vars_1 -> . LET vars_prima_1 vars_1
    (7) vars_1 -> . LET vars_prima_1

    LBRACE          shift and go to state 46
    LET             shift and go to state 11

    block                          shift and go to state 171
    vars                           shift and go to state 172
    vars_1                         shift and go to state 8

state 127

    (17) function -> FUNCTION ID COLON return_type np_create_new_scope LPAREN params . RPAREN block
    (19) function -> FUNCTION ID COLON return_type np_create_new_scope LPAREN params . RPAREN vars block

    RPAREN          shift and go to state 173


state 128

    (22) block -> LBRACE statements RBRACE .

    $end            reduce using rule 22 (block -> LBRACE statements RBRACE .)
    FUNCTION        reduce using rule 22 (block -> LBRACE statements RBRACE .)
    MAIN            reduce using rule 22 (block -> LBRACE statements RBRACE .)
    ELSE            reduce using rule 22 (block -> LBRACE statements RBRACE .)
    ID              reduce using rule 22 (block -> LBRACE statements RBRACE .)
    IF              reduce using rule 22 (block -> LBRACE statements RBRACE .)
    PRINT           reduce using rule 22 (block -> LBRACE statements RBRACE .)
    READ            reduce using rule 22 (block -> LBRACE statements RBRACE .)
    RETURN          reduce using rule 22 (block -> LBRACE statements RBRACE .)
    FOR             reduce using rule 22 (block -> LBRACE statements RBRACE .)
    WHILE           reduce using rule 22 (block -> LBRACE statements RBRACE .)
    MEAN            reduce using rule 22 (block -> LBRACE statements RBRACE .)
    MEDIAN          reduce using rule 22 (block -> LBRACE statements RBRACE .)
    MODE            reduce using rule 22 (block -> LBRACE statements RBRACE .)
    VARIANCE        reduce using rule 22 (block -> LBRACE statements RBRACE .)
    STDEV           reduce using rule 22 (block -> LBRACE statements RBRACE .)
    LPAREN          reduce using rule 22 (block -> LBRACE statements RBRACE .)
    LBRACKET        reduce using rule 22 (block -> LBRACE statements RBRACE .)
    PLUS            reduce using rule 22 (block -> LBRACE statements RBRACE .)
    MINUS           reduce using rule 22 (block -> LBRACE statements RBRACE .)
    CTEI            reduce using rule 22 (block -> LBRACE statements RBRACE .)
    CTEF            reduce using rule 22 (block -> LBRACE statements RBRACE .)
    CTEC            reduce using rule 22 (block -> LBRACE statements RBRACE .)
    TRUE            reduce using rule 22 (block -> LBRACE statements RBRACE .)
    FALSE           reduce using rule 22 (block -> LBRACE statements RBRACE .)
    RBRACE          reduce using rule 22 (block -> LBRACE statements RBRACE .)


state 129

    (27) statements -> assignment statements1 .

    RBRACE          reduce using rule 27 (statements -> assignment statements1 .)


state 130

    (41) statements1 -> statements .

    RBRACE          reduce using rule 41 (statements1 -> statements .)


state 131

    (42) statements1 -> epsilon .

    RBRACE          reduce using rule 42 (statements1 -> epsilon .)


state 132

    (28) statements -> condition statements1 .

    RBRACE          reduce using rule 28 (statements -> condition statements1 .)


state 133

    (29) statements -> writing statements1 .

    RBRACE          reduce using rule 29 (statements -> writing statements1 .)


state 134

    (30) statements -> reading statements1 .

    RBRACE          reduce using rule 30 (statements -> reading statements1 .)


state 135

    (31) statements -> repetition statements1 .

    RBRACE          reduce using rule 31 (statements -> repetition statements1 .)


state 136

    (32) statements -> return statements1 .

    RBRACE          reduce using rule 32 (statements -> return statements1 .)


state 137

    (33) statements -> function_call statements1 .

    RBRACE          reduce using rule 33 (statements -> function_call statements1 .)


state 138

    (34) statements -> expression statements1 .

    RBRACE          reduce using rule 34 (statements -> expression statements1 .)


state 139

    (35) statements -> special_functions statements1 .

    RBRACE          reduce using rule 35 (statements -> special_functions statements1 .)


state 140

    (43) assignment -> ID EQUALS . expression SEMI
    (47) expression -> . exp
    (48) expression -> . expression1
    (57) exp -> . term np_add_quadruple
    (58) exp -> . term exp_1
    (49) expression1 -> . exp LT exp
    (50) expression1 -> . exp LE exp
    (51) expression1 -> . exp GT exp
    (52) expression1 -> . exp GE exp
    (53) expression1 -> . exp EQ exp
    (54) expression1 -> . exp NE exp
    (55) expression1 -> . exp AND exp
    (56) expression1 -> . exp OR exp
    (61) term -> . factor
    (62) term -> . factor term_2
    (65) factor -> . LPAREN np_add_paren expression RPAREN np_pop_paren
    (66) factor -> . LBRACKET expression RBRACKET
    (67) factor -> . function_call
    (68) factor -> . factor_prima_1
    (93) function_call -> . ID LPAREN RPAREN SEMI
    (94) function_call -> . ID LPAREN function_call_1 RPAREN SEMI
    (95) function_call -> . ID LPAREN function_call_1 RPAREN
    (96) function_call -> . ID LPAREN RPAREN
    (69) factor_prima_1 -> . PLUS varcte
    (70) factor_prima_1 -> . MINUS varcte
    (71) factor_prima_1 -> . varcte
    (72) varcte -> . ID np_add_id_quad
    (73) varcte -> . CTEI np_add_cte_int
    (74) varcte -> . CTEF np_add_cte_float
    (75) varcte -> . CTEC np_add_cte_char
    (76) varcte -> . TRUE np_add_cte_bool
    (77) varcte -> . FALSE np_add_cte_bool

    LPAREN          shift and go to state 54
    LBRACKET        shift and go to state 48
    ID              shift and go to state 57
    PLUS            shift and go to state 58
    MINUS           shift and go to state 60
    CTEI            shift and go to state 61
    CTEF            shift and go to state 62
    CTEC            shift and go to state 63
    TRUE            shift and go to state 64
    FALSE           shift and go to state 65

    expression                     shift and go to state 174
    exp                            shift and go to state 50
    expression1                    shift and go to state 51
    term                           shift and go to state 52
    factor                         shift and go to state 53
    function_call                  shift and go to state 55
    factor_prima_1                 shift and go to state 56
    varcte                         shift and go to state 59

state 141

    (44) assignment -> ID LBRACKET . expression RBRACKET EQUALS expression SEMI
    (47) expression -> . exp
    (48) expression -> . expression1
    (57) exp -> . term np_add_quadruple
    (58) exp -> . term exp_1
    (49) expression1 -> . exp LT exp
    (50) expression1 -> . exp LE exp
    (51) expression1 -> . exp GT exp
    (52) expression1 -> . exp GE exp
    (53) expression1 -> . exp EQ exp
    (54) expression1 -> . exp NE exp
    (55) expression1 -> . exp AND exp
    (56) expression1 -> . exp OR exp
    (61) term -> . factor
    (62) term -> . factor term_2
    (65) factor -> . LPAREN np_add_paren expression RPAREN np_pop_paren
    (66) factor -> . LBRACKET expression RBRACKET
    (67) factor -> . function_call
    (68) factor -> . factor_prima_1
    (93) function_call -> . ID LPAREN RPAREN SEMI
    (94) function_call -> . ID LPAREN function_call_1 RPAREN SEMI
    (95) function_call -> . ID LPAREN function_call_1 RPAREN
    (96) function_call -> . ID LPAREN RPAREN
    (69) factor_prima_1 -> . PLUS varcte
    (70) factor_prima_1 -> . MINUS varcte
    (71) factor_prima_1 -> . varcte
    (72) varcte -> . ID np_add_id_quad
    (73) varcte -> . CTEI np_add_cte_int
    (74) varcte -> . CTEF np_add_cte_float
    (75) varcte -> . CTEC np_add_cte_char
    (76) varcte -> . TRUE np_add_cte_bool
    (77) varcte -> . FALSE np_add_cte_bool

    LPAREN          shift and go to state 54
    LBRACKET        shift and go to state 48
    ID              shift and go to state 57
    PLUS            shift and go to state 58
    MINUS           shift and go to state 60
    CTEI            shift and go to state 61
    CTEF            shift and go to state 62
    CTEC            shift and go to state 63
    TRUE            shift and go to state 64
    FALSE           shift and go to state 65

    expression                     shift and go to state 175
    exp                            shift and go to state 50
    expression1                    shift and go to state 51
    term                           shift and go to state 52
    factor                         shift and go to state 53
    function_call                  shift and go to state 55
    factor_prima_1                 shift and go to state 56
    varcte                         shift and go to state 59

state 142

    (45) condition -> IF LPAREN . expression RPAREN block
    (46) condition -> IF LPAREN . expression RPAREN block ELSE block
    (47) expression -> . exp
    (48) expression -> . expression1
    (57) exp -> . term np_add_quadruple
    (58) exp -> . term exp_1
    (49) expression1 -> . exp LT exp
    (50) expression1 -> . exp LE exp
    (51) expression1 -> . exp GT exp
    (52) expression1 -> . exp GE exp
    (53) expression1 -> . exp EQ exp
    (54) expression1 -> . exp NE exp
    (55) expression1 -> . exp AND exp
    (56) expression1 -> . exp OR exp
    (61) term -> . factor
    (62) term -> . factor term_2
    (65) factor -> . LPAREN np_add_paren expression RPAREN np_pop_paren
    (66) factor -> . LBRACKET expression RBRACKET
    (67) factor -> . function_call
    (68) factor -> . factor_prima_1
    (93) function_call -> . ID LPAREN RPAREN SEMI
    (94) function_call -> . ID LPAREN function_call_1 RPAREN SEMI
    (95) function_call -> . ID LPAREN function_call_1 RPAREN
    (96) function_call -> . ID LPAREN RPAREN
    (69) factor_prima_1 -> . PLUS varcte
    (70) factor_prima_1 -> . MINUS varcte
    (71) factor_prima_1 -> . varcte
    (72) varcte -> . ID np_add_id_quad
    (73) varcte -> . CTEI np_add_cte_int
    (74) varcte -> . CTEF np_add_cte_float
    (75) varcte -> . CTEC np_add_cte_char
    (76) varcte -> . TRUE np_add_cte_bool
    (77) varcte -> . FALSE np_add_cte_bool

    LPAREN          shift and go to state 54
    LBRACKET        shift and go to state 48
    ID              shift and go to state 57
    PLUS            shift and go to state 58
    MINUS           shift and go to state 60
    CTEI            shift and go to state 61
    CTEF            shift and go to state 62
    CTEC            shift and go to state 63
    TRUE            shift and go to state 64
    FALSE           shift and go to state 65

    expression                     shift and go to state 176
    exp                            shift and go to state 50
    expression1                    shift and go to state 51
    term                           shift and go to state 52
    factor                         shift and go to state 53
    function_call                  shift and go to state 55
    factor_prima_1                 shift and go to state 56
    varcte                         shift and go to state 59

state 143

    (78) writing -> PRINT LPAREN . writing_1 RPAREN SEMI
    (79) writing_1 -> . expression COMMA writing_1
    (80) writing_1 -> . expression
    (81) writing_1 -> . CTESTRING
    (82) writing_1 -> . CTESTRING COMMA
    (47) expression -> . exp
    (48) expression -> . expression1
    (57) exp -> . term np_add_quadruple
    (58) exp -> . term exp_1
    (49) expression1 -> . exp LT exp
    (50) expression1 -> . exp LE exp
    (51) expression1 -> . exp GT exp
    (52) expression1 -> . exp GE exp
    (53) expression1 -> . exp EQ exp
    (54) expression1 -> . exp NE exp
    (55) expression1 -> . exp AND exp
    (56) expression1 -> . exp OR exp
    (61) term -> . factor
    (62) term -> . factor term_2
    (65) factor -> . LPAREN np_add_paren expression RPAREN np_pop_paren
    (66) factor -> . LBRACKET expression RBRACKET
    (67) factor -> . function_call
    (68) factor -> . factor_prima_1
    (93) function_call -> . ID LPAREN RPAREN SEMI
    (94) function_call -> . ID LPAREN function_call_1 RPAREN SEMI
    (95) function_call -> . ID LPAREN function_call_1 RPAREN
    (96) function_call -> . ID LPAREN RPAREN
    (69) factor_prima_1 -> . PLUS varcte
    (70) factor_prima_1 -> . MINUS varcte
    (71) factor_prima_1 -> . varcte
    (72) varcte -> . ID np_add_id_quad
    (73) varcte -> . CTEI np_add_cte_int
    (74) varcte -> . CTEF np_add_cte_float
    (75) varcte -> . CTEC np_add_cte_char
    (76) varcte -> . TRUE np_add_cte_bool
    (77) varcte -> . FALSE np_add_cte_bool

    CTESTRING       shift and go to state 179
    LPAREN          shift and go to state 54
    LBRACKET        shift and go to state 48
    ID              shift and go to state 57
    PLUS            shift and go to state 58
    MINUS           shift and go to state 60
    CTEI            shift and go to state 61
    CTEF            shift and go to state 62
    CTEC            shift and go to state 63
    TRUE            shift and go to state 64
    FALSE           shift and go to state 65

    writing_1                      shift and go to state 177
    expression                     shift and go to state 178
    exp                            shift and go to state 50
    expression1                    shift and go to state 51
    term                           shift and go to state 52
    factor                         shift and go to state 53
    function_call                  shift and go to state 55
    factor_prima_1                 shift and go to state 56
    varcte                         shift and go to state 59

state 144

    (83) reading -> READ LPAREN . reading_1 RPAREN SEMI
    (84) reading_1 -> . ID COMMA reading_1
    (85) reading_1 -> . ID LBRACKET expression RBRACKET COMMA reading_1
    (86) reading_1 -> . ID
    (87) reading_1 -> . ID LBRACKET expression RBRACKET

    ID              shift and go to state 181

    reading_1                      shift and go to state 180

state 145

    (92) return -> RETURN expression . SEMI

    SEMI            shift and go to state 182


state 146

    (91) non_conditional_loop -> FOR LPAREN . ID EQUALS expression TO expression BY expression RPAREN block

    ID              shift and go to state 183


state 147

    (90) conditional_loop -> WHILE LPAREN . expression RPAREN DO block
    (47) expression -> . exp
    (48) expression -> . expression1
    (57) exp -> . term np_add_quadruple
    (58) exp -> . term exp_1
    (49) expression1 -> . exp LT exp
    (50) expression1 -> . exp LE exp
    (51) expression1 -> . exp GT exp
    (52) expression1 -> . exp GE exp
    (53) expression1 -> . exp EQ exp
    (54) expression1 -> . exp NE exp
    (55) expression1 -> . exp AND exp
    (56) expression1 -> . exp OR exp
    (61) term -> . factor
    (62) term -> . factor term_2
    (65) factor -> . LPAREN np_add_paren expression RPAREN np_pop_paren
    (66) factor -> . LBRACKET expression RBRACKET
    (67) factor -> . function_call
    (68) factor -> . factor_prima_1
    (93) function_call -> . ID LPAREN RPAREN SEMI
    (94) function_call -> . ID LPAREN function_call_1 RPAREN SEMI
    (95) function_call -> . ID LPAREN function_call_1 RPAREN
    (96) function_call -> . ID LPAREN RPAREN
    (69) factor_prima_1 -> . PLUS varcte
    (70) factor_prima_1 -> . MINUS varcte
    (71) factor_prima_1 -> . varcte
    (72) varcte -> . ID np_add_id_quad
    (73) varcte -> . CTEI np_add_cte_int
    (74) varcte -> . CTEF np_add_cte_float
    (75) varcte -> . CTEC np_add_cte_char
    (76) varcte -> . TRUE np_add_cte_bool
    (77) varcte -> . FALSE np_add_cte_bool

    LPAREN          shift and go to state 54
    LBRACKET        shift and go to state 48
    ID              shift and go to state 57
    PLUS            shift and go to state 58
    MINUS           shift and go to state 60
    CTEI            shift and go to state 61
    CTEF            shift and go to state 62
    CTEC            shift and go to state 63
    TRUE            shift and go to state 64
    FALSE           shift and go to state 65

    expression                     shift and go to state 184
    exp                            shift and go to state 50
    expression1                    shift and go to state 51
    term                           shift and go to state 52
    factor                         shift and go to state 53
    function_call                  shift and go to state 55
    factor_prima_1                 shift and go to state 56
    varcte                         shift and go to state 59

state 148

    (99) mean -> MEAN LPAREN . expression RPAREN SEMI
    (47) expression -> . exp
    (48) expression -> . expression1
    (57) exp -> . term np_add_quadruple
    (58) exp -> . term exp_1
    (49) expression1 -> . exp LT exp
    (50) expression1 -> . exp LE exp
    (51) expression1 -> . exp GT exp
    (52) expression1 -> . exp GE exp
    (53) expression1 -> . exp EQ exp
    (54) expression1 -> . exp NE exp
    (55) expression1 -> . exp AND exp
    (56) expression1 -> . exp OR exp
    (61) term -> . factor
    (62) term -> . factor term_2
    (65) factor -> . LPAREN np_add_paren expression RPAREN np_pop_paren
    (66) factor -> . LBRACKET expression RBRACKET
    (67) factor -> . function_call
    (68) factor -> . factor_prima_1
    (93) function_call -> . ID LPAREN RPAREN SEMI
    (94) function_call -> . ID LPAREN function_call_1 RPAREN SEMI
    (95) function_call -> . ID LPAREN function_call_1 RPAREN
    (96) function_call -> . ID LPAREN RPAREN
    (69) factor_prima_1 -> . PLUS varcte
    (70) factor_prima_1 -> . MINUS varcte
    (71) factor_prima_1 -> . varcte
    (72) varcte -> . ID np_add_id_quad
    (73) varcte -> . CTEI np_add_cte_int
    (74) varcte -> . CTEF np_add_cte_float
    (75) varcte -> . CTEC np_add_cte_char
    (76) varcte -> . TRUE np_add_cte_bool
    (77) varcte -> . FALSE np_add_cte_bool

    LPAREN          shift and go to state 54
    LBRACKET        shift and go to state 48
    ID              shift and go to state 57
    PLUS            shift and go to state 58
    MINUS           shift and go to state 60
    CTEI            shift and go to state 61
    CTEF            shift and go to state 62
    CTEC            shift and go to state 63
    TRUE            shift and go to state 64
    FALSE           shift and go to state 65

    expression                     shift and go to state 185
    exp                            shift and go to state 50
    expression1                    shift and go to state 51
    term                           shift and go to state 52
    factor                         shift and go to state 53
    function_call                  shift and go to state 55
    factor_prima_1                 shift and go to state 56
    varcte                         shift and go to state 59

state 149

    (100) median -> MEDIAN LPAREN . expression RPAREN SEMI
    (47) expression -> . exp
    (48) expression -> . expression1
    (57) exp -> . term np_add_quadruple
    (58) exp -> . term exp_1
    (49) expression1 -> . exp LT exp
    (50) expression1 -> . exp LE exp
    (51) expression1 -> . exp GT exp
    (52) expression1 -> . exp GE exp
    (53) expression1 -> . exp EQ exp
    (54) expression1 -> . exp NE exp
    (55) expression1 -> . exp AND exp
    (56) expression1 -> . exp OR exp
    (61) term -> . factor
    (62) term -> . factor term_2
    (65) factor -> . LPAREN np_add_paren expression RPAREN np_pop_paren
    (66) factor -> . LBRACKET expression RBRACKET
    (67) factor -> . function_call
    (68) factor -> . factor_prima_1
    (93) function_call -> . ID LPAREN RPAREN SEMI
    (94) function_call -> . ID LPAREN function_call_1 RPAREN SEMI
    (95) function_call -> . ID LPAREN function_call_1 RPAREN
    (96) function_call -> . ID LPAREN RPAREN
    (69) factor_prima_1 -> . PLUS varcte
    (70) factor_prima_1 -> . MINUS varcte
    (71) factor_prima_1 -> . varcte
    (72) varcte -> . ID np_add_id_quad
    (73) varcte -> . CTEI np_add_cte_int
    (74) varcte -> . CTEF np_add_cte_float
    (75) varcte -> . CTEC np_add_cte_char
    (76) varcte -> . TRUE np_add_cte_bool
    (77) varcte -> . FALSE np_add_cte_bool

    LPAREN          shift and go to state 54
    LBRACKET        shift and go to state 48
    ID              shift and go to state 57
    PLUS            shift and go to state 58
    MINUS           shift and go to state 60
    CTEI            shift and go to state 61
    CTEF            shift and go to state 62
    CTEC            shift and go to state 63
    TRUE            shift and go to state 64
    FALSE           shift and go to state 65

    expression                     shift and go to state 186
    exp                            shift and go to state 50
    expression1                    shift and go to state 51
    term                           shift and go to state 52
    factor                         shift and go to state 53
    function_call                  shift and go to state 55
    factor_prima_1                 shift and go to state 56
    varcte                         shift and go to state 59

state 150

    (101) mode -> MODE LPAREN . expression RPAREN SEMI
    (47) expression -> . exp
    (48) expression -> . expression1
    (57) exp -> . term np_add_quadruple
    (58) exp -> . term exp_1
    (49) expression1 -> . exp LT exp
    (50) expression1 -> . exp LE exp
    (51) expression1 -> . exp GT exp
    (52) expression1 -> . exp GE exp
    (53) expression1 -> . exp EQ exp
    (54) expression1 -> . exp NE exp
    (55) expression1 -> . exp AND exp
    (56) expression1 -> . exp OR exp
    (61) term -> . factor
    (62) term -> . factor term_2
    (65) factor -> . LPAREN np_add_paren expression RPAREN np_pop_paren
    (66) factor -> . LBRACKET expression RBRACKET
    (67) factor -> . function_call
    (68) factor -> . factor_prima_1
    (93) function_call -> . ID LPAREN RPAREN SEMI
    (94) function_call -> . ID LPAREN function_call_1 RPAREN SEMI
    (95) function_call -> . ID LPAREN function_call_1 RPAREN
    (96) function_call -> . ID LPAREN RPAREN
    (69) factor_prima_1 -> . PLUS varcte
    (70) factor_prima_1 -> . MINUS varcte
    (71) factor_prima_1 -> . varcte
    (72) varcte -> . ID np_add_id_quad
    (73) varcte -> . CTEI np_add_cte_int
    (74) varcte -> . CTEF np_add_cte_float
    (75) varcte -> . CTEC np_add_cte_char
    (76) varcte -> . TRUE np_add_cte_bool
    (77) varcte -> . FALSE np_add_cte_bool

    LPAREN          shift and go to state 54
    LBRACKET        shift and go to state 48
    ID              shift and go to state 57
    PLUS            shift and go to state 58
    MINUS           shift and go to state 60
    CTEI            shift and go to state 61
    CTEF            shift and go to state 62
    CTEC            shift and go to state 63
    TRUE            shift and go to state 64
    FALSE           shift and go to state 65

    expression                     shift and go to state 187
    exp                            shift and go to state 50
    expression1                    shift and go to state 51
    term                           shift and go to state 52
    factor                         shift and go to state 53
    function_call                  shift and go to state 55
    factor_prima_1                 shift and go to state 56
    varcte                         shift and go to state 59

state 151

    (102) variance -> VARIANCE LPAREN . expression RPAREN SEMI
    (47) expression -> . exp
    (48) expression -> . expression1
    (57) exp -> . term np_add_quadruple
    (58) exp -> . term exp_1
    (49) expression1 -> . exp LT exp
    (50) expression1 -> . exp LE exp
    (51) expression1 -> . exp GT exp
    (52) expression1 -> . exp GE exp
    (53) expression1 -> . exp EQ exp
    (54) expression1 -> . exp NE exp
    (55) expression1 -> . exp AND exp
    (56) expression1 -> . exp OR exp
    (61) term -> . factor
    (62) term -> . factor term_2
    (65) factor -> . LPAREN np_add_paren expression RPAREN np_pop_paren
    (66) factor -> . LBRACKET expression RBRACKET
    (67) factor -> . function_call
    (68) factor -> . factor_prima_1
    (93) function_call -> . ID LPAREN RPAREN SEMI
    (94) function_call -> . ID LPAREN function_call_1 RPAREN SEMI
    (95) function_call -> . ID LPAREN function_call_1 RPAREN
    (96) function_call -> . ID LPAREN RPAREN
    (69) factor_prima_1 -> . PLUS varcte
    (70) factor_prima_1 -> . MINUS varcte
    (71) factor_prima_1 -> . varcte
    (72) varcte -> . ID np_add_id_quad
    (73) varcte -> . CTEI np_add_cte_int
    (74) varcte -> . CTEF np_add_cte_float
    (75) varcte -> . CTEC np_add_cte_char
    (76) varcte -> . TRUE np_add_cte_bool
    (77) varcte -> . FALSE np_add_cte_bool

    LPAREN          shift and go to state 54
    LBRACKET        shift and go to state 48
    ID              shift and go to state 57
    PLUS            shift and go to state 58
    MINUS           shift and go to state 60
    CTEI            shift and go to state 61
    CTEF            shift and go to state 62
    CTEC            shift and go to state 63
    TRUE            shift and go to state 64
    FALSE           shift and go to state 65

    expression                     shift and go to state 188
    exp                            shift and go to state 50
    expression1                    shift and go to state 51
    term                           shift and go to state 52
    factor                         shift and go to state 53
    function_call                  shift and go to state 55
    factor_prima_1                 shift and go to state 56
    varcte                         shift and go to state 59

state 152

    (103) standard_deviation -> STDEV LPAREN . expression RPAREN SEMI
    (47) expression -> . exp
    (48) expression -> . expression1
    (57) exp -> . term np_add_quadruple
    (58) exp -> . term exp_1
    (49) expression1 -> . exp LT exp
    (50) expression1 -> . exp LE exp
    (51) expression1 -> . exp GT exp
    (52) expression1 -> . exp GE exp
    (53) expression1 -> . exp EQ exp
    (54) expression1 -> . exp NE exp
    (55) expression1 -> . exp AND exp
    (56) expression1 -> . exp OR exp
    (61) term -> . factor
    (62) term -> . factor term_2
    (65) factor -> . LPAREN np_add_paren expression RPAREN np_pop_paren
    (66) factor -> . LBRACKET expression RBRACKET
    (67) factor -> . function_call
    (68) factor -> . factor_prima_1
    (93) function_call -> . ID LPAREN RPAREN SEMI
    (94) function_call -> . ID LPAREN function_call_1 RPAREN SEMI
    (95) function_call -> . ID LPAREN function_call_1 RPAREN
    (96) function_call -> . ID LPAREN RPAREN
    (69) factor_prima_1 -> . PLUS varcte
    (70) factor_prima_1 -> . MINUS varcte
    (71) factor_prima_1 -> . varcte
    (72) varcte -> . ID np_add_id_quad
    (73) varcte -> . CTEI np_add_cte_int
    (74) varcte -> . CTEF np_add_cte_float
    (75) varcte -> . CTEC np_add_cte_char
    (76) varcte -> . TRUE np_add_cte_bool
    (77) varcte -> . FALSE np_add_cte_bool

    LPAREN          shift and go to state 54
    LBRACKET        shift and go to state 48
    ID              shift and go to state 57
    PLUS            shift and go to state 58
    MINUS           shift and go to state 60
    CTEI            shift and go to state 61
    CTEF            shift and go to state 62
    CTEC            shift and go to state 63
    TRUE            shift and go to state 64
    FALSE           shift and go to state 65

    expression                     shift and go to state 189
    exp                            shift and go to state 50
    expression1                    shift and go to state 51
    term                           shift and go to state 52
    factor                         shift and go to state 53
    function_call                  shift and go to state 55
    factor_prima_1                 shift and go to state 56
    varcte                         shift and go to state 59

state 153

    (66) factor -> LBRACKET expression RBRACKET .

    TIMES           reduce using rule 66 (factor -> LBRACKET expression RBRACKET .)
    DIVIDE          reduce using rule 66 (factor -> LBRACKET expression RBRACKET .)
    PLUS            reduce using rule 66 (factor -> LBRACKET expression RBRACKET .)
    MINUS           reduce using rule 66 (factor -> LBRACKET expression RBRACKET .)
    LT              reduce using rule 66 (factor -> LBRACKET expression RBRACKET .)
    LE              reduce using rule 66 (factor -> LBRACKET expression RBRACKET .)
    GT              reduce using rule 66 (factor -> LBRACKET expression RBRACKET .)
    GE              reduce using rule 66 (factor -> LBRACKET expression RBRACKET .)
    EQ              reduce using rule 66 (factor -> LBRACKET expression RBRACKET .)
    NE              reduce using rule 66 (factor -> LBRACKET expression RBRACKET .)
    AND             reduce using rule 66 (factor -> LBRACKET expression RBRACKET .)
    OR              reduce using rule 66 (factor -> LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 66 (factor -> LBRACKET expression RBRACKET .)
    ID              reduce using rule 66 (factor -> LBRACKET expression RBRACKET .)
    IF              reduce using rule 66 (factor -> LBRACKET expression RBRACKET .)
    PRINT           reduce using rule 66 (factor -> LBRACKET expression RBRACKET .)
    READ            reduce using rule 66 (factor -> LBRACKET expression RBRACKET .)
    RETURN          reduce using rule 66 (factor -> LBRACKET expression RBRACKET .)
    FOR             reduce using rule 66 (factor -> LBRACKET expression RBRACKET .)
    WHILE           reduce using rule 66 (factor -> LBRACKET expression RBRACKET .)
    MEAN            reduce using rule 66 (factor -> LBRACKET expression RBRACKET .)
    MEDIAN          reduce using rule 66 (factor -> LBRACKET expression RBRACKET .)
    MODE            reduce using rule 66 (factor -> LBRACKET expression RBRACKET .)
    VARIANCE        reduce using rule 66 (factor -> LBRACKET expression RBRACKET .)
    STDEV           reduce using rule 66 (factor -> LBRACKET expression RBRACKET .)
    LPAREN          reduce using rule 66 (factor -> LBRACKET expression RBRACKET .)
    LBRACKET        reduce using rule 66 (factor -> LBRACKET expression RBRACKET .)
    CTEI            reduce using rule 66 (factor -> LBRACKET expression RBRACKET .)
    CTEF            reduce using rule 66 (factor -> LBRACKET expression RBRACKET .)
    CTEC            reduce using rule 66 (factor -> LBRACKET expression RBRACKET .)
    TRUE            reduce using rule 66 (factor -> LBRACKET expression RBRACKET .)
    FALSE           reduce using rule 66 (factor -> LBRACKET expression RBRACKET .)
    RBRACE          reduce using rule 66 (factor -> LBRACKET expression RBRACKET .)
    SEMI            reduce using rule 66 (factor -> LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 66 (factor -> LBRACKET expression RBRACKET .)
    COMMA           reduce using rule 66 (factor -> LBRACKET expression RBRACKET .)
    TO              reduce using rule 66 (factor -> LBRACKET expression RBRACKET .)
    BY              reduce using rule 66 (factor -> LBRACKET expression RBRACKET .)


state 154

    (49) expression1 -> exp LT exp .

    RBRACKET        reduce using rule 49 (expression1 -> exp LT exp .)
    ID              reduce using rule 49 (expression1 -> exp LT exp .)
    IF              reduce using rule 49 (expression1 -> exp LT exp .)
    PRINT           reduce using rule 49 (expression1 -> exp LT exp .)
    READ            reduce using rule 49 (expression1 -> exp LT exp .)
    RETURN          reduce using rule 49 (expression1 -> exp LT exp .)
    FOR             reduce using rule 49 (expression1 -> exp LT exp .)
    WHILE           reduce using rule 49 (expression1 -> exp LT exp .)
    MEAN            reduce using rule 49 (expression1 -> exp LT exp .)
    MEDIAN          reduce using rule 49 (expression1 -> exp LT exp .)
    MODE            reduce using rule 49 (expression1 -> exp LT exp .)
    VARIANCE        reduce using rule 49 (expression1 -> exp LT exp .)
    STDEV           reduce using rule 49 (expression1 -> exp LT exp .)
    LPAREN          reduce using rule 49 (expression1 -> exp LT exp .)
    LBRACKET        reduce using rule 49 (expression1 -> exp LT exp .)
    PLUS            reduce using rule 49 (expression1 -> exp LT exp .)
    MINUS           reduce using rule 49 (expression1 -> exp LT exp .)
    CTEI            reduce using rule 49 (expression1 -> exp LT exp .)
    CTEF            reduce using rule 49 (expression1 -> exp LT exp .)
    CTEC            reduce using rule 49 (expression1 -> exp LT exp .)
    TRUE            reduce using rule 49 (expression1 -> exp LT exp .)
    FALSE           reduce using rule 49 (expression1 -> exp LT exp .)
    RBRACE          reduce using rule 49 (expression1 -> exp LT exp .)
    SEMI            reduce using rule 49 (expression1 -> exp LT exp .)
    RPAREN          reduce using rule 49 (expression1 -> exp LT exp .)
    COMMA           reduce using rule 49 (expression1 -> exp LT exp .)
    TO              reduce using rule 49 (expression1 -> exp LT exp .)
    BY              reduce using rule 49 (expression1 -> exp LT exp .)


state 155

    (50) expression1 -> exp LE exp .

    RBRACKET        reduce using rule 50 (expression1 -> exp LE exp .)
    ID              reduce using rule 50 (expression1 -> exp LE exp .)
    IF              reduce using rule 50 (expression1 -> exp LE exp .)
    PRINT           reduce using rule 50 (expression1 -> exp LE exp .)
    READ            reduce using rule 50 (expression1 -> exp LE exp .)
    RETURN          reduce using rule 50 (expression1 -> exp LE exp .)
    FOR             reduce using rule 50 (expression1 -> exp LE exp .)
    WHILE           reduce using rule 50 (expression1 -> exp LE exp .)
    MEAN            reduce using rule 50 (expression1 -> exp LE exp .)
    MEDIAN          reduce using rule 50 (expression1 -> exp LE exp .)
    MODE            reduce using rule 50 (expression1 -> exp LE exp .)
    VARIANCE        reduce using rule 50 (expression1 -> exp LE exp .)
    STDEV           reduce using rule 50 (expression1 -> exp LE exp .)
    LPAREN          reduce using rule 50 (expression1 -> exp LE exp .)
    LBRACKET        reduce using rule 50 (expression1 -> exp LE exp .)
    PLUS            reduce using rule 50 (expression1 -> exp LE exp .)
    MINUS           reduce using rule 50 (expression1 -> exp LE exp .)
    CTEI            reduce using rule 50 (expression1 -> exp LE exp .)
    CTEF            reduce using rule 50 (expression1 -> exp LE exp .)
    CTEC            reduce using rule 50 (expression1 -> exp LE exp .)
    TRUE            reduce using rule 50 (expression1 -> exp LE exp .)
    FALSE           reduce using rule 50 (expression1 -> exp LE exp .)
    RBRACE          reduce using rule 50 (expression1 -> exp LE exp .)
    SEMI            reduce using rule 50 (expression1 -> exp LE exp .)
    RPAREN          reduce using rule 50 (expression1 -> exp LE exp .)
    COMMA           reduce using rule 50 (expression1 -> exp LE exp .)
    TO              reduce using rule 50 (expression1 -> exp LE exp .)
    BY              reduce using rule 50 (expression1 -> exp LE exp .)


state 156

    (51) expression1 -> exp GT exp .

    RBRACKET        reduce using rule 51 (expression1 -> exp GT exp .)
    ID              reduce using rule 51 (expression1 -> exp GT exp .)
    IF              reduce using rule 51 (expression1 -> exp GT exp .)
    PRINT           reduce using rule 51 (expression1 -> exp GT exp .)
    READ            reduce using rule 51 (expression1 -> exp GT exp .)
    RETURN          reduce using rule 51 (expression1 -> exp GT exp .)
    FOR             reduce using rule 51 (expression1 -> exp GT exp .)
    WHILE           reduce using rule 51 (expression1 -> exp GT exp .)
    MEAN            reduce using rule 51 (expression1 -> exp GT exp .)
    MEDIAN          reduce using rule 51 (expression1 -> exp GT exp .)
    MODE            reduce using rule 51 (expression1 -> exp GT exp .)
    VARIANCE        reduce using rule 51 (expression1 -> exp GT exp .)
    STDEV           reduce using rule 51 (expression1 -> exp GT exp .)
    LPAREN          reduce using rule 51 (expression1 -> exp GT exp .)
    LBRACKET        reduce using rule 51 (expression1 -> exp GT exp .)
    PLUS            reduce using rule 51 (expression1 -> exp GT exp .)
    MINUS           reduce using rule 51 (expression1 -> exp GT exp .)
    CTEI            reduce using rule 51 (expression1 -> exp GT exp .)
    CTEF            reduce using rule 51 (expression1 -> exp GT exp .)
    CTEC            reduce using rule 51 (expression1 -> exp GT exp .)
    TRUE            reduce using rule 51 (expression1 -> exp GT exp .)
    FALSE           reduce using rule 51 (expression1 -> exp GT exp .)
    RBRACE          reduce using rule 51 (expression1 -> exp GT exp .)
    SEMI            reduce using rule 51 (expression1 -> exp GT exp .)
    RPAREN          reduce using rule 51 (expression1 -> exp GT exp .)
    COMMA           reduce using rule 51 (expression1 -> exp GT exp .)
    TO              reduce using rule 51 (expression1 -> exp GT exp .)
    BY              reduce using rule 51 (expression1 -> exp GT exp .)


state 157

    (52) expression1 -> exp GE exp .

    RBRACKET        reduce using rule 52 (expression1 -> exp GE exp .)
    ID              reduce using rule 52 (expression1 -> exp GE exp .)
    IF              reduce using rule 52 (expression1 -> exp GE exp .)
    PRINT           reduce using rule 52 (expression1 -> exp GE exp .)
    READ            reduce using rule 52 (expression1 -> exp GE exp .)
    RETURN          reduce using rule 52 (expression1 -> exp GE exp .)
    FOR             reduce using rule 52 (expression1 -> exp GE exp .)
    WHILE           reduce using rule 52 (expression1 -> exp GE exp .)
    MEAN            reduce using rule 52 (expression1 -> exp GE exp .)
    MEDIAN          reduce using rule 52 (expression1 -> exp GE exp .)
    MODE            reduce using rule 52 (expression1 -> exp GE exp .)
    VARIANCE        reduce using rule 52 (expression1 -> exp GE exp .)
    STDEV           reduce using rule 52 (expression1 -> exp GE exp .)
    LPAREN          reduce using rule 52 (expression1 -> exp GE exp .)
    LBRACKET        reduce using rule 52 (expression1 -> exp GE exp .)
    PLUS            reduce using rule 52 (expression1 -> exp GE exp .)
    MINUS           reduce using rule 52 (expression1 -> exp GE exp .)
    CTEI            reduce using rule 52 (expression1 -> exp GE exp .)
    CTEF            reduce using rule 52 (expression1 -> exp GE exp .)
    CTEC            reduce using rule 52 (expression1 -> exp GE exp .)
    TRUE            reduce using rule 52 (expression1 -> exp GE exp .)
    FALSE           reduce using rule 52 (expression1 -> exp GE exp .)
    RBRACE          reduce using rule 52 (expression1 -> exp GE exp .)
    SEMI            reduce using rule 52 (expression1 -> exp GE exp .)
    RPAREN          reduce using rule 52 (expression1 -> exp GE exp .)
    COMMA           reduce using rule 52 (expression1 -> exp GE exp .)
    TO              reduce using rule 52 (expression1 -> exp GE exp .)
    BY              reduce using rule 52 (expression1 -> exp GE exp .)


state 158

    (53) expression1 -> exp EQ exp .

    RBRACKET        reduce using rule 53 (expression1 -> exp EQ exp .)
    ID              reduce using rule 53 (expression1 -> exp EQ exp .)
    IF              reduce using rule 53 (expression1 -> exp EQ exp .)
    PRINT           reduce using rule 53 (expression1 -> exp EQ exp .)
    READ            reduce using rule 53 (expression1 -> exp EQ exp .)
    RETURN          reduce using rule 53 (expression1 -> exp EQ exp .)
    FOR             reduce using rule 53 (expression1 -> exp EQ exp .)
    WHILE           reduce using rule 53 (expression1 -> exp EQ exp .)
    MEAN            reduce using rule 53 (expression1 -> exp EQ exp .)
    MEDIAN          reduce using rule 53 (expression1 -> exp EQ exp .)
    MODE            reduce using rule 53 (expression1 -> exp EQ exp .)
    VARIANCE        reduce using rule 53 (expression1 -> exp EQ exp .)
    STDEV           reduce using rule 53 (expression1 -> exp EQ exp .)
    LPAREN          reduce using rule 53 (expression1 -> exp EQ exp .)
    LBRACKET        reduce using rule 53 (expression1 -> exp EQ exp .)
    PLUS            reduce using rule 53 (expression1 -> exp EQ exp .)
    MINUS           reduce using rule 53 (expression1 -> exp EQ exp .)
    CTEI            reduce using rule 53 (expression1 -> exp EQ exp .)
    CTEF            reduce using rule 53 (expression1 -> exp EQ exp .)
    CTEC            reduce using rule 53 (expression1 -> exp EQ exp .)
    TRUE            reduce using rule 53 (expression1 -> exp EQ exp .)
    FALSE           reduce using rule 53 (expression1 -> exp EQ exp .)
    RBRACE          reduce using rule 53 (expression1 -> exp EQ exp .)
    SEMI            reduce using rule 53 (expression1 -> exp EQ exp .)
    RPAREN          reduce using rule 53 (expression1 -> exp EQ exp .)
    COMMA           reduce using rule 53 (expression1 -> exp EQ exp .)
    TO              reduce using rule 53 (expression1 -> exp EQ exp .)
    BY              reduce using rule 53 (expression1 -> exp EQ exp .)


state 159

    (54) expression1 -> exp NE exp .

    RBRACKET        reduce using rule 54 (expression1 -> exp NE exp .)
    ID              reduce using rule 54 (expression1 -> exp NE exp .)
    IF              reduce using rule 54 (expression1 -> exp NE exp .)
    PRINT           reduce using rule 54 (expression1 -> exp NE exp .)
    READ            reduce using rule 54 (expression1 -> exp NE exp .)
    RETURN          reduce using rule 54 (expression1 -> exp NE exp .)
    FOR             reduce using rule 54 (expression1 -> exp NE exp .)
    WHILE           reduce using rule 54 (expression1 -> exp NE exp .)
    MEAN            reduce using rule 54 (expression1 -> exp NE exp .)
    MEDIAN          reduce using rule 54 (expression1 -> exp NE exp .)
    MODE            reduce using rule 54 (expression1 -> exp NE exp .)
    VARIANCE        reduce using rule 54 (expression1 -> exp NE exp .)
    STDEV           reduce using rule 54 (expression1 -> exp NE exp .)
    LPAREN          reduce using rule 54 (expression1 -> exp NE exp .)
    LBRACKET        reduce using rule 54 (expression1 -> exp NE exp .)
    PLUS            reduce using rule 54 (expression1 -> exp NE exp .)
    MINUS           reduce using rule 54 (expression1 -> exp NE exp .)
    CTEI            reduce using rule 54 (expression1 -> exp NE exp .)
    CTEF            reduce using rule 54 (expression1 -> exp NE exp .)
    CTEC            reduce using rule 54 (expression1 -> exp NE exp .)
    TRUE            reduce using rule 54 (expression1 -> exp NE exp .)
    FALSE           reduce using rule 54 (expression1 -> exp NE exp .)
    RBRACE          reduce using rule 54 (expression1 -> exp NE exp .)
    SEMI            reduce using rule 54 (expression1 -> exp NE exp .)
    RPAREN          reduce using rule 54 (expression1 -> exp NE exp .)
    COMMA           reduce using rule 54 (expression1 -> exp NE exp .)
    TO              reduce using rule 54 (expression1 -> exp NE exp .)
    BY              reduce using rule 54 (expression1 -> exp NE exp .)


state 160

    (55) expression1 -> exp AND exp .

    RBRACKET        reduce using rule 55 (expression1 -> exp AND exp .)
    ID              reduce using rule 55 (expression1 -> exp AND exp .)
    IF              reduce using rule 55 (expression1 -> exp AND exp .)
    PRINT           reduce using rule 55 (expression1 -> exp AND exp .)
    READ            reduce using rule 55 (expression1 -> exp AND exp .)
    RETURN          reduce using rule 55 (expression1 -> exp AND exp .)
    FOR             reduce using rule 55 (expression1 -> exp AND exp .)
    WHILE           reduce using rule 55 (expression1 -> exp AND exp .)
    MEAN            reduce using rule 55 (expression1 -> exp AND exp .)
    MEDIAN          reduce using rule 55 (expression1 -> exp AND exp .)
    MODE            reduce using rule 55 (expression1 -> exp AND exp .)
    VARIANCE        reduce using rule 55 (expression1 -> exp AND exp .)
    STDEV           reduce using rule 55 (expression1 -> exp AND exp .)
    LPAREN          reduce using rule 55 (expression1 -> exp AND exp .)
    LBRACKET        reduce using rule 55 (expression1 -> exp AND exp .)
    PLUS            reduce using rule 55 (expression1 -> exp AND exp .)
    MINUS           reduce using rule 55 (expression1 -> exp AND exp .)
    CTEI            reduce using rule 55 (expression1 -> exp AND exp .)
    CTEF            reduce using rule 55 (expression1 -> exp AND exp .)
    CTEC            reduce using rule 55 (expression1 -> exp AND exp .)
    TRUE            reduce using rule 55 (expression1 -> exp AND exp .)
    FALSE           reduce using rule 55 (expression1 -> exp AND exp .)
    RBRACE          reduce using rule 55 (expression1 -> exp AND exp .)
    SEMI            reduce using rule 55 (expression1 -> exp AND exp .)
    RPAREN          reduce using rule 55 (expression1 -> exp AND exp .)
    COMMA           reduce using rule 55 (expression1 -> exp AND exp .)
    TO              reduce using rule 55 (expression1 -> exp AND exp .)
    BY              reduce using rule 55 (expression1 -> exp AND exp .)


state 161

    (56) expression1 -> exp OR exp .

    RBRACKET        reduce using rule 56 (expression1 -> exp OR exp .)
    ID              reduce using rule 56 (expression1 -> exp OR exp .)
    IF              reduce using rule 56 (expression1 -> exp OR exp .)
    PRINT           reduce using rule 56 (expression1 -> exp OR exp .)
    READ            reduce using rule 56 (expression1 -> exp OR exp .)
    RETURN          reduce using rule 56 (expression1 -> exp OR exp .)
    FOR             reduce using rule 56 (expression1 -> exp OR exp .)
    WHILE           reduce using rule 56 (expression1 -> exp OR exp .)
    MEAN            reduce using rule 56 (expression1 -> exp OR exp .)
    MEDIAN          reduce using rule 56 (expression1 -> exp OR exp .)
    MODE            reduce using rule 56 (expression1 -> exp OR exp .)
    VARIANCE        reduce using rule 56 (expression1 -> exp OR exp .)
    STDEV           reduce using rule 56 (expression1 -> exp OR exp .)
    LPAREN          reduce using rule 56 (expression1 -> exp OR exp .)
    LBRACKET        reduce using rule 56 (expression1 -> exp OR exp .)
    PLUS            reduce using rule 56 (expression1 -> exp OR exp .)
    MINUS           reduce using rule 56 (expression1 -> exp OR exp .)
    CTEI            reduce using rule 56 (expression1 -> exp OR exp .)
    CTEF            reduce using rule 56 (expression1 -> exp OR exp .)
    CTEC            reduce using rule 56 (expression1 -> exp OR exp .)
    TRUE            reduce using rule 56 (expression1 -> exp OR exp .)
    FALSE           reduce using rule 56 (expression1 -> exp OR exp .)
    RBRACE          reduce using rule 56 (expression1 -> exp OR exp .)
    SEMI            reduce using rule 56 (expression1 -> exp OR exp .)
    RPAREN          reduce using rule 56 (expression1 -> exp OR exp .)
    COMMA           reduce using rule 56 (expression1 -> exp OR exp .)
    TO              reduce using rule 56 (expression1 -> exp OR exp .)
    BY              reduce using rule 56 (expression1 -> exp OR exp .)


state 162

    (59) exp_1 -> PLUS np_add_operator . exp
    (57) exp -> . term np_add_quadruple
    (58) exp -> . term exp_1
    (61) term -> . factor
    (62) term -> . factor term_2
    (65) factor -> . LPAREN np_add_paren expression RPAREN np_pop_paren
    (66) factor -> . LBRACKET expression RBRACKET
    (67) factor -> . function_call
    (68) factor -> . factor_prima_1
    (93) function_call -> . ID LPAREN RPAREN SEMI
    (94) function_call -> . ID LPAREN function_call_1 RPAREN SEMI
    (95) function_call -> . ID LPAREN function_call_1 RPAREN
    (96) function_call -> . ID LPAREN RPAREN
    (69) factor_prima_1 -> . PLUS varcte
    (70) factor_prima_1 -> . MINUS varcte
    (71) factor_prima_1 -> . varcte
    (72) varcte -> . ID np_add_id_quad
    (73) varcte -> . CTEI np_add_cte_int
    (74) varcte -> . CTEF np_add_cte_float
    (75) varcte -> . CTEC np_add_cte_char
    (76) varcte -> . TRUE np_add_cte_bool
    (77) varcte -> . FALSE np_add_cte_bool

    LPAREN          shift and go to state 54
    LBRACKET        shift and go to state 48
    ID              shift and go to state 57
    PLUS            shift and go to state 58
    MINUS           shift and go to state 60
    CTEI            shift and go to state 61
    CTEF            shift and go to state 62
    CTEC            shift and go to state 63
    TRUE            shift and go to state 64
    FALSE           shift and go to state 65

    exp                            shift and go to state 190
    term                           shift and go to state 52
    factor                         shift and go to state 53
    function_call                  shift and go to state 55
    factor_prima_1                 shift and go to state 56
    varcte                         shift and go to state 59

state 163

    (60) exp_1 -> MINUS np_add_operator . exp
    (57) exp -> . term np_add_quadruple
    (58) exp -> . term exp_1
    (61) term -> . factor
    (62) term -> . factor term_2
    (65) factor -> . LPAREN np_add_paren expression RPAREN np_pop_paren
    (66) factor -> . LBRACKET expression RBRACKET
    (67) factor -> . function_call
    (68) factor -> . factor_prima_1
    (93) function_call -> . ID LPAREN RPAREN SEMI
    (94) function_call -> . ID LPAREN function_call_1 RPAREN SEMI
    (95) function_call -> . ID LPAREN function_call_1 RPAREN
    (96) function_call -> . ID LPAREN RPAREN
    (69) factor_prima_1 -> . PLUS varcte
    (70) factor_prima_1 -> . MINUS varcte
    (71) factor_prima_1 -> . varcte
    (72) varcte -> . ID np_add_id_quad
    (73) varcte -> . CTEI np_add_cte_int
    (74) varcte -> . CTEF np_add_cte_float
    (75) varcte -> . CTEC np_add_cte_char
    (76) varcte -> . TRUE np_add_cte_bool
    (77) varcte -> . FALSE np_add_cte_bool

    LPAREN          shift and go to state 54
    LBRACKET        shift and go to state 48
    ID              shift and go to state 57
    PLUS            shift and go to state 58
    MINUS           shift and go to state 60
    CTEI            shift and go to state 61
    CTEF            shift and go to state 62
    CTEC            shift and go to state 63
    TRUE            shift and go to state 64
    FALSE           shift and go to state 65

    exp                            shift and go to state 191
    term                           shift and go to state 52
    factor                         shift and go to state 53
    function_call                  shift and go to state 55
    factor_prima_1                 shift and go to state 56
    varcte                         shift and go to state 59

state 164

    (63) term_2 -> TIMES np_add_operator . term
    (61) term -> . factor
    (62) term -> . factor term_2
    (65) factor -> . LPAREN np_add_paren expression RPAREN np_pop_paren
    (66) factor -> . LBRACKET expression RBRACKET
    (67) factor -> . function_call
    (68) factor -> . factor_prima_1
    (93) function_call -> . ID LPAREN RPAREN SEMI
    (94) function_call -> . ID LPAREN function_call_1 RPAREN SEMI
    (95) function_call -> . ID LPAREN function_call_1 RPAREN
    (96) function_call -> . ID LPAREN RPAREN
    (69) factor_prima_1 -> . PLUS varcte
    (70) factor_prima_1 -> . MINUS varcte
    (71) factor_prima_1 -> . varcte
    (72) varcte -> . ID np_add_id_quad
    (73) varcte -> . CTEI np_add_cte_int
    (74) varcte -> . CTEF np_add_cte_float
    (75) varcte -> . CTEC np_add_cte_char
    (76) varcte -> . TRUE np_add_cte_bool
    (77) varcte -> . FALSE np_add_cte_bool

    LPAREN          shift and go to state 54
    LBRACKET        shift and go to state 48
    ID              shift and go to state 57
    PLUS            shift and go to state 58
    MINUS           shift and go to state 60
    CTEI            shift and go to state 61
    CTEF            shift and go to state 62
    CTEC            shift and go to state 63
    TRUE            shift and go to state 64
    FALSE           shift and go to state 65

    term                           shift and go to state 192
    factor                         shift and go to state 53
    function_call                  shift and go to state 55
    factor_prima_1                 shift and go to state 56
    varcte                         shift and go to state 59

state 165

    (64) term_2 -> DIVIDE np_add_operator . term
    (61) term -> . factor
    (62) term -> . factor term_2
    (65) factor -> . LPAREN np_add_paren expression RPAREN np_pop_paren
    (66) factor -> . LBRACKET expression RBRACKET
    (67) factor -> . function_call
    (68) factor -> . factor_prima_1
    (93) function_call -> . ID LPAREN RPAREN SEMI
    (94) function_call -> . ID LPAREN function_call_1 RPAREN SEMI
    (95) function_call -> . ID LPAREN function_call_1 RPAREN
    (96) function_call -> . ID LPAREN RPAREN
    (69) factor_prima_1 -> . PLUS varcte
    (70) factor_prima_1 -> . MINUS varcte
    (71) factor_prima_1 -> . varcte
    (72) varcte -> . ID np_add_id_quad
    (73) varcte -> . CTEI np_add_cte_int
    (74) varcte -> . CTEF np_add_cte_float
    (75) varcte -> . CTEC np_add_cte_char
    (76) varcte -> . TRUE np_add_cte_bool
    (77) varcte -> . FALSE np_add_cte_bool

    LPAREN          shift and go to state 54
    LBRACKET        shift and go to state 48
    ID              shift and go to state 57
    PLUS            shift and go to state 58
    MINUS           shift and go to state 60
    CTEI            shift and go to state 61
    CTEF            shift and go to state 62
    CTEC            shift and go to state 63
    TRUE            shift and go to state 64
    FALSE           shift and go to state 65

    term                           shift and go to state 193
    factor                         shift and go to state 53
    function_call                  shift and go to state 55
    factor_prima_1                 shift and go to state 56
    varcte                         shift and go to state 59

state 166

    (65) factor -> LPAREN np_add_paren expression . RPAREN np_pop_paren

    RPAREN          shift and go to state 194


state 167

    (93) function_call -> ID LPAREN RPAREN . SEMI
    (96) function_call -> ID LPAREN RPAREN .

  ! shift/reduce conflict for SEMI resolved as shift
    SEMI            shift and go to state 195
    TIMES           reduce using rule 96 (function_call -> ID LPAREN RPAREN .)
    DIVIDE          reduce using rule 96 (function_call -> ID LPAREN RPAREN .)
    PLUS            reduce using rule 96 (function_call -> ID LPAREN RPAREN .)
    MINUS           reduce using rule 96 (function_call -> ID LPAREN RPAREN .)
    LT              reduce using rule 96 (function_call -> ID LPAREN RPAREN .)
    LE              reduce using rule 96 (function_call -> ID LPAREN RPAREN .)
    GT              reduce using rule 96 (function_call -> ID LPAREN RPAREN .)
    GE              reduce using rule 96 (function_call -> ID LPAREN RPAREN .)
    EQ              reduce using rule 96 (function_call -> ID LPAREN RPAREN .)
    NE              reduce using rule 96 (function_call -> ID LPAREN RPAREN .)
    AND             reduce using rule 96 (function_call -> ID LPAREN RPAREN .)
    OR              reduce using rule 96 (function_call -> ID LPAREN RPAREN .)
    RBRACKET        reduce using rule 96 (function_call -> ID LPAREN RPAREN .)
    ID              reduce using rule 96 (function_call -> ID LPAREN RPAREN .)
    IF              reduce using rule 96 (function_call -> ID LPAREN RPAREN .)
    PRINT           reduce using rule 96 (function_call -> ID LPAREN RPAREN .)
    READ            reduce using rule 96 (function_call -> ID LPAREN RPAREN .)
    RETURN          reduce using rule 96 (function_call -> ID LPAREN RPAREN .)
    FOR             reduce using rule 96 (function_call -> ID LPAREN RPAREN .)
    WHILE           reduce using rule 96 (function_call -> ID LPAREN RPAREN .)
    MEAN            reduce using rule 96 (function_call -> ID LPAREN RPAREN .)
    MEDIAN          reduce using rule 96 (function_call -> ID LPAREN RPAREN .)
    MODE            reduce using rule 96 (function_call -> ID LPAREN RPAREN .)
    VARIANCE        reduce using rule 96 (function_call -> ID LPAREN RPAREN .)
    STDEV           reduce using rule 96 (function_call -> ID LPAREN RPAREN .)
    LPAREN          reduce using rule 96 (function_call -> ID LPAREN RPAREN .)
    LBRACKET        reduce using rule 96 (function_call -> ID LPAREN RPAREN .)
    CTEI            reduce using rule 96 (function_call -> ID LPAREN RPAREN .)
    CTEF            reduce using rule 96 (function_call -> ID LPAREN RPAREN .)
    CTEC            reduce using rule 96 (function_call -> ID LPAREN RPAREN .)
    TRUE            reduce using rule 96 (function_call -> ID LPAREN RPAREN .)
    FALSE           reduce using rule 96 (function_call -> ID LPAREN RPAREN .)
    RBRACE          reduce using rule 96 (function_call -> ID LPAREN RPAREN .)
    RPAREN          reduce using rule 96 (function_call -> ID LPAREN RPAREN .)
    COMMA           reduce using rule 96 (function_call -> ID LPAREN RPAREN .)
    TO              reduce using rule 96 (function_call -> ID LPAREN RPAREN .)
    BY              reduce using rule 96 (function_call -> ID LPAREN RPAREN .)

  ! SEMI            [ reduce using rule 96 (function_call -> ID LPAREN RPAREN .) ]


state 168

    (94) function_call -> ID LPAREN function_call_1 . RPAREN SEMI
    (95) function_call -> ID LPAREN function_call_1 . RPAREN

    RPAREN          shift and go to state 196


state 169

    (97) function_call_1 -> expression .
    (98) function_call_1 -> expression . COMMA function_call_1

    RPAREN          reduce using rule 97 (function_call_1 -> expression .)
    COMMA           shift and go to state 197


state 170

    (25) params -> ID COLON . type np_add_vars COMMA params
    (26) params -> ID COLON . type np_add_vars
    (10) type -> . INT type_1
    (11) type -> . FLOAT type_1
    (12) type -> . CHAR type_1
    (13) type -> . BOOL type_1

    INT             shift and go to state 26
    FLOAT           shift and go to state 27
    CHAR            shift and go to state 28
    BOOL            shift and go to state 29

    type                           shift and go to state 198

state 171

    (16) function -> FUNCTION ID COLON return_type np_create_new_scope LPAREN RPAREN block .

    FUNCTION        reduce using rule 16 (function -> FUNCTION ID COLON return_type np_create_new_scope LPAREN RPAREN block .)
    MAIN            reduce using rule 16 (function -> FUNCTION ID COLON return_type np_create_new_scope LPAREN RPAREN block .)


state 172

    (18) function -> FUNCTION ID COLON return_type np_create_new_scope LPAREN RPAREN vars . block
    (22) block -> . LBRACE statements RBRACE

    LBRACE          shift and go to state 46

    block                          shift and go to state 199

state 173

    (17) function -> FUNCTION ID COLON return_type np_create_new_scope LPAREN params RPAREN . block
    (19) function -> FUNCTION ID COLON return_type np_create_new_scope LPAREN params RPAREN . vars block
    (22) block -> . LBRACE statements RBRACE
    (5) vars -> . vars_1
    (6) vars_1 -> . LET vars_prima_1 vars_1
    (7) vars_1 -> . LET vars_prima_1

    LBRACE          shift and go to state 46
    LET             shift and go to state 11

    block                          shift and go to state 200
    vars                           shift and go to state 201
    vars_1                         shift and go to state 8

state 174

    (43) assignment -> ID EQUALS expression . SEMI

    SEMI            shift and go to state 202


state 175

    (44) assignment -> ID LBRACKET expression . RBRACKET EQUALS expression SEMI

    RBRACKET        shift and go to state 203


state 176

    (45) condition -> IF LPAREN expression . RPAREN block
    (46) condition -> IF LPAREN expression . RPAREN block ELSE block

    RPAREN          shift and go to state 204


state 177

    (78) writing -> PRINT LPAREN writing_1 . RPAREN SEMI

    RPAREN          shift and go to state 205


state 178

    (79) writing_1 -> expression . COMMA writing_1
    (80) writing_1 -> expression .

    COMMA           shift and go to state 206
    RPAREN          reduce using rule 80 (writing_1 -> expression .)


state 179

    (81) writing_1 -> CTESTRING .
    (82) writing_1 -> CTESTRING . COMMA

    RPAREN          reduce using rule 81 (writing_1 -> CTESTRING .)
    COMMA           shift and go to state 207


state 180

    (83) reading -> READ LPAREN reading_1 . RPAREN SEMI

    RPAREN          shift and go to state 208


state 181

    (84) reading_1 -> ID . COMMA reading_1
    (85) reading_1 -> ID . LBRACKET expression RBRACKET COMMA reading_1
    (86) reading_1 -> ID .
    (87) reading_1 -> ID . LBRACKET expression RBRACKET

    COMMA           shift and go to state 209
    LBRACKET        shift and go to state 210
    RPAREN          reduce using rule 86 (reading_1 -> ID .)


state 182

    (92) return -> RETURN expression SEMI .

    ID              reduce using rule 92 (return -> RETURN expression SEMI .)
    IF              reduce using rule 92 (return -> RETURN expression SEMI .)
    PRINT           reduce using rule 92 (return -> RETURN expression SEMI .)
    READ            reduce using rule 92 (return -> RETURN expression SEMI .)
    RETURN          reduce using rule 92 (return -> RETURN expression SEMI .)
    FOR             reduce using rule 92 (return -> RETURN expression SEMI .)
    WHILE           reduce using rule 92 (return -> RETURN expression SEMI .)
    MEAN            reduce using rule 92 (return -> RETURN expression SEMI .)
    MEDIAN          reduce using rule 92 (return -> RETURN expression SEMI .)
    MODE            reduce using rule 92 (return -> RETURN expression SEMI .)
    VARIANCE        reduce using rule 92 (return -> RETURN expression SEMI .)
    STDEV           reduce using rule 92 (return -> RETURN expression SEMI .)
    LPAREN          reduce using rule 92 (return -> RETURN expression SEMI .)
    LBRACKET        reduce using rule 92 (return -> RETURN expression SEMI .)
    PLUS            reduce using rule 92 (return -> RETURN expression SEMI .)
    MINUS           reduce using rule 92 (return -> RETURN expression SEMI .)
    CTEI            reduce using rule 92 (return -> RETURN expression SEMI .)
    CTEF            reduce using rule 92 (return -> RETURN expression SEMI .)
    CTEC            reduce using rule 92 (return -> RETURN expression SEMI .)
    TRUE            reduce using rule 92 (return -> RETURN expression SEMI .)
    FALSE           reduce using rule 92 (return -> RETURN expression SEMI .)
    RBRACE          reduce using rule 92 (return -> RETURN expression SEMI .)


state 183

    (91) non_conditional_loop -> FOR LPAREN ID . EQUALS expression TO expression BY expression RPAREN block

    EQUALS          shift and go to state 211


state 184

    (90) conditional_loop -> WHILE LPAREN expression . RPAREN DO block

    RPAREN          shift and go to state 212


state 185

    (99) mean -> MEAN LPAREN expression . RPAREN SEMI

    RPAREN          shift and go to state 213


state 186

    (100) median -> MEDIAN LPAREN expression . RPAREN SEMI

    RPAREN          shift and go to state 214


state 187

    (101) mode -> MODE LPAREN expression . RPAREN SEMI

    RPAREN          shift and go to state 215


state 188

    (102) variance -> VARIANCE LPAREN expression . RPAREN SEMI

    RPAREN          shift and go to state 216


state 189

    (103) standard_deviation -> STDEV LPAREN expression . RPAREN SEMI

    RPAREN          shift and go to state 217


state 190

    (59) exp_1 -> PLUS np_add_operator exp .

    LT              reduce using rule 59 (exp_1 -> PLUS np_add_operator exp .)
    LE              reduce using rule 59 (exp_1 -> PLUS np_add_operator exp .)
    GT              reduce using rule 59 (exp_1 -> PLUS np_add_operator exp .)
    GE              reduce using rule 59 (exp_1 -> PLUS np_add_operator exp .)
    EQ              reduce using rule 59 (exp_1 -> PLUS np_add_operator exp .)
    NE              reduce using rule 59 (exp_1 -> PLUS np_add_operator exp .)
    AND             reduce using rule 59 (exp_1 -> PLUS np_add_operator exp .)
    OR              reduce using rule 59 (exp_1 -> PLUS np_add_operator exp .)
    RBRACKET        reduce using rule 59 (exp_1 -> PLUS np_add_operator exp .)
    ID              reduce using rule 59 (exp_1 -> PLUS np_add_operator exp .)
    IF              reduce using rule 59 (exp_1 -> PLUS np_add_operator exp .)
    PRINT           reduce using rule 59 (exp_1 -> PLUS np_add_operator exp .)
    READ            reduce using rule 59 (exp_1 -> PLUS np_add_operator exp .)
    RETURN          reduce using rule 59 (exp_1 -> PLUS np_add_operator exp .)
    FOR             reduce using rule 59 (exp_1 -> PLUS np_add_operator exp .)
    WHILE           reduce using rule 59 (exp_1 -> PLUS np_add_operator exp .)
    MEAN            reduce using rule 59 (exp_1 -> PLUS np_add_operator exp .)
    MEDIAN          reduce using rule 59 (exp_1 -> PLUS np_add_operator exp .)
    MODE            reduce using rule 59 (exp_1 -> PLUS np_add_operator exp .)
    VARIANCE        reduce using rule 59 (exp_1 -> PLUS np_add_operator exp .)
    STDEV           reduce using rule 59 (exp_1 -> PLUS np_add_operator exp .)
    LPAREN          reduce using rule 59 (exp_1 -> PLUS np_add_operator exp .)
    LBRACKET        reduce using rule 59 (exp_1 -> PLUS np_add_operator exp .)
    PLUS            reduce using rule 59 (exp_1 -> PLUS np_add_operator exp .)
    MINUS           reduce using rule 59 (exp_1 -> PLUS np_add_operator exp .)
    CTEI            reduce using rule 59 (exp_1 -> PLUS np_add_operator exp .)
    CTEF            reduce using rule 59 (exp_1 -> PLUS np_add_operator exp .)
    CTEC            reduce using rule 59 (exp_1 -> PLUS np_add_operator exp .)
    TRUE            reduce using rule 59 (exp_1 -> PLUS np_add_operator exp .)
    FALSE           reduce using rule 59 (exp_1 -> PLUS np_add_operator exp .)
    RBRACE          reduce using rule 59 (exp_1 -> PLUS np_add_operator exp .)
    SEMI            reduce using rule 59 (exp_1 -> PLUS np_add_operator exp .)
    RPAREN          reduce using rule 59 (exp_1 -> PLUS np_add_operator exp .)
    COMMA           reduce using rule 59 (exp_1 -> PLUS np_add_operator exp .)
    TO              reduce using rule 59 (exp_1 -> PLUS np_add_operator exp .)
    BY              reduce using rule 59 (exp_1 -> PLUS np_add_operator exp .)


state 191

    (60) exp_1 -> MINUS np_add_operator exp .

    LT              reduce using rule 60 (exp_1 -> MINUS np_add_operator exp .)
    LE              reduce using rule 60 (exp_1 -> MINUS np_add_operator exp .)
    GT              reduce using rule 60 (exp_1 -> MINUS np_add_operator exp .)
    GE              reduce using rule 60 (exp_1 -> MINUS np_add_operator exp .)
    EQ              reduce using rule 60 (exp_1 -> MINUS np_add_operator exp .)
    NE              reduce using rule 60 (exp_1 -> MINUS np_add_operator exp .)
    AND             reduce using rule 60 (exp_1 -> MINUS np_add_operator exp .)
    OR              reduce using rule 60 (exp_1 -> MINUS np_add_operator exp .)
    RBRACKET        reduce using rule 60 (exp_1 -> MINUS np_add_operator exp .)
    ID              reduce using rule 60 (exp_1 -> MINUS np_add_operator exp .)
    IF              reduce using rule 60 (exp_1 -> MINUS np_add_operator exp .)
    PRINT           reduce using rule 60 (exp_1 -> MINUS np_add_operator exp .)
    READ            reduce using rule 60 (exp_1 -> MINUS np_add_operator exp .)
    RETURN          reduce using rule 60 (exp_1 -> MINUS np_add_operator exp .)
    FOR             reduce using rule 60 (exp_1 -> MINUS np_add_operator exp .)
    WHILE           reduce using rule 60 (exp_1 -> MINUS np_add_operator exp .)
    MEAN            reduce using rule 60 (exp_1 -> MINUS np_add_operator exp .)
    MEDIAN          reduce using rule 60 (exp_1 -> MINUS np_add_operator exp .)
    MODE            reduce using rule 60 (exp_1 -> MINUS np_add_operator exp .)
    VARIANCE        reduce using rule 60 (exp_1 -> MINUS np_add_operator exp .)
    STDEV           reduce using rule 60 (exp_1 -> MINUS np_add_operator exp .)
    LPAREN          reduce using rule 60 (exp_1 -> MINUS np_add_operator exp .)
    LBRACKET        reduce using rule 60 (exp_1 -> MINUS np_add_operator exp .)
    PLUS            reduce using rule 60 (exp_1 -> MINUS np_add_operator exp .)
    MINUS           reduce using rule 60 (exp_1 -> MINUS np_add_operator exp .)
    CTEI            reduce using rule 60 (exp_1 -> MINUS np_add_operator exp .)
    CTEF            reduce using rule 60 (exp_1 -> MINUS np_add_operator exp .)
    CTEC            reduce using rule 60 (exp_1 -> MINUS np_add_operator exp .)
    TRUE            reduce using rule 60 (exp_1 -> MINUS np_add_operator exp .)
    FALSE           reduce using rule 60 (exp_1 -> MINUS np_add_operator exp .)
    RBRACE          reduce using rule 60 (exp_1 -> MINUS np_add_operator exp .)
    SEMI            reduce using rule 60 (exp_1 -> MINUS np_add_operator exp .)
    RPAREN          reduce using rule 60 (exp_1 -> MINUS np_add_operator exp .)
    COMMA           reduce using rule 60 (exp_1 -> MINUS np_add_operator exp .)
    TO              reduce using rule 60 (exp_1 -> MINUS np_add_operator exp .)
    BY              reduce using rule 60 (exp_1 -> MINUS np_add_operator exp .)


state 192

    (63) term_2 -> TIMES np_add_operator term .

    PLUS            reduce using rule 63 (term_2 -> TIMES np_add_operator term .)
    MINUS           reduce using rule 63 (term_2 -> TIMES np_add_operator term .)
    LT              reduce using rule 63 (term_2 -> TIMES np_add_operator term .)
    LE              reduce using rule 63 (term_2 -> TIMES np_add_operator term .)
    GT              reduce using rule 63 (term_2 -> TIMES np_add_operator term .)
    GE              reduce using rule 63 (term_2 -> TIMES np_add_operator term .)
    EQ              reduce using rule 63 (term_2 -> TIMES np_add_operator term .)
    NE              reduce using rule 63 (term_2 -> TIMES np_add_operator term .)
    AND             reduce using rule 63 (term_2 -> TIMES np_add_operator term .)
    OR              reduce using rule 63 (term_2 -> TIMES np_add_operator term .)
    RBRACKET        reduce using rule 63 (term_2 -> TIMES np_add_operator term .)
    ID              reduce using rule 63 (term_2 -> TIMES np_add_operator term .)
    IF              reduce using rule 63 (term_2 -> TIMES np_add_operator term .)
    PRINT           reduce using rule 63 (term_2 -> TIMES np_add_operator term .)
    READ            reduce using rule 63 (term_2 -> TIMES np_add_operator term .)
    RETURN          reduce using rule 63 (term_2 -> TIMES np_add_operator term .)
    FOR             reduce using rule 63 (term_2 -> TIMES np_add_operator term .)
    WHILE           reduce using rule 63 (term_2 -> TIMES np_add_operator term .)
    MEAN            reduce using rule 63 (term_2 -> TIMES np_add_operator term .)
    MEDIAN          reduce using rule 63 (term_2 -> TIMES np_add_operator term .)
    MODE            reduce using rule 63 (term_2 -> TIMES np_add_operator term .)
    VARIANCE        reduce using rule 63 (term_2 -> TIMES np_add_operator term .)
    STDEV           reduce using rule 63 (term_2 -> TIMES np_add_operator term .)
    LPAREN          reduce using rule 63 (term_2 -> TIMES np_add_operator term .)
    LBRACKET        reduce using rule 63 (term_2 -> TIMES np_add_operator term .)
    CTEI            reduce using rule 63 (term_2 -> TIMES np_add_operator term .)
    CTEF            reduce using rule 63 (term_2 -> TIMES np_add_operator term .)
    CTEC            reduce using rule 63 (term_2 -> TIMES np_add_operator term .)
    TRUE            reduce using rule 63 (term_2 -> TIMES np_add_operator term .)
    FALSE           reduce using rule 63 (term_2 -> TIMES np_add_operator term .)
    RBRACE          reduce using rule 63 (term_2 -> TIMES np_add_operator term .)
    SEMI            reduce using rule 63 (term_2 -> TIMES np_add_operator term .)
    RPAREN          reduce using rule 63 (term_2 -> TIMES np_add_operator term .)
    COMMA           reduce using rule 63 (term_2 -> TIMES np_add_operator term .)
    TO              reduce using rule 63 (term_2 -> TIMES np_add_operator term .)
    BY              reduce using rule 63 (term_2 -> TIMES np_add_operator term .)


state 193

    (64) term_2 -> DIVIDE np_add_operator term .

    PLUS            reduce using rule 64 (term_2 -> DIVIDE np_add_operator term .)
    MINUS           reduce using rule 64 (term_2 -> DIVIDE np_add_operator term .)
    LT              reduce using rule 64 (term_2 -> DIVIDE np_add_operator term .)
    LE              reduce using rule 64 (term_2 -> DIVIDE np_add_operator term .)
    GT              reduce using rule 64 (term_2 -> DIVIDE np_add_operator term .)
    GE              reduce using rule 64 (term_2 -> DIVIDE np_add_operator term .)
    EQ              reduce using rule 64 (term_2 -> DIVIDE np_add_operator term .)
    NE              reduce using rule 64 (term_2 -> DIVIDE np_add_operator term .)
    AND             reduce using rule 64 (term_2 -> DIVIDE np_add_operator term .)
    OR              reduce using rule 64 (term_2 -> DIVIDE np_add_operator term .)
    RBRACKET        reduce using rule 64 (term_2 -> DIVIDE np_add_operator term .)
    ID              reduce using rule 64 (term_2 -> DIVIDE np_add_operator term .)
    IF              reduce using rule 64 (term_2 -> DIVIDE np_add_operator term .)
    PRINT           reduce using rule 64 (term_2 -> DIVIDE np_add_operator term .)
    READ            reduce using rule 64 (term_2 -> DIVIDE np_add_operator term .)
    RETURN          reduce using rule 64 (term_2 -> DIVIDE np_add_operator term .)
    FOR             reduce using rule 64 (term_2 -> DIVIDE np_add_operator term .)
    WHILE           reduce using rule 64 (term_2 -> DIVIDE np_add_operator term .)
    MEAN            reduce using rule 64 (term_2 -> DIVIDE np_add_operator term .)
    MEDIAN          reduce using rule 64 (term_2 -> DIVIDE np_add_operator term .)
    MODE            reduce using rule 64 (term_2 -> DIVIDE np_add_operator term .)
    VARIANCE        reduce using rule 64 (term_2 -> DIVIDE np_add_operator term .)
    STDEV           reduce using rule 64 (term_2 -> DIVIDE np_add_operator term .)
    LPAREN          reduce using rule 64 (term_2 -> DIVIDE np_add_operator term .)
    LBRACKET        reduce using rule 64 (term_2 -> DIVIDE np_add_operator term .)
    CTEI            reduce using rule 64 (term_2 -> DIVIDE np_add_operator term .)
    CTEF            reduce using rule 64 (term_2 -> DIVIDE np_add_operator term .)
    CTEC            reduce using rule 64 (term_2 -> DIVIDE np_add_operator term .)
    TRUE            reduce using rule 64 (term_2 -> DIVIDE np_add_operator term .)
    FALSE           reduce using rule 64 (term_2 -> DIVIDE np_add_operator term .)
    RBRACE          reduce using rule 64 (term_2 -> DIVIDE np_add_operator term .)
    SEMI            reduce using rule 64 (term_2 -> DIVIDE np_add_operator term .)
    RPAREN          reduce using rule 64 (term_2 -> DIVIDE np_add_operator term .)
    COMMA           reduce using rule 64 (term_2 -> DIVIDE np_add_operator term .)
    TO              reduce using rule 64 (term_2 -> DIVIDE np_add_operator term .)
    BY              reduce using rule 64 (term_2 -> DIVIDE np_add_operator term .)


state 194

    (65) factor -> LPAREN np_add_paren expression RPAREN . np_pop_paren
    (117) np_pop_paren -> .

    TIMES           reduce using rule 117 (np_pop_paren -> .)
    DIVIDE          reduce using rule 117 (np_pop_paren -> .)
    PLUS            reduce using rule 117 (np_pop_paren -> .)
    MINUS           reduce using rule 117 (np_pop_paren -> .)
    LT              reduce using rule 117 (np_pop_paren -> .)
    LE              reduce using rule 117 (np_pop_paren -> .)
    GT              reduce using rule 117 (np_pop_paren -> .)
    GE              reduce using rule 117 (np_pop_paren -> .)
    EQ              reduce using rule 117 (np_pop_paren -> .)
    NE              reduce using rule 117 (np_pop_paren -> .)
    AND             reduce using rule 117 (np_pop_paren -> .)
    OR              reduce using rule 117 (np_pop_paren -> .)
    RBRACKET        reduce using rule 117 (np_pop_paren -> .)
    ID              reduce using rule 117 (np_pop_paren -> .)
    IF              reduce using rule 117 (np_pop_paren -> .)
    PRINT           reduce using rule 117 (np_pop_paren -> .)
    READ            reduce using rule 117 (np_pop_paren -> .)
    RETURN          reduce using rule 117 (np_pop_paren -> .)
    FOR             reduce using rule 117 (np_pop_paren -> .)
    WHILE           reduce using rule 117 (np_pop_paren -> .)
    MEAN            reduce using rule 117 (np_pop_paren -> .)
    MEDIAN          reduce using rule 117 (np_pop_paren -> .)
    MODE            reduce using rule 117 (np_pop_paren -> .)
    VARIANCE        reduce using rule 117 (np_pop_paren -> .)
    STDEV           reduce using rule 117 (np_pop_paren -> .)
    LPAREN          reduce using rule 117 (np_pop_paren -> .)
    LBRACKET        reduce using rule 117 (np_pop_paren -> .)
    CTEI            reduce using rule 117 (np_pop_paren -> .)
    CTEF            reduce using rule 117 (np_pop_paren -> .)
    CTEC            reduce using rule 117 (np_pop_paren -> .)
    TRUE            reduce using rule 117 (np_pop_paren -> .)
    FALSE           reduce using rule 117 (np_pop_paren -> .)
    RBRACE          reduce using rule 117 (np_pop_paren -> .)
    SEMI            reduce using rule 117 (np_pop_paren -> .)
    RPAREN          reduce using rule 117 (np_pop_paren -> .)
    COMMA           reduce using rule 117 (np_pop_paren -> .)
    TO              reduce using rule 117 (np_pop_paren -> .)
    BY              reduce using rule 117 (np_pop_paren -> .)

    np_pop_paren                   shift and go to state 218

state 195

    (93) function_call -> ID LPAREN RPAREN SEMI .

    TIMES           reduce using rule 93 (function_call -> ID LPAREN RPAREN SEMI .)
    DIVIDE          reduce using rule 93 (function_call -> ID LPAREN RPAREN SEMI .)
    PLUS            reduce using rule 93 (function_call -> ID LPAREN RPAREN SEMI .)
    MINUS           reduce using rule 93 (function_call -> ID LPAREN RPAREN SEMI .)
    LT              reduce using rule 93 (function_call -> ID LPAREN RPAREN SEMI .)
    LE              reduce using rule 93 (function_call -> ID LPAREN RPAREN SEMI .)
    GT              reduce using rule 93 (function_call -> ID LPAREN RPAREN SEMI .)
    GE              reduce using rule 93 (function_call -> ID LPAREN RPAREN SEMI .)
    EQ              reduce using rule 93 (function_call -> ID LPAREN RPAREN SEMI .)
    NE              reduce using rule 93 (function_call -> ID LPAREN RPAREN SEMI .)
    AND             reduce using rule 93 (function_call -> ID LPAREN RPAREN SEMI .)
    OR              reduce using rule 93 (function_call -> ID LPAREN RPAREN SEMI .)
    RBRACKET        reduce using rule 93 (function_call -> ID LPAREN RPAREN SEMI .)
    ID              reduce using rule 93 (function_call -> ID LPAREN RPAREN SEMI .)
    IF              reduce using rule 93 (function_call -> ID LPAREN RPAREN SEMI .)
    PRINT           reduce using rule 93 (function_call -> ID LPAREN RPAREN SEMI .)
    READ            reduce using rule 93 (function_call -> ID LPAREN RPAREN SEMI .)
    RETURN          reduce using rule 93 (function_call -> ID LPAREN RPAREN SEMI .)
    FOR             reduce using rule 93 (function_call -> ID LPAREN RPAREN SEMI .)
    WHILE           reduce using rule 93 (function_call -> ID LPAREN RPAREN SEMI .)
    MEAN            reduce using rule 93 (function_call -> ID LPAREN RPAREN SEMI .)
    MEDIAN          reduce using rule 93 (function_call -> ID LPAREN RPAREN SEMI .)
    MODE            reduce using rule 93 (function_call -> ID LPAREN RPAREN SEMI .)
    VARIANCE        reduce using rule 93 (function_call -> ID LPAREN RPAREN SEMI .)
    STDEV           reduce using rule 93 (function_call -> ID LPAREN RPAREN SEMI .)
    LPAREN          reduce using rule 93 (function_call -> ID LPAREN RPAREN SEMI .)
    LBRACKET        reduce using rule 93 (function_call -> ID LPAREN RPAREN SEMI .)
    CTEI            reduce using rule 93 (function_call -> ID LPAREN RPAREN SEMI .)
    CTEF            reduce using rule 93 (function_call -> ID LPAREN RPAREN SEMI .)
    CTEC            reduce using rule 93 (function_call -> ID LPAREN RPAREN SEMI .)
    TRUE            reduce using rule 93 (function_call -> ID LPAREN RPAREN SEMI .)
    FALSE           reduce using rule 93 (function_call -> ID LPAREN RPAREN SEMI .)
    RBRACE          reduce using rule 93 (function_call -> ID LPAREN RPAREN SEMI .)
    SEMI            reduce using rule 93 (function_call -> ID LPAREN RPAREN SEMI .)
    RPAREN          reduce using rule 93 (function_call -> ID LPAREN RPAREN SEMI .)
    COMMA           reduce using rule 93 (function_call -> ID LPAREN RPAREN SEMI .)
    TO              reduce using rule 93 (function_call -> ID LPAREN RPAREN SEMI .)
    BY              reduce using rule 93 (function_call -> ID LPAREN RPAREN SEMI .)


state 196

    (94) function_call -> ID LPAREN function_call_1 RPAREN . SEMI
    (95) function_call -> ID LPAREN function_call_1 RPAREN .

  ! shift/reduce conflict for SEMI resolved as shift
    SEMI            shift and go to state 219
    TIMES           reduce using rule 95 (function_call -> ID LPAREN function_call_1 RPAREN .)
    DIVIDE          reduce using rule 95 (function_call -> ID LPAREN function_call_1 RPAREN .)
    PLUS            reduce using rule 95 (function_call -> ID LPAREN function_call_1 RPAREN .)
    MINUS           reduce using rule 95 (function_call -> ID LPAREN function_call_1 RPAREN .)
    LT              reduce using rule 95 (function_call -> ID LPAREN function_call_1 RPAREN .)
    LE              reduce using rule 95 (function_call -> ID LPAREN function_call_1 RPAREN .)
    GT              reduce using rule 95 (function_call -> ID LPAREN function_call_1 RPAREN .)
    GE              reduce using rule 95 (function_call -> ID LPAREN function_call_1 RPAREN .)
    EQ              reduce using rule 95 (function_call -> ID LPAREN function_call_1 RPAREN .)
    NE              reduce using rule 95 (function_call -> ID LPAREN function_call_1 RPAREN .)
    AND             reduce using rule 95 (function_call -> ID LPAREN function_call_1 RPAREN .)
    OR              reduce using rule 95 (function_call -> ID LPAREN function_call_1 RPAREN .)
    RBRACKET        reduce using rule 95 (function_call -> ID LPAREN function_call_1 RPAREN .)
    ID              reduce using rule 95 (function_call -> ID LPAREN function_call_1 RPAREN .)
    IF              reduce using rule 95 (function_call -> ID LPAREN function_call_1 RPAREN .)
    PRINT           reduce using rule 95 (function_call -> ID LPAREN function_call_1 RPAREN .)
    READ            reduce using rule 95 (function_call -> ID LPAREN function_call_1 RPAREN .)
    RETURN          reduce using rule 95 (function_call -> ID LPAREN function_call_1 RPAREN .)
    FOR             reduce using rule 95 (function_call -> ID LPAREN function_call_1 RPAREN .)
    WHILE           reduce using rule 95 (function_call -> ID LPAREN function_call_1 RPAREN .)
    MEAN            reduce using rule 95 (function_call -> ID LPAREN function_call_1 RPAREN .)
    MEDIAN          reduce using rule 95 (function_call -> ID LPAREN function_call_1 RPAREN .)
    MODE            reduce using rule 95 (function_call -> ID LPAREN function_call_1 RPAREN .)
    VARIANCE        reduce using rule 95 (function_call -> ID LPAREN function_call_1 RPAREN .)
    STDEV           reduce using rule 95 (function_call -> ID LPAREN function_call_1 RPAREN .)
    LPAREN          reduce using rule 95 (function_call -> ID LPAREN function_call_1 RPAREN .)
    LBRACKET        reduce using rule 95 (function_call -> ID LPAREN function_call_1 RPAREN .)
    CTEI            reduce using rule 95 (function_call -> ID LPAREN function_call_1 RPAREN .)
    CTEF            reduce using rule 95 (function_call -> ID LPAREN function_call_1 RPAREN .)
    CTEC            reduce using rule 95 (function_call -> ID LPAREN function_call_1 RPAREN .)
    TRUE            reduce using rule 95 (function_call -> ID LPAREN function_call_1 RPAREN .)
    FALSE           reduce using rule 95 (function_call -> ID LPAREN function_call_1 RPAREN .)
    RBRACE          reduce using rule 95 (function_call -> ID LPAREN function_call_1 RPAREN .)
    RPAREN          reduce using rule 95 (function_call -> ID LPAREN function_call_1 RPAREN .)
    COMMA           reduce using rule 95 (function_call -> ID LPAREN function_call_1 RPAREN .)
    TO              reduce using rule 95 (function_call -> ID LPAREN function_call_1 RPAREN .)
    BY              reduce using rule 95 (function_call -> ID LPAREN function_call_1 RPAREN .)

  ! SEMI            [ reduce using rule 95 (function_call -> ID LPAREN function_call_1 RPAREN .) ]


state 197

    (98) function_call_1 -> expression COMMA . function_call_1
    (97) function_call_1 -> . expression
    (98) function_call_1 -> . expression COMMA function_call_1
    (47) expression -> . exp
    (48) expression -> . expression1
    (57) exp -> . term np_add_quadruple
    (58) exp -> . term exp_1
    (49) expression1 -> . exp LT exp
    (50) expression1 -> . exp LE exp
    (51) expression1 -> . exp GT exp
    (52) expression1 -> . exp GE exp
    (53) expression1 -> . exp EQ exp
    (54) expression1 -> . exp NE exp
    (55) expression1 -> . exp AND exp
    (56) expression1 -> . exp OR exp
    (61) term -> . factor
    (62) term -> . factor term_2
    (65) factor -> . LPAREN np_add_paren expression RPAREN np_pop_paren
    (66) factor -> . LBRACKET expression RBRACKET
    (67) factor -> . function_call
    (68) factor -> . factor_prima_1
    (93) function_call -> . ID LPAREN RPAREN SEMI
    (94) function_call -> . ID LPAREN function_call_1 RPAREN SEMI
    (95) function_call -> . ID LPAREN function_call_1 RPAREN
    (96) function_call -> . ID LPAREN RPAREN
    (69) factor_prima_1 -> . PLUS varcte
    (70) factor_prima_1 -> . MINUS varcte
    (71) factor_prima_1 -> . varcte
    (72) varcte -> . ID np_add_id_quad
    (73) varcte -> . CTEI np_add_cte_int
    (74) varcte -> . CTEF np_add_cte_float
    (75) varcte -> . CTEC np_add_cte_char
    (76) varcte -> . TRUE np_add_cte_bool
    (77) varcte -> . FALSE np_add_cte_bool

    LPAREN          shift and go to state 54
    LBRACKET        shift and go to state 48
    ID              shift and go to state 57
    PLUS            shift and go to state 58
    MINUS           shift and go to state 60
    CTEI            shift and go to state 61
    CTEF            shift and go to state 62
    CTEC            shift and go to state 63
    TRUE            shift and go to state 64
    FALSE           shift and go to state 65

    expression                     shift and go to state 169
    function_call_1                shift and go to state 220
    exp                            shift and go to state 50
    expression1                    shift and go to state 51
    term                           shift and go to state 52
    factor                         shift and go to state 53
    function_call                  shift and go to state 55
    factor_prima_1                 shift and go to state 56
    varcte                         shift and go to state 59

state 198

    (25) params -> ID COLON type . np_add_vars COMMA params
    (26) params -> ID COLON type . np_add_vars
    (109) np_add_vars -> .

    COMMA           reduce using rule 109 (np_add_vars -> .)
    RPAREN          reduce using rule 109 (np_add_vars -> .)

    np_add_vars                    shift and go to state 221

state 199

    (18) function -> FUNCTION ID COLON return_type np_create_new_scope LPAREN RPAREN vars block .

    FUNCTION        reduce using rule 18 (function -> FUNCTION ID COLON return_type np_create_new_scope LPAREN RPAREN vars block .)
    MAIN            reduce using rule 18 (function -> FUNCTION ID COLON return_type np_create_new_scope LPAREN RPAREN vars block .)


state 200

    (17) function -> FUNCTION ID COLON return_type np_create_new_scope LPAREN params RPAREN block .

    FUNCTION        reduce using rule 17 (function -> FUNCTION ID COLON return_type np_create_new_scope LPAREN params RPAREN block .)
    MAIN            reduce using rule 17 (function -> FUNCTION ID COLON return_type np_create_new_scope LPAREN params RPAREN block .)


state 201

    (19) function -> FUNCTION ID COLON return_type np_create_new_scope LPAREN params RPAREN vars . block
    (22) block -> . LBRACE statements RBRACE

    LBRACE          shift and go to state 46

    block                          shift and go to state 222

state 202

    (43) assignment -> ID EQUALS expression SEMI .

    ID              reduce using rule 43 (assignment -> ID EQUALS expression SEMI .)
    IF              reduce using rule 43 (assignment -> ID EQUALS expression SEMI .)
    PRINT           reduce using rule 43 (assignment -> ID EQUALS expression SEMI .)
    READ            reduce using rule 43 (assignment -> ID EQUALS expression SEMI .)
    RETURN          reduce using rule 43 (assignment -> ID EQUALS expression SEMI .)
    FOR             reduce using rule 43 (assignment -> ID EQUALS expression SEMI .)
    WHILE           reduce using rule 43 (assignment -> ID EQUALS expression SEMI .)
    MEAN            reduce using rule 43 (assignment -> ID EQUALS expression SEMI .)
    MEDIAN          reduce using rule 43 (assignment -> ID EQUALS expression SEMI .)
    MODE            reduce using rule 43 (assignment -> ID EQUALS expression SEMI .)
    VARIANCE        reduce using rule 43 (assignment -> ID EQUALS expression SEMI .)
    STDEV           reduce using rule 43 (assignment -> ID EQUALS expression SEMI .)
    LPAREN          reduce using rule 43 (assignment -> ID EQUALS expression SEMI .)
    LBRACKET        reduce using rule 43 (assignment -> ID EQUALS expression SEMI .)
    PLUS            reduce using rule 43 (assignment -> ID EQUALS expression SEMI .)
    MINUS           reduce using rule 43 (assignment -> ID EQUALS expression SEMI .)
    CTEI            reduce using rule 43 (assignment -> ID EQUALS expression SEMI .)
    CTEF            reduce using rule 43 (assignment -> ID EQUALS expression SEMI .)
    CTEC            reduce using rule 43 (assignment -> ID EQUALS expression SEMI .)
    TRUE            reduce using rule 43 (assignment -> ID EQUALS expression SEMI .)
    FALSE           reduce using rule 43 (assignment -> ID EQUALS expression SEMI .)
    RBRACE          reduce using rule 43 (assignment -> ID EQUALS expression SEMI .)


state 203

    (44) assignment -> ID LBRACKET expression RBRACKET . EQUALS expression SEMI

    EQUALS          shift and go to state 223


state 204

    (45) condition -> IF LPAREN expression RPAREN . block
    (46) condition -> IF LPAREN expression RPAREN . block ELSE block
    (22) block -> . LBRACE statements RBRACE

    LBRACE          shift and go to state 46

    block                          shift and go to state 224

state 205

    (78) writing -> PRINT LPAREN writing_1 RPAREN . SEMI

    SEMI            shift and go to state 225


state 206

    (79) writing_1 -> expression COMMA . writing_1
    (79) writing_1 -> . expression COMMA writing_1
    (80) writing_1 -> . expression
    (81) writing_1 -> . CTESTRING
    (82) writing_1 -> . CTESTRING COMMA
    (47) expression -> . exp
    (48) expression -> . expression1
    (57) exp -> . term np_add_quadruple
    (58) exp -> . term exp_1
    (49) expression1 -> . exp LT exp
    (50) expression1 -> . exp LE exp
    (51) expression1 -> . exp GT exp
    (52) expression1 -> . exp GE exp
    (53) expression1 -> . exp EQ exp
    (54) expression1 -> . exp NE exp
    (55) expression1 -> . exp AND exp
    (56) expression1 -> . exp OR exp
    (61) term -> . factor
    (62) term -> . factor term_2
    (65) factor -> . LPAREN np_add_paren expression RPAREN np_pop_paren
    (66) factor -> . LBRACKET expression RBRACKET
    (67) factor -> . function_call
    (68) factor -> . factor_prima_1
    (93) function_call -> . ID LPAREN RPAREN SEMI
    (94) function_call -> . ID LPAREN function_call_1 RPAREN SEMI
    (95) function_call -> . ID LPAREN function_call_1 RPAREN
    (96) function_call -> . ID LPAREN RPAREN
    (69) factor_prima_1 -> . PLUS varcte
    (70) factor_prima_1 -> . MINUS varcte
    (71) factor_prima_1 -> . varcte
    (72) varcte -> . ID np_add_id_quad
    (73) varcte -> . CTEI np_add_cte_int
    (74) varcte -> . CTEF np_add_cte_float
    (75) varcte -> . CTEC np_add_cte_char
    (76) varcte -> . TRUE np_add_cte_bool
    (77) varcte -> . FALSE np_add_cte_bool

    CTESTRING       shift and go to state 179
    LPAREN          shift and go to state 54
    LBRACKET        shift and go to state 48
    ID              shift and go to state 57
    PLUS            shift and go to state 58
    MINUS           shift and go to state 60
    CTEI            shift and go to state 61
    CTEF            shift and go to state 62
    CTEC            shift and go to state 63
    TRUE            shift and go to state 64
    FALSE           shift and go to state 65

    expression                     shift and go to state 178
    writing_1                      shift and go to state 226
    exp                            shift and go to state 50
    expression1                    shift and go to state 51
    term                           shift and go to state 52
    factor                         shift and go to state 53
    function_call                  shift and go to state 55
    factor_prima_1                 shift and go to state 56
    varcte                         shift and go to state 59

state 207

    (82) writing_1 -> CTESTRING COMMA .

    RPAREN          reduce using rule 82 (writing_1 -> CTESTRING COMMA .)


state 208

    (83) reading -> READ LPAREN reading_1 RPAREN . SEMI

    SEMI            shift and go to state 227


state 209

    (84) reading_1 -> ID COMMA . reading_1
    (84) reading_1 -> . ID COMMA reading_1
    (85) reading_1 -> . ID LBRACKET expression RBRACKET COMMA reading_1
    (86) reading_1 -> . ID
    (87) reading_1 -> . ID LBRACKET expression RBRACKET

    ID              shift and go to state 181

    reading_1                      shift and go to state 228

state 210

    (85) reading_1 -> ID LBRACKET . expression RBRACKET COMMA reading_1
    (87) reading_1 -> ID LBRACKET . expression RBRACKET
    (47) expression -> . exp
    (48) expression -> . expression1
    (57) exp -> . term np_add_quadruple
    (58) exp -> . term exp_1
    (49) expression1 -> . exp LT exp
    (50) expression1 -> . exp LE exp
    (51) expression1 -> . exp GT exp
    (52) expression1 -> . exp GE exp
    (53) expression1 -> . exp EQ exp
    (54) expression1 -> . exp NE exp
    (55) expression1 -> . exp AND exp
    (56) expression1 -> . exp OR exp
    (61) term -> . factor
    (62) term -> . factor term_2
    (65) factor -> . LPAREN np_add_paren expression RPAREN np_pop_paren
    (66) factor -> . LBRACKET expression RBRACKET
    (67) factor -> . function_call
    (68) factor -> . factor_prima_1
    (93) function_call -> . ID LPAREN RPAREN SEMI
    (94) function_call -> . ID LPAREN function_call_1 RPAREN SEMI
    (95) function_call -> . ID LPAREN function_call_1 RPAREN
    (96) function_call -> . ID LPAREN RPAREN
    (69) factor_prima_1 -> . PLUS varcte
    (70) factor_prima_1 -> . MINUS varcte
    (71) factor_prima_1 -> . varcte
    (72) varcte -> . ID np_add_id_quad
    (73) varcte -> . CTEI np_add_cte_int
    (74) varcte -> . CTEF np_add_cte_float
    (75) varcte -> . CTEC np_add_cte_char
    (76) varcte -> . TRUE np_add_cte_bool
    (77) varcte -> . FALSE np_add_cte_bool

    LPAREN          shift and go to state 54
    LBRACKET        shift and go to state 48
    ID              shift and go to state 57
    PLUS            shift and go to state 58
    MINUS           shift and go to state 60
    CTEI            shift and go to state 61
    CTEF            shift and go to state 62
    CTEC            shift and go to state 63
    TRUE            shift and go to state 64
    FALSE           shift and go to state 65

    expression                     shift and go to state 229
    exp                            shift and go to state 50
    expression1                    shift and go to state 51
    term                           shift and go to state 52
    factor                         shift and go to state 53
    function_call                  shift and go to state 55
    factor_prima_1                 shift and go to state 56
    varcte                         shift and go to state 59

state 211

    (91) non_conditional_loop -> FOR LPAREN ID EQUALS . expression TO expression BY expression RPAREN block
    (47) expression -> . exp
    (48) expression -> . expression1
    (57) exp -> . term np_add_quadruple
    (58) exp -> . term exp_1
    (49) expression1 -> . exp LT exp
    (50) expression1 -> . exp LE exp
    (51) expression1 -> . exp GT exp
    (52) expression1 -> . exp GE exp
    (53) expression1 -> . exp EQ exp
    (54) expression1 -> . exp NE exp
    (55) expression1 -> . exp AND exp
    (56) expression1 -> . exp OR exp
    (61) term -> . factor
    (62) term -> . factor term_2
    (65) factor -> . LPAREN np_add_paren expression RPAREN np_pop_paren
    (66) factor -> . LBRACKET expression RBRACKET
    (67) factor -> . function_call
    (68) factor -> . factor_prima_1
    (93) function_call -> . ID LPAREN RPAREN SEMI
    (94) function_call -> . ID LPAREN function_call_1 RPAREN SEMI
    (95) function_call -> . ID LPAREN function_call_1 RPAREN
    (96) function_call -> . ID LPAREN RPAREN
    (69) factor_prima_1 -> . PLUS varcte
    (70) factor_prima_1 -> . MINUS varcte
    (71) factor_prima_1 -> . varcte
    (72) varcte -> . ID np_add_id_quad
    (73) varcte -> . CTEI np_add_cte_int
    (74) varcte -> . CTEF np_add_cte_float
    (75) varcte -> . CTEC np_add_cte_char
    (76) varcte -> . TRUE np_add_cte_bool
    (77) varcte -> . FALSE np_add_cte_bool

    LPAREN          shift and go to state 54
    LBRACKET        shift and go to state 48
    ID              shift and go to state 57
    PLUS            shift and go to state 58
    MINUS           shift and go to state 60
    CTEI            shift and go to state 61
    CTEF            shift and go to state 62
    CTEC            shift and go to state 63
    TRUE            shift and go to state 64
    FALSE           shift and go to state 65

    expression                     shift and go to state 230
    exp                            shift and go to state 50
    expression1                    shift and go to state 51
    term                           shift and go to state 52
    factor                         shift and go to state 53
    function_call                  shift and go to state 55
    factor_prima_1                 shift and go to state 56
    varcte                         shift and go to state 59

state 212

    (90) conditional_loop -> WHILE LPAREN expression RPAREN . DO block

    DO              shift and go to state 231


state 213

    (99) mean -> MEAN LPAREN expression RPAREN . SEMI

    SEMI            shift and go to state 232


state 214

    (100) median -> MEDIAN LPAREN expression RPAREN . SEMI

    SEMI            shift and go to state 233


state 215

    (101) mode -> MODE LPAREN expression RPAREN . SEMI

    SEMI            shift and go to state 234


state 216

    (102) variance -> VARIANCE LPAREN expression RPAREN . SEMI

    SEMI            shift and go to state 235


state 217

    (103) standard_deviation -> STDEV LPAREN expression RPAREN . SEMI

    SEMI            shift and go to state 236


state 218

    (65) factor -> LPAREN np_add_paren expression RPAREN np_pop_paren .

    TIMES           reduce using rule 65 (factor -> LPAREN np_add_paren expression RPAREN np_pop_paren .)
    DIVIDE          reduce using rule 65 (factor -> LPAREN np_add_paren expression RPAREN np_pop_paren .)
    PLUS            reduce using rule 65 (factor -> LPAREN np_add_paren expression RPAREN np_pop_paren .)
    MINUS           reduce using rule 65 (factor -> LPAREN np_add_paren expression RPAREN np_pop_paren .)
    LT              reduce using rule 65 (factor -> LPAREN np_add_paren expression RPAREN np_pop_paren .)
    LE              reduce using rule 65 (factor -> LPAREN np_add_paren expression RPAREN np_pop_paren .)
    GT              reduce using rule 65 (factor -> LPAREN np_add_paren expression RPAREN np_pop_paren .)
    GE              reduce using rule 65 (factor -> LPAREN np_add_paren expression RPAREN np_pop_paren .)
    EQ              reduce using rule 65 (factor -> LPAREN np_add_paren expression RPAREN np_pop_paren .)
    NE              reduce using rule 65 (factor -> LPAREN np_add_paren expression RPAREN np_pop_paren .)
    AND             reduce using rule 65 (factor -> LPAREN np_add_paren expression RPAREN np_pop_paren .)
    OR              reduce using rule 65 (factor -> LPAREN np_add_paren expression RPAREN np_pop_paren .)
    RBRACKET        reduce using rule 65 (factor -> LPAREN np_add_paren expression RPAREN np_pop_paren .)
    ID              reduce using rule 65 (factor -> LPAREN np_add_paren expression RPAREN np_pop_paren .)
    IF              reduce using rule 65 (factor -> LPAREN np_add_paren expression RPAREN np_pop_paren .)
    PRINT           reduce using rule 65 (factor -> LPAREN np_add_paren expression RPAREN np_pop_paren .)
    READ            reduce using rule 65 (factor -> LPAREN np_add_paren expression RPAREN np_pop_paren .)
    RETURN          reduce using rule 65 (factor -> LPAREN np_add_paren expression RPAREN np_pop_paren .)
    FOR             reduce using rule 65 (factor -> LPAREN np_add_paren expression RPAREN np_pop_paren .)
    WHILE           reduce using rule 65 (factor -> LPAREN np_add_paren expression RPAREN np_pop_paren .)
    MEAN            reduce using rule 65 (factor -> LPAREN np_add_paren expression RPAREN np_pop_paren .)
    MEDIAN          reduce using rule 65 (factor -> LPAREN np_add_paren expression RPAREN np_pop_paren .)
    MODE            reduce using rule 65 (factor -> LPAREN np_add_paren expression RPAREN np_pop_paren .)
    VARIANCE        reduce using rule 65 (factor -> LPAREN np_add_paren expression RPAREN np_pop_paren .)
    STDEV           reduce using rule 65 (factor -> LPAREN np_add_paren expression RPAREN np_pop_paren .)
    LPAREN          reduce using rule 65 (factor -> LPAREN np_add_paren expression RPAREN np_pop_paren .)
    LBRACKET        reduce using rule 65 (factor -> LPAREN np_add_paren expression RPAREN np_pop_paren .)
    CTEI            reduce using rule 65 (factor -> LPAREN np_add_paren expression RPAREN np_pop_paren .)
    CTEF            reduce using rule 65 (factor -> LPAREN np_add_paren expression RPAREN np_pop_paren .)
    CTEC            reduce using rule 65 (factor -> LPAREN np_add_paren expression RPAREN np_pop_paren .)
    TRUE            reduce using rule 65 (factor -> LPAREN np_add_paren expression RPAREN np_pop_paren .)
    FALSE           reduce using rule 65 (factor -> LPAREN np_add_paren expression RPAREN np_pop_paren .)
    RBRACE          reduce using rule 65 (factor -> LPAREN np_add_paren expression RPAREN np_pop_paren .)
    SEMI            reduce using rule 65 (factor -> LPAREN np_add_paren expression RPAREN np_pop_paren .)
    RPAREN          reduce using rule 65 (factor -> LPAREN np_add_paren expression RPAREN np_pop_paren .)
    COMMA           reduce using rule 65 (factor -> LPAREN np_add_paren expression RPAREN np_pop_paren .)
    TO              reduce using rule 65 (factor -> LPAREN np_add_paren expression RPAREN np_pop_paren .)
    BY              reduce using rule 65 (factor -> LPAREN np_add_paren expression RPAREN np_pop_paren .)


state 219

    (94) function_call -> ID LPAREN function_call_1 RPAREN SEMI .

    TIMES           reduce using rule 94 (function_call -> ID LPAREN function_call_1 RPAREN SEMI .)
    DIVIDE          reduce using rule 94 (function_call -> ID LPAREN function_call_1 RPAREN SEMI .)
    PLUS            reduce using rule 94 (function_call -> ID LPAREN function_call_1 RPAREN SEMI .)
    MINUS           reduce using rule 94 (function_call -> ID LPAREN function_call_1 RPAREN SEMI .)
    LT              reduce using rule 94 (function_call -> ID LPAREN function_call_1 RPAREN SEMI .)
    LE              reduce using rule 94 (function_call -> ID LPAREN function_call_1 RPAREN SEMI .)
    GT              reduce using rule 94 (function_call -> ID LPAREN function_call_1 RPAREN SEMI .)
    GE              reduce using rule 94 (function_call -> ID LPAREN function_call_1 RPAREN SEMI .)
    EQ              reduce using rule 94 (function_call -> ID LPAREN function_call_1 RPAREN SEMI .)
    NE              reduce using rule 94 (function_call -> ID LPAREN function_call_1 RPAREN SEMI .)
    AND             reduce using rule 94 (function_call -> ID LPAREN function_call_1 RPAREN SEMI .)
    OR              reduce using rule 94 (function_call -> ID LPAREN function_call_1 RPAREN SEMI .)
    RBRACKET        reduce using rule 94 (function_call -> ID LPAREN function_call_1 RPAREN SEMI .)
    ID              reduce using rule 94 (function_call -> ID LPAREN function_call_1 RPAREN SEMI .)
    IF              reduce using rule 94 (function_call -> ID LPAREN function_call_1 RPAREN SEMI .)
    PRINT           reduce using rule 94 (function_call -> ID LPAREN function_call_1 RPAREN SEMI .)
    READ            reduce using rule 94 (function_call -> ID LPAREN function_call_1 RPAREN SEMI .)
    RETURN          reduce using rule 94 (function_call -> ID LPAREN function_call_1 RPAREN SEMI .)
    FOR             reduce using rule 94 (function_call -> ID LPAREN function_call_1 RPAREN SEMI .)
    WHILE           reduce using rule 94 (function_call -> ID LPAREN function_call_1 RPAREN SEMI .)
    MEAN            reduce using rule 94 (function_call -> ID LPAREN function_call_1 RPAREN SEMI .)
    MEDIAN          reduce using rule 94 (function_call -> ID LPAREN function_call_1 RPAREN SEMI .)
    MODE            reduce using rule 94 (function_call -> ID LPAREN function_call_1 RPAREN SEMI .)
    VARIANCE        reduce using rule 94 (function_call -> ID LPAREN function_call_1 RPAREN SEMI .)
    STDEV           reduce using rule 94 (function_call -> ID LPAREN function_call_1 RPAREN SEMI .)
    LPAREN          reduce using rule 94 (function_call -> ID LPAREN function_call_1 RPAREN SEMI .)
    LBRACKET        reduce using rule 94 (function_call -> ID LPAREN function_call_1 RPAREN SEMI .)
    CTEI            reduce using rule 94 (function_call -> ID LPAREN function_call_1 RPAREN SEMI .)
    CTEF            reduce using rule 94 (function_call -> ID LPAREN function_call_1 RPAREN SEMI .)
    CTEC            reduce using rule 94 (function_call -> ID LPAREN function_call_1 RPAREN SEMI .)
    TRUE            reduce using rule 94 (function_call -> ID LPAREN function_call_1 RPAREN SEMI .)
    FALSE           reduce using rule 94 (function_call -> ID LPAREN function_call_1 RPAREN SEMI .)
    RBRACE          reduce using rule 94 (function_call -> ID LPAREN function_call_1 RPAREN SEMI .)
    SEMI            reduce using rule 94 (function_call -> ID LPAREN function_call_1 RPAREN SEMI .)
    RPAREN          reduce using rule 94 (function_call -> ID LPAREN function_call_1 RPAREN SEMI .)
    COMMA           reduce using rule 94 (function_call -> ID LPAREN function_call_1 RPAREN SEMI .)
    TO              reduce using rule 94 (function_call -> ID LPAREN function_call_1 RPAREN SEMI .)
    BY              reduce using rule 94 (function_call -> ID LPAREN function_call_1 RPAREN SEMI .)


state 220

    (98) function_call_1 -> expression COMMA function_call_1 .

    RPAREN          reduce using rule 98 (function_call_1 -> expression COMMA function_call_1 .)


state 221

    (25) params -> ID COLON type np_add_vars . COMMA params
    (26) params -> ID COLON type np_add_vars .

    COMMA           shift and go to state 237
    RPAREN          reduce using rule 26 (params -> ID COLON type np_add_vars .)


state 222

    (19) function -> FUNCTION ID COLON return_type np_create_new_scope LPAREN params RPAREN vars block .

    FUNCTION        reduce using rule 19 (function -> FUNCTION ID COLON return_type np_create_new_scope LPAREN params RPAREN vars block .)
    MAIN            reduce using rule 19 (function -> FUNCTION ID COLON return_type np_create_new_scope LPAREN params RPAREN vars block .)


state 223

    (44) assignment -> ID LBRACKET expression RBRACKET EQUALS . expression SEMI
    (47) expression -> . exp
    (48) expression -> . expression1
    (57) exp -> . term np_add_quadruple
    (58) exp -> . term exp_1
    (49) expression1 -> . exp LT exp
    (50) expression1 -> . exp LE exp
    (51) expression1 -> . exp GT exp
    (52) expression1 -> . exp GE exp
    (53) expression1 -> . exp EQ exp
    (54) expression1 -> . exp NE exp
    (55) expression1 -> . exp AND exp
    (56) expression1 -> . exp OR exp
    (61) term -> . factor
    (62) term -> . factor term_2
    (65) factor -> . LPAREN np_add_paren expression RPAREN np_pop_paren
    (66) factor -> . LBRACKET expression RBRACKET
    (67) factor -> . function_call
    (68) factor -> . factor_prima_1
    (93) function_call -> . ID LPAREN RPAREN SEMI
    (94) function_call -> . ID LPAREN function_call_1 RPAREN SEMI
    (95) function_call -> . ID LPAREN function_call_1 RPAREN
    (96) function_call -> . ID LPAREN RPAREN
    (69) factor_prima_1 -> . PLUS varcte
    (70) factor_prima_1 -> . MINUS varcte
    (71) factor_prima_1 -> . varcte
    (72) varcte -> . ID np_add_id_quad
    (73) varcte -> . CTEI np_add_cte_int
    (74) varcte -> . CTEF np_add_cte_float
    (75) varcte -> . CTEC np_add_cte_char
    (76) varcte -> . TRUE np_add_cte_bool
    (77) varcte -> . FALSE np_add_cte_bool

    LPAREN          shift and go to state 54
    LBRACKET        shift and go to state 48
    ID              shift and go to state 57
    PLUS            shift and go to state 58
    MINUS           shift and go to state 60
    CTEI            shift and go to state 61
    CTEF            shift and go to state 62
    CTEC            shift and go to state 63
    TRUE            shift and go to state 64
    FALSE           shift and go to state 65

    expression                     shift and go to state 238
    exp                            shift and go to state 50
    expression1                    shift and go to state 51
    term                           shift and go to state 52
    factor                         shift and go to state 53
    function_call                  shift and go to state 55
    factor_prima_1                 shift and go to state 56
    varcte                         shift and go to state 59

state 224

    (45) condition -> IF LPAREN expression RPAREN block .
    (46) condition -> IF LPAREN expression RPAREN block . ELSE block

    ID              reduce using rule 45 (condition -> IF LPAREN expression RPAREN block .)
    IF              reduce using rule 45 (condition -> IF LPAREN expression RPAREN block .)
    PRINT           reduce using rule 45 (condition -> IF LPAREN expression RPAREN block .)
    READ            reduce using rule 45 (condition -> IF LPAREN expression RPAREN block .)
    RETURN          reduce using rule 45 (condition -> IF LPAREN expression RPAREN block .)
    FOR             reduce using rule 45 (condition -> IF LPAREN expression RPAREN block .)
    WHILE           reduce using rule 45 (condition -> IF LPAREN expression RPAREN block .)
    MEAN            reduce using rule 45 (condition -> IF LPAREN expression RPAREN block .)
    MEDIAN          reduce using rule 45 (condition -> IF LPAREN expression RPAREN block .)
    MODE            reduce using rule 45 (condition -> IF LPAREN expression RPAREN block .)
    VARIANCE        reduce using rule 45 (condition -> IF LPAREN expression RPAREN block .)
    STDEV           reduce using rule 45 (condition -> IF LPAREN expression RPAREN block .)
    LPAREN          reduce using rule 45 (condition -> IF LPAREN expression RPAREN block .)
    LBRACKET        reduce using rule 45 (condition -> IF LPAREN expression RPAREN block .)
    PLUS            reduce using rule 45 (condition -> IF LPAREN expression RPAREN block .)
    MINUS           reduce using rule 45 (condition -> IF LPAREN expression RPAREN block .)
    CTEI            reduce using rule 45 (condition -> IF LPAREN expression RPAREN block .)
    CTEF            reduce using rule 45 (condition -> IF LPAREN expression RPAREN block .)
    CTEC            reduce using rule 45 (condition -> IF LPAREN expression RPAREN block .)
    TRUE            reduce using rule 45 (condition -> IF LPAREN expression RPAREN block .)
    FALSE           reduce using rule 45 (condition -> IF LPAREN expression RPAREN block .)
    RBRACE          reduce using rule 45 (condition -> IF LPAREN expression RPAREN block .)
    ELSE            shift and go to state 239


state 225

    (78) writing -> PRINT LPAREN writing_1 RPAREN SEMI .

    ID              reduce using rule 78 (writing -> PRINT LPAREN writing_1 RPAREN SEMI .)
    IF              reduce using rule 78 (writing -> PRINT LPAREN writing_1 RPAREN SEMI .)
    PRINT           reduce using rule 78 (writing -> PRINT LPAREN writing_1 RPAREN SEMI .)
    READ            reduce using rule 78 (writing -> PRINT LPAREN writing_1 RPAREN SEMI .)
    RETURN          reduce using rule 78 (writing -> PRINT LPAREN writing_1 RPAREN SEMI .)
    FOR             reduce using rule 78 (writing -> PRINT LPAREN writing_1 RPAREN SEMI .)
    WHILE           reduce using rule 78 (writing -> PRINT LPAREN writing_1 RPAREN SEMI .)
    MEAN            reduce using rule 78 (writing -> PRINT LPAREN writing_1 RPAREN SEMI .)
    MEDIAN          reduce using rule 78 (writing -> PRINT LPAREN writing_1 RPAREN SEMI .)
    MODE            reduce using rule 78 (writing -> PRINT LPAREN writing_1 RPAREN SEMI .)
    VARIANCE        reduce using rule 78 (writing -> PRINT LPAREN writing_1 RPAREN SEMI .)
    STDEV           reduce using rule 78 (writing -> PRINT LPAREN writing_1 RPAREN SEMI .)
    LPAREN          reduce using rule 78 (writing -> PRINT LPAREN writing_1 RPAREN SEMI .)
    LBRACKET        reduce using rule 78 (writing -> PRINT LPAREN writing_1 RPAREN SEMI .)
    PLUS            reduce using rule 78 (writing -> PRINT LPAREN writing_1 RPAREN SEMI .)
    MINUS           reduce using rule 78 (writing -> PRINT LPAREN writing_1 RPAREN SEMI .)
    CTEI            reduce using rule 78 (writing -> PRINT LPAREN writing_1 RPAREN SEMI .)
    CTEF            reduce using rule 78 (writing -> PRINT LPAREN writing_1 RPAREN SEMI .)
    CTEC            reduce using rule 78 (writing -> PRINT LPAREN writing_1 RPAREN SEMI .)
    TRUE            reduce using rule 78 (writing -> PRINT LPAREN writing_1 RPAREN SEMI .)
    FALSE           reduce using rule 78 (writing -> PRINT LPAREN writing_1 RPAREN SEMI .)
    RBRACE          reduce using rule 78 (writing -> PRINT LPAREN writing_1 RPAREN SEMI .)


state 226

    (79) writing_1 -> expression COMMA writing_1 .

    RPAREN          reduce using rule 79 (writing_1 -> expression COMMA writing_1 .)


state 227

    (83) reading -> READ LPAREN reading_1 RPAREN SEMI .

    ID              reduce using rule 83 (reading -> READ LPAREN reading_1 RPAREN SEMI .)
    IF              reduce using rule 83 (reading -> READ LPAREN reading_1 RPAREN SEMI .)
    PRINT           reduce using rule 83 (reading -> READ LPAREN reading_1 RPAREN SEMI .)
    READ            reduce using rule 83 (reading -> READ LPAREN reading_1 RPAREN SEMI .)
    RETURN          reduce using rule 83 (reading -> READ LPAREN reading_1 RPAREN SEMI .)
    FOR             reduce using rule 83 (reading -> READ LPAREN reading_1 RPAREN SEMI .)
    WHILE           reduce using rule 83 (reading -> READ LPAREN reading_1 RPAREN SEMI .)
    MEAN            reduce using rule 83 (reading -> READ LPAREN reading_1 RPAREN SEMI .)
    MEDIAN          reduce using rule 83 (reading -> READ LPAREN reading_1 RPAREN SEMI .)
    MODE            reduce using rule 83 (reading -> READ LPAREN reading_1 RPAREN SEMI .)
    VARIANCE        reduce using rule 83 (reading -> READ LPAREN reading_1 RPAREN SEMI .)
    STDEV           reduce using rule 83 (reading -> READ LPAREN reading_1 RPAREN SEMI .)
    LPAREN          reduce using rule 83 (reading -> READ LPAREN reading_1 RPAREN SEMI .)
    LBRACKET        reduce using rule 83 (reading -> READ LPAREN reading_1 RPAREN SEMI .)
    PLUS            reduce using rule 83 (reading -> READ LPAREN reading_1 RPAREN SEMI .)
    MINUS           reduce using rule 83 (reading -> READ LPAREN reading_1 RPAREN SEMI .)
    CTEI            reduce using rule 83 (reading -> READ LPAREN reading_1 RPAREN SEMI .)
    CTEF            reduce using rule 83 (reading -> READ LPAREN reading_1 RPAREN SEMI .)
    CTEC            reduce using rule 83 (reading -> READ LPAREN reading_1 RPAREN SEMI .)
    TRUE            reduce using rule 83 (reading -> READ LPAREN reading_1 RPAREN SEMI .)
    FALSE           reduce using rule 83 (reading -> READ LPAREN reading_1 RPAREN SEMI .)
    RBRACE          reduce using rule 83 (reading -> READ LPAREN reading_1 RPAREN SEMI .)


state 228

    (84) reading_1 -> ID COMMA reading_1 .

    RPAREN          reduce using rule 84 (reading_1 -> ID COMMA reading_1 .)


state 229

    (85) reading_1 -> ID LBRACKET expression . RBRACKET COMMA reading_1
    (87) reading_1 -> ID LBRACKET expression . RBRACKET

    RBRACKET        shift and go to state 240


state 230

    (91) non_conditional_loop -> FOR LPAREN ID EQUALS expression . TO expression BY expression RPAREN block

    TO              shift and go to state 241


state 231

    (90) conditional_loop -> WHILE LPAREN expression RPAREN DO . block
    (22) block -> . LBRACE statements RBRACE

    LBRACE          shift and go to state 46

    block                          shift and go to state 242

state 232

    (99) mean -> MEAN LPAREN expression RPAREN SEMI .

    ID              reduce using rule 99 (mean -> MEAN LPAREN expression RPAREN SEMI .)
    IF              reduce using rule 99 (mean -> MEAN LPAREN expression RPAREN SEMI .)
    PRINT           reduce using rule 99 (mean -> MEAN LPAREN expression RPAREN SEMI .)
    READ            reduce using rule 99 (mean -> MEAN LPAREN expression RPAREN SEMI .)
    RETURN          reduce using rule 99 (mean -> MEAN LPAREN expression RPAREN SEMI .)
    FOR             reduce using rule 99 (mean -> MEAN LPAREN expression RPAREN SEMI .)
    WHILE           reduce using rule 99 (mean -> MEAN LPAREN expression RPAREN SEMI .)
    MEAN            reduce using rule 99 (mean -> MEAN LPAREN expression RPAREN SEMI .)
    MEDIAN          reduce using rule 99 (mean -> MEAN LPAREN expression RPAREN SEMI .)
    MODE            reduce using rule 99 (mean -> MEAN LPAREN expression RPAREN SEMI .)
    VARIANCE        reduce using rule 99 (mean -> MEAN LPAREN expression RPAREN SEMI .)
    STDEV           reduce using rule 99 (mean -> MEAN LPAREN expression RPAREN SEMI .)
    LPAREN          reduce using rule 99 (mean -> MEAN LPAREN expression RPAREN SEMI .)
    LBRACKET        reduce using rule 99 (mean -> MEAN LPAREN expression RPAREN SEMI .)
    PLUS            reduce using rule 99 (mean -> MEAN LPAREN expression RPAREN SEMI .)
    MINUS           reduce using rule 99 (mean -> MEAN LPAREN expression RPAREN SEMI .)
    CTEI            reduce using rule 99 (mean -> MEAN LPAREN expression RPAREN SEMI .)
    CTEF            reduce using rule 99 (mean -> MEAN LPAREN expression RPAREN SEMI .)
    CTEC            reduce using rule 99 (mean -> MEAN LPAREN expression RPAREN SEMI .)
    TRUE            reduce using rule 99 (mean -> MEAN LPAREN expression RPAREN SEMI .)
    FALSE           reduce using rule 99 (mean -> MEAN LPAREN expression RPAREN SEMI .)
    RBRACE          reduce using rule 99 (mean -> MEAN LPAREN expression RPAREN SEMI .)


state 233

    (100) median -> MEDIAN LPAREN expression RPAREN SEMI .

    ID              reduce using rule 100 (median -> MEDIAN LPAREN expression RPAREN SEMI .)
    IF              reduce using rule 100 (median -> MEDIAN LPAREN expression RPAREN SEMI .)
    PRINT           reduce using rule 100 (median -> MEDIAN LPAREN expression RPAREN SEMI .)
    READ            reduce using rule 100 (median -> MEDIAN LPAREN expression RPAREN SEMI .)
    RETURN          reduce using rule 100 (median -> MEDIAN LPAREN expression RPAREN SEMI .)
    FOR             reduce using rule 100 (median -> MEDIAN LPAREN expression RPAREN SEMI .)
    WHILE           reduce using rule 100 (median -> MEDIAN LPAREN expression RPAREN SEMI .)
    MEAN            reduce using rule 100 (median -> MEDIAN LPAREN expression RPAREN SEMI .)
    MEDIAN          reduce using rule 100 (median -> MEDIAN LPAREN expression RPAREN SEMI .)
    MODE            reduce using rule 100 (median -> MEDIAN LPAREN expression RPAREN SEMI .)
    VARIANCE        reduce using rule 100 (median -> MEDIAN LPAREN expression RPAREN SEMI .)
    STDEV           reduce using rule 100 (median -> MEDIAN LPAREN expression RPAREN SEMI .)
    LPAREN          reduce using rule 100 (median -> MEDIAN LPAREN expression RPAREN SEMI .)
    LBRACKET        reduce using rule 100 (median -> MEDIAN LPAREN expression RPAREN SEMI .)
    PLUS            reduce using rule 100 (median -> MEDIAN LPAREN expression RPAREN SEMI .)
    MINUS           reduce using rule 100 (median -> MEDIAN LPAREN expression RPAREN SEMI .)
    CTEI            reduce using rule 100 (median -> MEDIAN LPAREN expression RPAREN SEMI .)
    CTEF            reduce using rule 100 (median -> MEDIAN LPAREN expression RPAREN SEMI .)
    CTEC            reduce using rule 100 (median -> MEDIAN LPAREN expression RPAREN SEMI .)
    TRUE            reduce using rule 100 (median -> MEDIAN LPAREN expression RPAREN SEMI .)
    FALSE           reduce using rule 100 (median -> MEDIAN LPAREN expression RPAREN SEMI .)
    RBRACE          reduce using rule 100 (median -> MEDIAN LPAREN expression RPAREN SEMI .)


state 234

    (101) mode -> MODE LPAREN expression RPAREN SEMI .

    ID              reduce using rule 101 (mode -> MODE LPAREN expression RPAREN SEMI .)
    IF              reduce using rule 101 (mode -> MODE LPAREN expression RPAREN SEMI .)
    PRINT           reduce using rule 101 (mode -> MODE LPAREN expression RPAREN SEMI .)
    READ            reduce using rule 101 (mode -> MODE LPAREN expression RPAREN SEMI .)
    RETURN          reduce using rule 101 (mode -> MODE LPAREN expression RPAREN SEMI .)
    FOR             reduce using rule 101 (mode -> MODE LPAREN expression RPAREN SEMI .)
    WHILE           reduce using rule 101 (mode -> MODE LPAREN expression RPAREN SEMI .)
    MEAN            reduce using rule 101 (mode -> MODE LPAREN expression RPAREN SEMI .)
    MEDIAN          reduce using rule 101 (mode -> MODE LPAREN expression RPAREN SEMI .)
    MODE            reduce using rule 101 (mode -> MODE LPAREN expression RPAREN SEMI .)
    VARIANCE        reduce using rule 101 (mode -> MODE LPAREN expression RPAREN SEMI .)
    STDEV           reduce using rule 101 (mode -> MODE LPAREN expression RPAREN SEMI .)
    LPAREN          reduce using rule 101 (mode -> MODE LPAREN expression RPAREN SEMI .)
    LBRACKET        reduce using rule 101 (mode -> MODE LPAREN expression RPAREN SEMI .)
    PLUS            reduce using rule 101 (mode -> MODE LPAREN expression RPAREN SEMI .)
    MINUS           reduce using rule 101 (mode -> MODE LPAREN expression RPAREN SEMI .)
    CTEI            reduce using rule 101 (mode -> MODE LPAREN expression RPAREN SEMI .)
    CTEF            reduce using rule 101 (mode -> MODE LPAREN expression RPAREN SEMI .)
    CTEC            reduce using rule 101 (mode -> MODE LPAREN expression RPAREN SEMI .)
    TRUE            reduce using rule 101 (mode -> MODE LPAREN expression RPAREN SEMI .)
    FALSE           reduce using rule 101 (mode -> MODE LPAREN expression RPAREN SEMI .)
    RBRACE          reduce using rule 101 (mode -> MODE LPAREN expression RPAREN SEMI .)


state 235

    (102) variance -> VARIANCE LPAREN expression RPAREN SEMI .

    ID              reduce using rule 102 (variance -> VARIANCE LPAREN expression RPAREN SEMI .)
    IF              reduce using rule 102 (variance -> VARIANCE LPAREN expression RPAREN SEMI .)
    PRINT           reduce using rule 102 (variance -> VARIANCE LPAREN expression RPAREN SEMI .)
    READ            reduce using rule 102 (variance -> VARIANCE LPAREN expression RPAREN SEMI .)
    RETURN          reduce using rule 102 (variance -> VARIANCE LPAREN expression RPAREN SEMI .)
    FOR             reduce using rule 102 (variance -> VARIANCE LPAREN expression RPAREN SEMI .)
    WHILE           reduce using rule 102 (variance -> VARIANCE LPAREN expression RPAREN SEMI .)
    MEAN            reduce using rule 102 (variance -> VARIANCE LPAREN expression RPAREN SEMI .)
    MEDIAN          reduce using rule 102 (variance -> VARIANCE LPAREN expression RPAREN SEMI .)
    MODE            reduce using rule 102 (variance -> VARIANCE LPAREN expression RPAREN SEMI .)
    VARIANCE        reduce using rule 102 (variance -> VARIANCE LPAREN expression RPAREN SEMI .)
    STDEV           reduce using rule 102 (variance -> VARIANCE LPAREN expression RPAREN SEMI .)
    LPAREN          reduce using rule 102 (variance -> VARIANCE LPAREN expression RPAREN SEMI .)
    LBRACKET        reduce using rule 102 (variance -> VARIANCE LPAREN expression RPAREN SEMI .)
    PLUS            reduce using rule 102 (variance -> VARIANCE LPAREN expression RPAREN SEMI .)
    MINUS           reduce using rule 102 (variance -> VARIANCE LPAREN expression RPAREN SEMI .)
    CTEI            reduce using rule 102 (variance -> VARIANCE LPAREN expression RPAREN SEMI .)
    CTEF            reduce using rule 102 (variance -> VARIANCE LPAREN expression RPAREN SEMI .)
    CTEC            reduce using rule 102 (variance -> VARIANCE LPAREN expression RPAREN SEMI .)
    TRUE            reduce using rule 102 (variance -> VARIANCE LPAREN expression RPAREN SEMI .)
    FALSE           reduce using rule 102 (variance -> VARIANCE LPAREN expression RPAREN SEMI .)
    RBRACE          reduce using rule 102 (variance -> VARIANCE LPAREN expression RPAREN SEMI .)


state 236

    (103) standard_deviation -> STDEV LPAREN expression RPAREN SEMI .

    ID              reduce using rule 103 (standard_deviation -> STDEV LPAREN expression RPAREN SEMI .)
    IF              reduce using rule 103 (standard_deviation -> STDEV LPAREN expression RPAREN SEMI .)
    PRINT           reduce using rule 103 (standard_deviation -> STDEV LPAREN expression RPAREN SEMI .)
    READ            reduce using rule 103 (standard_deviation -> STDEV LPAREN expression RPAREN SEMI .)
    RETURN          reduce using rule 103 (standard_deviation -> STDEV LPAREN expression RPAREN SEMI .)
    FOR             reduce using rule 103 (standard_deviation -> STDEV LPAREN expression RPAREN SEMI .)
    WHILE           reduce using rule 103 (standard_deviation -> STDEV LPAREN expression RPAREN SEMI .)
    MEAN            reduce using rule 103 (standard_deviation -> STDEV LPAREN expression RPAREN SEMI .)
    MEDIAN          reduce using rule 103 (standard_deviation -> STDEV LPAREN expression RPAREN SEMI .)
    MODE            reduce using rule 103 (standard_deviation -> STDEV LPAREN expression RPAREN SEMI .)
    VARIANCE        reduce using rule 103 (standard_deviation -> STDEV LPAREN expression RPAREN SEMI .)
    STDEV           reduce using rule 103 (standard_deviation -> STDEV LPAREN expression RPAREN SEMI .)
    LPAREN          reduce using rule 103 (standard_deviation -> STDEV LPAREN expression RPAREN SEMI .)
    LBRACKET        reduce using rule 103 (standard_deviation -> STDEV LPAREN expression RPAREN SEMI .)
    PLUS            reduce using rule 103 (standard_deviation -> STDEV LPAREN expression RPAREN SEMI .)
    MINUS           reduce using rule 103 (standard_deviation -> STDEV LPAREN expression RPAREN SEMI .)
    CTEI            reduce using rule 103 (standard_deviation -> STDEV LPAREN expression RPAREN SEMI .)
    CTEF            reduce using rule 103 (standard_deviation -> STDEV LPAREN expression RPAREN SEMI .)
    CTEC            reduce using rule 103 (standard_deviation -> STDEV LPAREN expression RPAREN SEMI .)
    TRUE            reduce using rule 103 (standard_deviation -> STDEV LPAREN expression RPAREN SEMI .)
    FALSE           reduce using rule 103 (standard_deviation -> STDEV LPAREN expression RPAREN SEMI .)
    RBRACE          reduce using rule 103 (standard_deviation -> STDEV LPAREN expression RPAREN SEMI .)


state 237

    (25) params -> ID COLON type np_add_vars COMMA . params
    (25) params -> . ID COLON type np_add_vars COMMA params
    (26) params -> . ID COLON type np_add_vars

    ID              shift and go to state 125

    params                         shift and go to state 243

state 238

    (44) assignment -> ID LBRACKET expression RBRACKET EQUALS expression . SEMI

    SEMI            shift and go to state 244


state 239

    (46) condition -> IF LPAREN expression RPAREN block ELSE . block
    (22) block -> . LBRACE statements RBRACE

    LBRACE          shift and go to state 46

    block                          shift and go to state 245

state 240

    (85) reading_1 -> ID LBRACKET expression RBRACKET . COMMA reading_1
    (87) reading_1 -> ID LBRACKET expression RBRACKET .

    COMMA           shift and go to state 246
    RPAREN          reduce using rule 87 (reading_1 -> ID LBRACKET expression RBRACKET .)


state 241

    (91) non_conditional_loop -> FOR LPAREN ID EQUALS expression TO . expression BY expression RPAREN block
    (47) expression -> . exp
    (48) expression -> . expression1
    (57) exp -> . term np_add_quadruple
    (58) exp -> . term exp_1
    (49) expression1 -> . exp LT exp
    (50) expression1 -> . exp LE exp
    (51) expression1 -> . exp GT exp
    (52) expression1 -> . exp GE exp
    (53) expression1 -> . exp EQ exp
    (54) expression1 -> . exp NE exp
    (55) expression1 -> . exp AND exp
    (56) expression1 -> . exp OR exp
    (61) term -> . factor
    (62) term -> . factor term_2
    (65) factor -> . LPAREN np_add_paren expression RPAREN np_pop_paren
    (66) factor -> . LBRACKET expression RBRACKET
    (67) factor -> . function_call
    (68) factor -> . factor_prima_1
    (93) function_call -> . ID LPAREN RPAREN SEMI
    (94) function_call -> . ID LPAREN function_call_1 RPAREN SEMI
    (95) function_call -> . ID LPAREN function_call_1 RPAREN
    (96) function_call -> . ID LPAREN RPAREN
    (69) factor_prima_1 -> . PLUS varcte
    (70) factor_prima_1 -> . MINUS varcte
    (71) factor_prima_1 -> . varcte
    (72) varcte -> . ID np_add_id_quad
    (73) varcte -> . CTEI np_add_cte_int
    (74) varcte -> . CTEF np_add_cte_float
    (75) varcte -> . CTEC np_add_cte_char
    (76) varcte -> . TRUE np_add_cte_bool
    (77) varcte -> . FALSE np_add_cte_bool

    LPAREN          shift and go to state 54
    LBRACKET        shift and go to state 48
    ID              shift and go to state 57
    PLUS            shift and go to state 58
    MINUS           shift and go to state 60
    CTEI            shift and go to state 61
    CTEF            shift and go to state 62
    CTEC            shift and go to state 63
    TRUE            shift and go to state 64
    FALSE           shift and go to state 65

    expression                     shift and go to state 247
    exp                            shift and go to state 50
    expression1                    shift and go to state 51
    term                           shift and go to state 52
    factor                         shift and go to state 53
    function_call                  shift and go to state 55
    factor_prima_1                 shift and go to state 56
    varcte                         shift and go to state 59

state 242

    (90) conditional_loop -> WHILE LPAREN expression RPAREN DO block .

    ID              reduce using rule 90 (conditional_loop -> WHILE LPAREN expression RPAREN DO block .)
    IF              reduce using rule 90 (conditional_loop -> WHILE LPAREN expression RPAREN DO block .)
    PRINT           reduce using rule 90 (conditional_loop -> WHILE LPAREN expression RPAREN DO block .)
    READ            reduce using rule 90 (conditional_loop -> WHILE LPAREN expression RPAREN DO block .)
    RETURN          reduce using rule 90 (conditional_loop -> WHILE LPAREN expression RPAREN DO block .)
    FOR             reduce using rule 90 (conditional_loop -> WHILE LPAREN expression RPAREN DO block .)
    WHILE           reduce using rule 90 (conditional_loop -> WHILE LPAREN expression RPAREN DO block .)
    MEAN            reduce using rule 90 (conditional_loop -> WHILE LPAREN expression RPAREN DO block .)
    MEDIAN          reduce using rule 90 (conditional_loop -> WHILE LPAREN expression RPAREN DO block .)
    MODE            reduce using rule 90 (conditional_loop -> WHILE LPAREN expression RPAREN DO block .)
    VARIANCE        reduce using rule 90 (conditional_loop -> WHILE LPAREN expression RPAREN DO block .)
    STDEV           reduce using rule 90 (conditional_loop -> WHILE LPAREN expression RPAREN DO block .)
    LPAREN          reduce using rule 90 (conditional_loop -> WHILE LPAREN expression RPAREN DO block .)
    LBRACKET        reduce using rule 90 (conditional_loop -> WHILE LPAREN expression RPAREN DO block .)
    PLUS            reduce using rule 90 (conditional_loop -> WHILE LPAREN expression RPAREN DO block .)
    MINUS           reduce using rule 90 (conditional_loop -> WHILE LPAREN expression RPAREN DO block .)
    CTEI            reduce using rule 90 (conditional_loop -> WHILE LPAREN expression RPAREN DO block .)
    CTEF            reduce using rule 90 (conditional_loop -> WHILE LPAREN expression RPAREN DO block .)
    CTEC            reduce using rule 90 (conditional_loop -> WHILE LPAREN expression RPAREN DO block .)
    TRUE            reduce using rule 90 (conditional_loop -> WHILE LPAREN expression RPAREN DO block .)
    FALSE           reduce using rule 90 (conditional_loop -> WHILE LPAREN expression RPAREN DO block .)
    RBRACE          reduce using rule 90 (conditional_loop -> WHILE LPAREN expression RPAREN DO block .)


state 243

    (25) params -> ID COLON type np_add_vars COMMA params .

    RPAREN          reduce using rule 25 (params -> ID COLON type np_add_vars COMMA params .)


state 244

    (44) assignment -> ID LBRACKET expression RBRACKET EQUALS expression SEMI .

    ID              reduce using rule 44 (assignment -> ID LBRACKET expression RBRACKET EQUALS expression SEMI .)
    IF              reduce using rule 44 (assignment -> ID LBRACKET expression RBRACKET EQUALS expression SEMI .)
    PRINT           reduce using rule 44 (assignment -> ID LBRACKET expression RBRACKET EQUALS expression SEMI .)
    READ            reduce using rule 44 (assignment -> ID LBRACKET expression RBRACKET EQUALS expression SEMI .)
    RETURN          reduce using rule 44 (assignment -> ID LBRACKET expression RBRACKET EQUALS expression SEMI .)
    FOR             reduce using rule 44 (assignment -> ID LBRACKET expression RBRACKET EQUALS expression SEMI .)
    WHILE           reduce using rule 44 (assignment -> ID LBRACKET expression RBRACKET EQUALS expression SEMI .)
    MEAN            reduce using rule 44 (assignment -> ID LBRACKET expression RBRACKET EQUALS expression SEMI .)
    MEDIAN          reduce using rule 44 (assignment -> ID LBRACKET expression RBRACKET EQUALS expression SEMI .)
    MODE            reduce using rule 44 (assignment -> ID LBRACKET expression RBRACKET EQUALS expression SEMI .)
    VARIANCE        reduce using rule 44 (assignment -> ID LBRACKET expression RBRACKET EQUALS expression SEMI .)
    STDEV           reduce using rule 44 (assignment -> ID LBRACKET expression RBRACKET EQUALS expression SEMI .)
    LPAREN          reduce using rule 44 (assignment -> ID LBRACKET expression RBRACKET EQUALS expression SEMI .)
    LBRACKET        reduce using rule 44 (assignment -> ID LBRACKET expression RBRACKET EQUALS expression SEMI .)
    PLUS            reduce using rule 44 (assignment -> ID LBRACKET expression RBRACKET EQUALS expression SEMI .)
    MINUS           reduce using rule 44 (assignment -> ID LBRACKET expression RBRACKET EQUALS expression SEMI .)
    CTEI            reduce using rule 44 (assignment -> ID LBRACKET expression RBRACKET EQUALS expression SEMI .)
    CTEF            reduce using rule 44 (assignment -> ID LBRACKET expression RBRACKET EQUALS expression SEMI .)
    CTEC            reduce using rule 44 (assignment -> ID LBRACKET expression RBRACKET EQUALS expression SEMI .)
    TRUE            reduce using rule 44 (assignment -> ID LBRACKET expression RBRACKET EQUALS expression SEMI .)
    FALSE           reduce using rule 44 (assignment -> ID LBRACKET expression RBRACKET EQUALS expression SEMI .)
    RBRACE          reduce using rule 44 (assignment -> ID LBRACKET expression RBRACKET EQUALS expression SEMI .)


state 245

    (46) condition -> IF LPAREN expression RPAREN block ELSE block .

    ID              reduce using rule 46 (condition -> IF LPAREN expression RPAREN block ELSE block .)
    IF              reduce using rule 46 (condition -> IF LPAREN expression RPAREN block ELSE block .)
    PRINT           reduce using rule 46 (condition -> IF LPAREN expression RPAREN block ELSE block .)
    READ            reduce using rule 46 (condition -> IF LPAREN expression RPAREN block ELSE block .)
    RETURN          reduce using rule 46 (condition -> IF LPAREN expression RPAREN block ELSE block .)
    FOR             reduce using rule 46 (condition -> IF LPAREN expression RPAREN block ELSE block .)
    WHILE           reduce using rule 46 (condition -> IF LPAREN expression RPAREN block ELSE block .)
    MEAN            reduce using rule 46 (condition -> IF LPAREN expression RPAREN block ELSE block .)
    MEDIAN          reduce using rule 46 (condition -> IF LPAREN expression RPAREN block ELSE block .)
    MODE            reduce using rule 46 (condition -> IF LPAREN expression RPAREN block ELSE block .)
    VARIANCE        reduce using rule 46 (condition -> IF LPAREN expression RPAREN block ELSE block .)
    STDEV           reduce using rule 46 (condition -> IF LPAREN expression RPAREN block ELSE block .)
    LPAREN          reduce using rule 46 (condition -> IF LPAREN expression RPAREN block ELSE block .)
    LBRACKET        reduce using rule 46 (condition -> IF LPAREN expression RPAREN block ELSE block .)
    PLUS            reduce using rule 46 (condition -> IF LPAREN expression RPAREN block ELSE block .)
    MINUS           reduce using rule 46 (condition -> IF LPAREN expression RPAREN block ELSE block .)
    CTEI            reduce using rule 46 (condition -> IF LPAREN expression RPAREN block ELSE block .)
    CTEF            reduce using rule 46 (condition -> IF LPAREN expression RPAREN block ELSE block .)
    CTEC            reduce using rule 46 (condition -> IF LPAREN expression RPAREN block ELSE block .)
    TRUE            reduce using rule 46 (condition -> IF LPAREN expression RPAREN block ELSE block .)
    FALSE           reduce using rule 46 (condition -> IF LPAREN expression RPAREN block ELSE block .)
    RBRACE          reduce using rule 46 (condition -> IF LPAREN expression RPAREN block ELSE block .)


state 246

    (85) reading_1 -> ID LBRACKET expression RBRACKET COMMA . reading_1
    (84) reading_1 -> . ID COMMA reading_1
    (85) reading_1 -> . ID LBRACKET expression RBRACKET COMMA reading_1
    (86) reading_1 -> . ID
    (87) reading_1 -> . ID LBRACKET expression RBRACKET

    ID              shift and go to state 181

    reading_1                      shift and go to state 248

state 247

    (91) non_conditional_loop -> FOR LPAREN ID EQUALS expression TO expression . BY expression RPAREN block

    BY              shift and go to state 249


state 248

    (85) reading_1 -> ID LBRACKET expression RBRACKET COMMA reading_1 .

    RPAREN          reduce using rule 85 (reading_1 -> ID LBRACKET expression RBRACKET COMMA reading_1 .)


state 249

    (91) non_conditional_loop -> FOR LPAREN ID EQUALS expression TO expression BY . expression RPAREN block
    (47) expression -> . exp
    (48) expression -> . expression1
    (57) exp -> . term np_add_quadruple
    (58) exp -> . term exp_1
    (49) expression1 -> . exp LT exp
    (50) expression1 -> . exp LE exp
    (51) expression1 -> . exp GT exp
    (52) expression1 -> . exp GE exp
    (53) expression1 -> . exp EQ exp
    (54) expression1 -> . exp NE exp
    (55) expression1 -> . exp AND exp
    (56) expression1 -> . exp OR exp
    (61) term -> . factor
    (62) term -> . factor term_2
    (65) factor -> . LPAREN np_add_paren expression RPAREN np_pop_paren
    (66) factor -> . LBRACKET expression RBRACKET
    (67) factor -> . function_call
    (68) factor -> . factor_prima_1
    (93) function_call -> . ID LPAREN RPAREN SEMI
    (94) function_call -> . ID LPAREN function_call_1 RPAREN SEMI
    (95) function_call -> . ID LPAREN function_call_1 RPAREN
    (96) function_call -> . ID LPAREN RPAREN
    (69) factor_prima_1 -> . PLUS varcte
    (70) factor_prima_1 -> . MINUS varcte
    (71) factor_prima_1 -> . varcte
    (72) varcte -> . ID np_add_id_quad
    (73) varcte -> . CTEI np_add_cte_int
    (74) varcte -> . CTEF np_add_cte_float
    (75) varcte -> . CTEC np_add_cte_char
    (76) varcte -> . TRUE np_add_cte_bool
    (77) varcte -> . FALSE np_add_cte_bool

    LPAREN          shift and go to state 54
    LBRACKET        shift and go to state 48
    ID              shift and go to state 57
    PLUS            shift and go to state 58
    MINUS           shift and go to state 60
    CTEI            shift and go to state 61
    CTEF            shift and go to state 62
    CTEC            shift and go to state 63
    TRUE            shift and go to state 64
    FALSE           shift and go to state 65

    expression                     shift and go to state 250
    exp                            shift and go to state 50
    expression1                    shift and go to state 51
    term                           shift and go to state 52
    factor                         shift and go to state 53
    function_call                  shift and go to state 55
    factor_prima_1                 shift and go to state 56
    varcte                         shift and go to state 59

state 250

    (91) non_conditional_loop -> FOR LPAREN ID EQUALS expression TO expression BY expression . RPAREN block

    RPAREN          shift and go to state 251


state 251

    (91) non_conditional_loop -> FOR LPAREN ID EQUALS expression TO expression BY expression RPAREN . block
    (22) block -> . LBRACE statements RBRACE

    LBRACE          shift and go to state 46

    block                          shift and go to state 252

state 252

    (91) non_conditional_loop -> FOR LPAREN ID EQUALS expression TO expression BY expression RPAREN block .

    ID              reduce using rule 91 (non_conditional_loop -> FOR LPAREN ID EQUALS expression TO expression BY expression RPAREN block .)
    IF              reduce using rule 91 (non_conditional_loop -> FOR LPAREN ID EQUALS expression TO expression BY expression RPAREN block .)
    PRINT           reduce using rule 91 (non_conditional_loop -> FOR LPAREN ID EQUALS expression TO expression BY expression RPAREN block .)
    READ            reduce using rule 91 (non_conditional_loop -> FOR LPAREN ID EQUALS expression TO expression BY expression RPAREN block .)
    RETURN          reduce using rule 91 (non_conditional_loop -> FOR LPAREN ID EQUALS expression TO expression BY expression RPAREN block .)
    FOR             reduce using rule 91 (non_conditional_loop -> FOR LPAREN ID EQUALS expression TO expression BY expression RPAREN block .)
    WHILE           reduce using rule 91 (non_conditional_loop -> FOR LPAREN ID EQUALS expression TO expression BY expression RPAREN block .)
    MEAN            reduce using rule 91 (non_conditional_loop -> FOR LPAREN ID EQUALS expression TO expression BY expression RPAREN block .)
    MEDIAN          reduce using rule 91 (non_conditional_loop -> FOR LPAREN ID EQUALS expression TO expression BY expression RPAREN block .)
    MODE            reduce using rule 91 (non_conditional_loop -> FOR LPAREN ID EQUALS expression TO expression BY expression RPAREN block .)
    VARIANCE        reduce using rule 91 (non_conditional_loop -> FOR LPAREN ID EQUALS expression TO expression BY expression RPAREN block .)
    STDEV           reduce using rule 91 (non_conditional_loop -> FOR LPAREN ID EQUALS expression TO expression BY expression RPAREN block .)
    LPAREN          reduce using rule 91 (non_conditional_loop -> FOR LPAREN ID EQUALS expression TO expression BY expression RPAREN block .)
    LBRACKET        reduce using rule 91 (non_conditional_loop -> FOR LPAREN ID EQUALS expression TO expression BY expression RPAREN block .)
    PLUS            reduce using rule 91 (non_conditional_loop -> FOR LPAREN ID EQUALS expression TO expression BY expression RPAREN block .)
    MINUS           reduce using rule 91 (non_conditional_loop -> FOR LPAREN ID EQUALS expression TO expression BY expression RPAREN block .)
    CTEI            reduce using rule 91 (non_conditional_loop -> FOR LPAREN ID EQUALS expression TO expression BY expression RPAREN block .)
    CTEF            reduce using rule 91 (non_conditional_loop -> FOR LPAREN ID EQUALS expression TO expression BY expression RPAREN block .)
    CTEC            reduce using rule 91 (non_conditional_loop -> FOR LPAREN ID EQUALS expression TO expression BY expression RPAREN block .)
    TRUE            reduce using rule 91 (non_conditional_loop -> FOR LPAREN ID EQUALS expression TO expression BY expression RPAREN block .)
    FALSE           reduce using rule 91 (non_conditional_loop -> FOR LPAREN ID EQUALS expression TO expression BY expression RPAREN block .)
    RBRACE          reduce using rule 91 (non_conditional_loop -> FOR LPAREN ID EQUALS expression TO expression BY expression RPAREN block .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 52 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 52 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 57 resolved as shift
WARNING: shift/reduce conflict for ID in state 75 resolved as shift
WARNING: shift/reduce conflict for IF in state 75 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 75 resolved as shift
WARNING: shift/reduce conflict for READ in state 75 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 75 resolved as shift
WARNING: shift/reduce conflict for FOR in state 75 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 75 resolved as shift
WARNING: shift/reduce conflict for MEAN in state 75 resolved as shift
WARNING: shift/reduce conflict for MEDIAN in state 75 resolved as shift
WARNING: shift/reduce conflict for MODE in state 75 resolved as shift
WARNING: shift/reduce conflict for VARIANCE in state 75 resolved as shift
WARNING: shift/reduce conflict for STDEV in state 75 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 75 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 75 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 75 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 75 resolved as shift
WARNING: shift/reduce conflict for CTEI in state 75 resolved as shift
WARNING: shift/reduce conflict for CTEF in state 75 resolved as shift
WARNING: shift/reduce conflict for CTEC in state 75 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 75 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 75 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 78 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 78 resolved as shift
WARNING: shift/reduce conflict for SEMI in state 167 resolved as shift
WARNING: shift/reduce conflict for SEMI in state 196 resolved as shift
WARNING: reduce/reduce conflict in state 75 resolved using rule (factor -> function_call)
WARNING: rejected rule (epsilon -> <empty>) in state 75
