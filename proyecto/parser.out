Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID SEMI program_1
Rule 2     program_1 -> vars program_1
Rule 3     program_1 -> function program_1
Rule 4     program_1 -> main_block
Rule 5     vars -> LET vars_prima_1
Rule 6     vars_prima_1 -> ID COLON type SEMI
Rule 7     vars_prima_1 -> ID COMMA vars_prima_1
Rule 8     type -> INT type_1
Rule 9     type -> FLOAT type_1
Rule 10    type -> CHAR type_1
Rule 11    type -> BOOL type_1
Rule 12    type_1 -> LBRACKET expression RBRACKET
Rule 13    type_1 -> epsilon
Rule 14    function -> FUNCTION ID COLON return_type LPAREN params RPAREN block
Rule 15    function -> FUNCTION ID COLON return_type LPAREN RPAREN block
Rule 16    main_block -> MAIN LPAREN RPAREN block
Rule 17    block -> LBRACE statements RBRACE
Rule 18    return_type -> VOID
Rule 19    return_type -> type
Rule 20    params -> ID COLON type COMMA params
Rule 21    params -> ID COLON type
Rule 22    statements -> assignment statements1
Rule 23    statements -> vars statements1
Rule 24    statements -> condition statements1
Rule 25    statements -> writing statements1
Rule 26    statements -> reading statements1
Rule 27    statements -> repetition statements1
Rule 28    statements -> return statements1
Rule 29    statements -> function_call statements1
Rule 30    statements -> expression statements1
Rule 31    statements -> special_functions statements1
Rule 32    special_functions -> mean
Rule 33    special_functions -> median
Rule 34    special_functions -> mode
Rule 35    special_functions -> variance
Rule 36    special_functions -> standard_deviation
Rule 37    statements1 -> statements
Rule 38    statements1 -> epsilon
Rule 39    assignment -> ID EQUALS expression SEMI
Rule 40    assignment -> ID LBRACKET expression RBRACKET EQUALS expression SEMI
Rule 41    condition -> IF LPAREN expression RPAREN block
Rule 42    condition -> IF LPAREN expression RPAREN block ELSE block
Rule 43    expression -> exp
Rule 44    expression -> expression1
Rule 45    expression1 -> exp LT exp
Rule 46    expression1 -> exp LE exp
Rule 47    expression1 -> exp GT exp
Rule 48    expression1 -> exp GE exp
Rule 49    expression1 -> exp EQ exp
Rule 50    expression1 -> exp NE exp
Rule 51    expression1 -> exp AND exp
Rule 52    expression1 -> exp OR exp
Rule 53    exp -> term
Rule 54    exp -> term exp_1
Rule 55    exp_1 -> PLUS exp
Rule 56    exp_1 -> MINUS exp
Rule 57    term -> factor
Rule 58    term -> factor term_2
Rule 59    term_2 -> TIMES term
Rule 60    term_2 -> DIVIDE term
Rule 61    factor -> LPAREN expression RPAREN
Rule 62    factor -> LBRACKET expression RBRACKET
Rule 63    factor -> function_call
Rule 64    factor -> factor_prima_1
Rule 65    factor_prima_1 -> PLUS varcte
Rule 66    factor_prima_1 -> MINUS varcte
Rule 67    factor_prima_1 -> varcte
Rule 68    varcte -> ID
Rule 69    varcte -> CTEI
Rule 70    varcte -> CTEF
Rule 71    varcte -> CTEC
Rule 72    varcte -> TRUE
Rule 73    varcte -> FALSE
Rule 74    writing -> PRINT LPAREN writing_1 RPAREN SEMI
Rule 75    writing_1 -> expression COMMA writing_1
Rule 76    writing_1 -> expression
Rule 77    writing_1 -> CTESTRING
Rule 78    writing_1 -> CTESTRING COMMA
Rule 79    reading -> READ LPAREN reading_1 RPAREN SEMI
Rule 80    reading_1 -> ID COMMA reading_1
Rule 81    reading_1 -> ID LBRACKET expression RBRACKET COMMA reading_1
Rule 82    reading_1 -> ID
Rule 83    reading_1 -> ID LBRACKET expression RBRACKET
Rule 84    repetition -> non_conditional_loop
Rule 85    repetition -> conditional_loop
Rule 86    conditional_loop -> WHILE LPAREN expression RPAREN DO block
Rule 87    non_conditional_loop -> FOR LPAREN ID EQUALS expression TO expression BY expression RPAREN block
Rule 88    return -> RETURN expression SEMI
Rule 89    function_call -> ID LPAREN RPAREN SEMI
Rule 90    function_call -> ID LPAREN function_call_1 RPAREN SEMI
Rule 91    function_call -> ID LPAREN function_call_1 RPAREN
Rule 92    function_call -> ID LPAREN RPAREN
Rule 93    function_call_1 -> expression
Rule 94    function_call_1 -> expression COMMA function_call_1
Rule 95    mean -> MEAN LPAREN expression RPAREN SEMI
Rule 96    median -> MEDIAN LPAREN expression RPAREN SEMI
Rule 97    mode -> MODE LPAREN expression RPAREN SEMI
Rule 98    variance -> VARIANCE LPAREN expression RPAREN SEMI
Rule 99    standard_deviation -> STDEV LPAREN expression RPAREN SEMI
Rule 100   epsilon -> <empty>

Terminals, with rules where they appear

AND                  : 51
BOOL                 : 11
BY                   : 87
CHAR                 : 10
COLON                : 6 14 15 20 21
COMMA                : 7 20 75 78 80 81 94
CTEC                 : 71
CTEF                 : 70
CTEI                 : 69
CTESTRING            : 77 78
DIVIDE               : 60
DO                   : 86
ELSE                 : 42
EQ                   : 49
EQUALS               : 39 40 87
FALSE                : 73
FLOAT                : 9
FOR                  : 87
FUNCTION             : 14 15
GE                   : 48
GT                   : 47
ID                   : 1 6 7 14 15 20 21 39 40 68 80 81 82 83 87 89 90 91 92
IF                   : 41 42
INT                  : 8
LBRACE               : 17
LBRACKET             : 12 40 62 81 83
LE                   : 46
LET                  : 5
LPAREN               : 14 15 16 41 42 61 74 79 86 87 89 90 91 92 95 96 97 98 99
LT                   : 45
MAIN                 : 16
MEAN                 : 95
MEDIAN               : 96
MINUS                : 56 66
MODE                 : 97
NE                   : 50
OR                   : 52
PLUS                 : 55 65
PRINT                : 74
PROGRAM              : 1
RBRACE               : 17
RBRACKET             : 12 40 62 81 83
READ                 : 79
RETURN               : 88
RPAREN               : 14 15 16 41 42 61 74 79 86 87 89 90 91 92 95 96 97 98 99
SEMI                 : 1 6 39 40 74 79 88 89 90 95 96 97 98 99
STDEV                : 99
TIMES                : 59
TO                   : 87
TRUE                 : 72
VARIANCE             : 98
VOID                 : 18
WHILE                : 86
error                : 

Nonterminals, with rules where they appear

assignment           : 22
block                : 14 15 16 41 42 42 86 87
condition            : 24
conditional_loop     : 85
epsilon              : 13 38
exp                  : 43 45 45 46 46 47 47 48 48 49 49 50 50 51 51 52 52 55 56
exp_1                : 54
expression           : 12 30 39 40 40 41 42 61 62 75 76 81 83 86 87 87 87 88 93 94 95 96 97 98 99
expression1          : 44
factor               : 57 58
factor_prima_1       : 64
function             : 3
function_call        : 29 63
function_call_1      : 90 91 94
main_block           : 4
mean                 : 32
median               : 33
mode                 : 34
non_conditional_loop : 84
params               : 14 20
program              : 0
program_1            : 1 2 3
reading              : 26
reading_1            : 79 80 81
repetition           : 27
return               : 28
return_type          : 14 15
special_functions    : 31
standard_deviation   : 36
statements           : 17 37
statements1          : 22 23 24 25 26 27 28 29 30 31
term                 : 53 54 59 60
term_2               : 58
type                 : 6 19 20 21
type_1               : 8 9 10 11
varcte               : 65 66 67
variance             : 35
vars                 : 2 23
vars_prima_1         : 5 7
writing              : 25
writing_1            : 74 75

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID SEMI program_1

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID SEMI program_1

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . SEMI program_1

    SEMI            shift and go to state 4


state 4

    (1) program -> PROGRAM ID SEMI . program_1
    (2) program_1 -> . vars program_1
    (3) program_1 -> . function program_1
    (4) program_1 -> . main_block
    (5) vars -> . LET vars_prima_1
    (14) function -> . FUNCTION ID COLON return_type LPAREN params RPAREN block
    (15) function -> . FUNCTION ID COLON return_type LPAREN RPAREN block
    (16) main_block -> . MAIN LPAREN RPAREN block

    LET             shift and go to state 9
    FUNCTION        shift and go to state 10
    MAIN            shift and go to state 11

    program_1                      shift and go to state 5
    vars                           shift and go to state 6
    function                       shift and go to state 7
    main_block                     shift and go to state 8

state 5

    (1) program -> PROGRAM ID SEMI program_1 .

    $end            reduce using rule 1 (program -> PROGRAM ID SEMI program_1 .)


state 6

    (2) program_1 -> vars . program_1
    (2) program_1 -> . vars program_1
    (3) program_1 -> . function program_1
    (4) program_1 -> . main_block
    (5) vars -> . LET vars_prima_1
    (14) function -> . FUNCTION ID COLON return_type LPAREN params RPAREN block
    (15) function -> . FUNCTION ID COLON return_type LPAREN RPAREN block
    (16) main_block -> . MAIN LPAREN RPAREN block

    LET             shift and go to state 9
    FUNCTION        shift and go to state 10
    MAIN            shift and go to state 11

    vars                           shift and go to state 6
    program_1                      shift and go to state 12
    function                       shift and go to state 7
    main_block                     shift and go to state 8

state 7

    (3) program_1 -> function . program_1
    (2) program_1 -> . vars program_1
    (3) program_1 -> . function program_1
    (4) program_1 -> . main_block
    (5) vars -> . LET vars_prima_1
    (14) function -> . FUNCTION ID COLON return_type LPAREN params RPAREN block
    (15) function -> . FUNCTION ID COLON return_type LPAREN RPAREN block
    (16) main_block -> . MAIN LPAREN RPAREN block

    LET             shift and go to state 9
    FUNCTION        shift and go to state 10
    MAIN            shift and go to state 11

    function                       shift and go to state 7
    program_1                      shift and go to state 13
    vars                           shift and go to state 6
    main_block                     shift and go to state 8

state 8

    (4) program_1 -> main_block .

    $end            reduce using rule 4 (program_1 -> main_block .)


state 9

    (5) vars -> LET . vars_prima_1
    (6) vars_prima_1 -> . ID COLON type SEMI
    (7) vars_prima_1 -> . ID COMMA vars_prima_1

    ID              shift and go to state 15

    vars_prima_1                   shift and go to state 14

state 10

    (14) function -> FUNCTION . ID COLON return_type LPAREN params RPAREN block
    (15) function -> FUNCTION . ID COLON return_type LPAREN RPAREN block

    ID              shift and go to state 16


state 11

    (16) main_block -> MAIN . LPAREN RPAREN block

    LPAREN          shift and go to state 17


state 12

    (2) program_1 -> vars program_1 .

    $end            reduce using rule 2 (program_1 -> vars program_1 .)


state 13

    (3) program_1 -> function program_1 .

    $end            reduce using rule 3 (program_1 -> function program_1 .)


state 14

    (5) vars -> LET vars_prima_1 .

    LET             reduce using rule 5 (vars -> LET vars_prima_1 .)
    FUNCTION        reduce using rule 5 (vars -> LET vars_prima_1 .)
    MAIN            reduce using rule 5 (vars -> LET vars_prima_1 .)
    ID              reduce using rule 5 (vars -> LET vars_prima_1 .)
    IF              reduce using rule 5 (vars -> LET vars_prima_1 .)
    PRINT           reduce using rule 5 (vars -> LET vars_prima_1 .)
    READ            reduce using rule 5 (vars -> LET vars_prima_1 .)
    RETURN          reduce using rule 5 (vars -> LET vars_prima_1 .)
    FOR             reduce using rule 5 (vars -> LET vars_prima_1 .)
    WHILE           reduce using rule 5 (vars -> LET vars_prima_1 .)
    MEAN            reduce using rule 5 (vars -> LET vars_prima_1 .)
    MEDIAN          reduce using rule 5 (vars -> LET vars_prima_1 .)
    MODE            reduce using rule 5 (vars -> LET vars_prima_1 .)
    VARIANCE        reduce using rule 5 (vars -> LET vars_prima_1 .)
    STDEV           reduce using rule 5 (vars -> LET vars_prima_1 .)
    LPAREN          reduce using rule 5 (vars -> LET vars_prima_1 .)
    LBRACKET        reduce using rule 5 (vars -> LET vars_prima_1 .)
    PLUS            reduce using rule 5 (vars -> LET vars_prima_1 .)
    MINUS           reduce using rule 5 (vars -> LET vars_prima_1 .)
    CTEI            reduce using rule 5 (vars -> LET vars_prima_1 .)
    CTEF            reduce using rule 5 (vars -> LET vars_prima_1 .)
    CTEC            reduce using rule 5 (vars -> LET vars_prima_1 .)
    TRUE            reduce using rule 5 (vars -> LET vars_prima_1 .)
    FALSE           reduce using rule 5 (vars -> LET vars_prima_1 .)
    RBRACE          reduce using rule 5 (vars -> LET vars_prima_1 .)


state 15

    (6) vars_prima_1 -> ID . COLON type SEMI
    (7) vars_prima_1 -> ID . COMMA vars_prima_1

    COLON           shift and go to state 18
    COMMA           shift and go to state 19


state 16

    (14) function -> FUNCTION ID . COLON return_type LPAREN params RPAREN block
    (15) function -> FUNCTION ID . COLON return_type LPAREN RPAREN block

    COLON           shift and go to state 20


state 17

    (16) main_block -> MAIN LPAREN . RPAREN block

    RPAREN          shift and go to state 21


state 18

    (6) vars_prima_1 -> ID COLON . type SEMI
    (8) type -> . INT type_1
    (9) type -> . FLOAT type_1
    (10) type -> . CHAR type_1
    (11) type -> . BOOL type_1

    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    CHAR            shift and go to state 25
    BOOL            shift and go to state 26

    type                           shift and go to state 22

state 19

    (7) vars_prima_1 -> ID COMMA . vars_prima_1
    (6) vars_prima_1 -> . ID COLON type SEMI
    (7) vars_prima_1 -> . ID COMMA vars_prima_1

    ID              shift and go to state 15

    vars_prima_1                   shift and go to state 27

state 20

    (14) function -> FUNCTION ID COLON . return_type LPAREN params RPAREN block
    (15) function -> FUNCTION ID COLON . return_type LPAREN RPAREN block
    (18) return_type -> . VOID
    (19) return_type -> . type
    (8) type -> . INT type_1
    (9) type -> . FLOAT type_1
    (10) type -> . CHAR type_1
    (11) type -> . BOOL type_1

    VOID            shift and go to state 29
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    CHAR            shift and go to state 25
    BOOL            shift and go to state 26

    return_type                    shift and go to state 28
    type                           shift and go to state 30

state 21

    (16) main_block -> MAIN LPAREN RPAREN . block
    (17) block -> . LBRACE statements RBRACE

    LBRACE          shift and go to state 32

    block                          shift and go to state 31

state 22

    (6) vars_prima_1 -> ID COLON type . SEMI

    SEMI            shift and go to state 33


state 23

    (8) type -> INT . type_1
    (12) type_1 -> . LBRACKET expression RBRACKET
    (13) type_1 -> . epsilon
    (100) epsilon -> .

    LBRACKET        shift and go to state 35
    SEMI            reduce using rule 100 (epsilon -> .)
    LPAREN          reduce using rule 100 (epsilon -> .)
    COMMA           reduce using rule 100 (epsilon -> .)
    RPAREN          reduce using rule 100 (epsilon -> .)

    type_1                         shift and go to state 34
    epsilon                        shift and go to state 36

state 24

    (9) type -> FLOAT . type_1
    (12) type_1 -> . LBRACKET expression RBRACKET
    (13) type_1 -> . epsilon
    (100) epsilon -> .

    LBRACKET        shift and go to state 35
    SEMI            reduce using rule 100 (epsilon -> .)
    LPAREN          reduce using rule 100 (epsilon -> .)
    COMMA           reduce using rule 100 (epsilon -> .)
    RPAREN          reduce using rule 100 (epsilon -> .)

    type_1                         shift and go to state 37
    epsilon                        shift and go to state 36

state 25

    (10) type -> CHAR . type_1
    (12) type_1 -> . LBRACKET expression RBRACKET
    (13) type_1 -> . epsilon
    (100) epsilon -> .

    LBRACKET        shift and go to state 35
    SEMI            reduce using rule 100 (epsilon -> .)
    LPAREN          reduce using rule 100 (epsilon -> .)
    COMMA           reduce using rule 100 (epsilon -> .)
    RPAREN          reduce using rule 100 (epsilon -> .)

    type_1                         shift and go to state 38
    epsilon                        shift and go to state 36

state 26

    (11) type -> BOOL . type_1
    (12) type_1 -> . LBRACKET expression RBRACKET
    (13) type_1 -> . epsilon
    (100) epsilon -> .

    LBRACKET        shift and go to state 35
    SEMI            reduce using rule 100 (epsilon -> .)
    LPAREN          reduce using rule 100 (epsilon -> .)
    COMMA           reduce using rule 100 (epsilon -> .)
    RPAREN          reduce using rule 100 (epsilon -> .)

    type_1                         shift and go to state 39
    epsilon                        shift and go to state 36

state 27

    (7) vars_prima_1 -> ID COMMA vars_prima_1 .

    LET             reduce using rule 7 (vars_prima_1 -> ID COMMA vars_prima_1 .)
    FUNCTION        reduce using rule 7 (vars_prima_1 -> ID COMMA vars_prima_1 .)
    MAIN            reduce using rule 7 (vars_prima_1 -> ID COMMA vars_prima_1 .)
    ID              reduce using rule 7 (vars_prima_1 -> ID COMMA vars_prima_1 .)
    IF              reduce using rule 7 (vars_prima_1 -> ID COMMA vars_prima_1 .)
    PRINT           reduce using rule 7 (vars_prima_1 -> ID COMMA vars_prima_1 .)
    READ            reduce using rule 7 (vars_prima_1 -> ID COMMA vars_prima_1 .)
    RETURN          reduce using rule 7 (vars_prima_1 -> ID COMMA vars_prima_1 .)
    FOR             reduce using rule 7 (vars_prima_1 -> ID COMMA vars_prima_1 .)
    WHILE           reduce using rule 7 (vars_prima_1 -> ID COMMA vars_prima_1 .)
    MEAN            reduce using rule 7 (vars_prima_1 -> ID COMMA vars_prima_1 .)
    MEDIAN          reduce using rule 7 (vars_prima_1 -> ID COMMA vars_prima_1 .)
    MODE            reduce using rule 7 (vars_prima_1 -> ID COMMA vars_prima_1 .)
    VARIANCE        reduce using rule 7 (vars_prima_1 -> ID COMMA vars_prima_1 .)
    STDEV           reduce using rule 7 (vars_prima_1 -> ID COMMA vars_prima_1 .)
    LPAREN          reduce using rule 7 (vars_prima_1 -> ID COMMA vars_prima_1 .)
    LBRACKET        reduce using rule 7 (vars_prima_1 -> ID COMMA vars_prima_1 .)
    PLUS            reduce using rule 7 (vars_prima_1 -> ID COMMA vars_prima_1 .)
    MINUS           reduce using rule 7 (vars_prima_1 -> ID COMMA vars_prima_1 .)
    CTEI            reduce using rule 7 (vars_prima_1 -> ID COMMA vars_prima_1 .)
    CTEF            reduce using rule 7 (vars_prima_1 -> ID COMMA vars_prima_1 .)
    CTEC            reduce using rule 7 (vars_prima_1 -> ID COMMA vars_prima_1 .)
    TRUE            reduce using rule 7 (vars_prima_1 -> ID COMMA vars_prima_1 .)
    FALSE           reduce using rule 7 (vars_prima_1 -> ID COMMA vars_prima_1 .)
    RBRACE          reduce using rule 7 (vars_prima_1 -> ID COMMA vars_prima_1 .)


state 28

    (14) function -> FUNCTION ID COLON return_type . LPAREN params RPAREN block
    (15) function -> FUNCTION ID COLON return_type . LPAREN RPAREN block

    LPAREN          shift and go to state 40


state 29

    (18) return_type -> VOID .

    LPAREN          reduce using rule 18 (return_type -> VOID .)


state 30

    (19) return_type -> type .

    LPAREN          reduce using rule 19 (return_type -> type .)


state 31

    (16) main_block -> MAIN LPAREN RPAREN block .

    $end            reduce using rule 16 (main_block -> MAIN LPAREN RPAREN block .)


state 32

    (17) block -> LBRACE . statements RBRACE
    (22) statements -> . assignment statements1
    (23) statements -> . vars statements1
    (24) statements -> . condition statements1
    (25) statements -> . writing statements1
    (26) statements -> . reading statements1
    (27) statements -> . repetition statements1
    (28) statements -> . return statements1
    (29) statements -> . function_call statements1
    (30) statements -> . expression statements1
    (31) statements -> . special_functions statements1
    (39) assignment -> . ID EQUALS expression SEMI
    (40) assignment -> . ID LBRACKET expression RBRACKET EQUALS expression SEMI
    (5) vars -> . LET vars_prima_1
    (41) condition -> . IF LPAREN expression RPAREN block
    (42) condition -> . IF LPAREN expression RPAREN block ELSE block
    (74) writing -> . PRINT LPAREN writing_1 RPAREN SEMI
    (79) reading -> . READ LPAREN reading_1 RPAREN SEMI
    (84) repetition -> . non_conditional_loop
    (85) repetition -> . conditional_loop
    (88) return -> . RETURN expression SEMI
    (89) function_call -> . ID LPAREN RPAREN SEMI
    (90) function_call -> . ID LPAREN function_call_1 RPAREN SEMI
    (91) function_call -> . ID LPAREN function_call_1 RPAREN
    (92) function_call -> . ID LPAREN RPAREN
    (43) expression -> . exp
    (44) expression -> . expression1
    (32) special_functions -> . mean
    (33) special_functions -> . median
    (34) special_functions -> . mode
    (35) special_functions -> . variance
    (36) special_functions -> . standard_deviation
    (87) non_conditional_loop -> . FOR LPAREN ID EQUALS expression TO expression BY expression RPAREN block
    (86) conditional_loop -> . WHILE LPAREN expression RPAREN DO block
    (53) exp -> . term
    (54) exp -> . term exp_1
    (45) expression1 -> . exp LT exp
    (46) expression1 -> . exp LE exp
    (47) expression1 -> . exp GT exp
    (48) expression1 -> . exp GE exp
    (49) expression1 -> . exp EQ exp
    (50) expression1 -> . exp NE exp
    (51) expression1 -> . exp AND exp
    (52) expression1 -> . exp OR exp
    (95) mean -> . MEAN LPAREN expression RPAREN SEMI
    (96) median -> . MEDIAN LPAREN expression RPAREN SEMI
    (97) mode -> . MODE LPAREN expression RPAREN SEMI
    (98) variance -> . VARIANCE LPAREN expression RPAREN SEMI
    (99) standard_deviation -> . STDEV LPAREN expression RPAREN SEMI
    (57) term -> . factor
    (58) term -> . factor term_2
    (61) factor -> . LPAREN expression RPAREN
    (62) factor -> . LBRACKET expression RBRACKET
    (63) factor -> . function_call
    (64) factor -> . factor_prima_1
    (65) factor_prima_1 -> . PLUS varcte
    (66) factor_prima_1 -> . MINUS varcte
    (67) factor_prima_1 -> . varcte
    (68) varcte -> . ID
    (69) varcte -> . CTEI
    (70) varcte -> . CTEF
    (71) varcte -> . CTEC
    (72) varcte -> . TRUE
    (73) varcte -> . FALSE

    ID              shift and go to state 52
    LET             shift and go to state 9
    IF              shift and go to state 54
    PRINT           shift and go to state 56
    READ            shift and go to state 57
    RETURN          shift and go to state 60
    FOR             shift and go to state 68
    WHILE           shift and go to state 69
    MEAN            shift and go to state 71
    MEDIAN          shift and go to state 72
    MODE            shift and go to state 73
    VARIANCE        shift and go to state 74
    STDEV           shift and go to state 75
    LPAREN          shift and go to state 55
    LBRACKET        shift and go to state 53
    PLUS            shift and go to state 78
    MINUS           shift and go to state 80
    CTEI            shift and go to state 81
    CTEF            shift and go to state 82
    CTEC            shift and go to state 83
    TRUE            shift and go to state 84
    FALSE           shift and go to state 85

    statements                     shift and go to state 41
    assignment                     shift and go to state 42
    vars                           shift and go to state 43
    condition                      shift and go to state 44
    writing                        shift and go to state 45
    reading                        shift and go to state 46
    repetition                     shift and go to state 47
    return                         shift and go to state 48
    function_call                  shift and go to state 49
    expression                     shift and go to state 50
    special_functions              shift and go to state 51
    non_conditional_loop           shift and go to state 58
    conditional_loop               shift and go to state 59
    exp                            shift and go to state 61
    expression1                    shift and go to state 62
    mean                           shift and go to state 63
    median                         shift and go to state 64
    mode                           shift and go to state 65
    variance                       shift and go to state 66
    standard_deviation             shift and go to state 67
    term                           shift and go to state 70
    factor                         shift and go to state 76
    factor_prima_1                 shift and go to state 77
    varcte                         shift and go to state 79

state 33

    (6) vars_prima_1 -> ID COLON type SEMI .

    LET             reduce using rule 6 (vars_prima_1 -> ID COLON type SEMI .)
    FUNCTION        reduce using rule 6 (vars_prima_1 -> ID COLON type SEMI .)
    MAIN            reduce using rule 6 (vars_prima_1 -> ID COLON type SEMI .)
    ID              reduce using rule 6 (vars_prima_1 -> ID COLON type SEMI .)
    IF              reduce using rule 6 (vars_prima_1 -> ID COLON type SEMI .)
    PRINT           reduce using rule 6 (vars_prima_1 -> ID COLON type SEMI .)
    READ            reduce using rule 6 (vars_prima_1 -> ID COLON type SEMI .)
    RETURN          reduce using rule 6 (vars_prima_1 -> ID COLON type SEMI .)
    FOR             reduce using rule 6 (vars_prima_1 -> ID COLON type SEMI .)
    WHILE           reduce using rule 6 (vars_prima_1 -> ID COLON type SEMI .)
    MEAN            reduce using rule 6 (vars_prima_1 -> ID COLON type SEMI .)
    MEDIAN          reduce using rule 6 (vars_prima_1 -> ID COLON type SEMI .)
    MODE            reduce using rule 6 (vars_prima_1 -> ID COLON type SEMI .)
    VARIANCE        reduce using rule 6 (vars_prima_1 -> ID COLON type SEMI .)
    STDEV           reduce using rule 6 (vars_prima_1 -> ID COLON type SEMI .)
    LPAREN          reduce using rule 6 (vars_prima_1 -> ID COLON type SEMI .)
    LBRACKET        reduce using rule 6 (vars_prima_1 -> ID COLON type SEMI .)
    PLUS            reduce using rule 6 (vars_prima_1 -> ID COLON type SEMI .)
    MINUS           reduce using rule 6 (vars_prima_1 -> ID COLON type SEMI .)
    CTEI            reduce using rule 6 (vars_prima_1 -> ID COLON type SEMI .)
    CTEF            reduce using rule 6 (vars_prima_1 -> ID COLON type SEMI .)
    CTEC            reduce using rule 6 (vars_prima_1 -> ID COLON type SEMI .)
    TRUE            reduce using rule 6 (vars_prima_1 -> ID COLON type SEMI .)
    FALSE           reduce using rule 6 (vars_prima_1 -> ID COLON type SEMI .)
    RBRACE          reduce using rule 6 (vars_prima_1 -> ID COLON type SEMI .)


state 34

    (8) type -> INT type_1 .

    SEMI            reduce using rule 8 (type -> INT type_1 .)
    LPAREN          reduce using rule 8 (type -> INT type_1 .)
    COMMA           reduce using rule 8 (type -> INT type_1 .)
    RPAREN          reduce using rule 8 (type -> INT type_1 .)


state 35

    (12) type_1 -> LBRACKET . expression RBRACKET
    (43) expression -> . exp
    (44) expression -> . expression1
    (53) exp -> . term
    (54) exp -> . term exp_1
    (45) expression1 -> . exp LT exp
    (46) expression1 -> . exp LE exp
    (47) expression1 -> . exp GT exp
    (48) expression1 -> . exp GE exp
    (49) expression1 -> . exp EQ exp
    (50) expression1 -> . exp NE exp
    (51) expression1 -> . exp AND exp
    (52) expression1 -> . exp OR exp
    (57) term -> . factor
    (58) term -> . factor term_2
    (61) factor -> . LPAREN expression RPAREN
    (62) factor -> . LBRACKET expression RBRACKET
    (63) factor -> . function_call
    (64) factor -> . factor_prima_1
    (89) function_call -> . ID LPAREN RPAREN SEMI
    (90) function_call -> . ID LPAREN function_call_1 RPAREN SEMI
    (91) function_call -> . ID LPAREN function_call_1 RPAREN
    (92) function_call -> . ID LPAREN RPAREN
    (65) factor_prima_1 -> . PLUS varcte
    (66) factor_prima_1 -> . MINUS varcte
    (67) factor_prima_1 -> . varcte
    (68) varcte -> . ID
    (69) varcte -> . CTEI
    (70) varcte -> . CTEF
    (71) varcte -> . CTEC
    (72) varcte -> . TRUE
    (73) varcte -> . FALSE

    LPAREN          shift and go to state 55
    LBRACKET        shift and go to state 53
    ID              shift and go to state 88
    PLUS            shift and go to state 78
    MINUS           shift and go to state 80
    CTEI            shift and go to state 81
    CTEF            shift and go to state 82
    CTEC            shift and go to state 83
    TRUE            shift and go to state 84
    FALSE           shift and go to state 85

    expression                     shift and go to state 86
    exp                            shift and go to state 61
    expression1                    shift and go to state 62
    term                           shift and go to state 70
    factor                         shift and go to state 76
    function_call                  shift and go to state 87
    factor_prima_1                 shift and go to state 77
    varcte                         shift and go to state 79

state 36

    (13) type_1 -> epsilon .

    SEMI            reduce using rule 13 (type_1 -> epsilon .)
    LPAREN          reduce using rule 13 (type_1 -> epsilon .)
    COMMA           reduce using rule 13 (type_1 -> epsilon .)
    RPAREN          reduce using rule 13 (type_1 -> epsilon .)


state 37

    (9) type -> FLOAT type_1 .

    SEMI            reduce using rule 9 (type -> FLOAT type_1 .)
    LPAREN          reduce using rule 9 (type -> FLOAT type_1 .)
    COMMA           reduce using rule 9 (type -> FLOAT type_1 .)
    RPAREN          reduce using rule 9 (type -> FLOAT type_1 .)


state 38

    (10) type -> CHAR type_1 .

    SEMI            reduce using rule 10 (type -> CHAR type_1 .)
    LPAREN          reduce using rule 10 (type -> CHAR type_1 .)
    COMMA           reduce using rule 10 (type -> CHAR type_1 .)
    RPAREN          reduce using rule 10 (type -> CHAR type_1 .)


state 39

    (11) type -> BOOL type_1 .

    SEMI            reduce using rule 11 (type -> BOOL type_1 .)
    LPAREN          reduce using rule 11 (type -> BOOL type_1 .)
    COMMA           reduce using rule 11 (type -> BOOL type_1 .)
    RPAREN          reduce using rule 11 (type -> BOOL type_1 .)


state 40

    (14) function -> FUNCTION ID COLON return_type LPAREN . params RPAREN block
    (15) function -> FUNCTION ID COLON return_type LPAREN . RPAREN block
    (20) params -> . ID COLON type COMMA params
    (21) params -> . ID COLON type

    RPAREN          shift and go to state 91
    ID              shift and go to state 89

    params                         shift and go to state 90

state 41

    (17) block -> LBRACE statements . RBRACE

    RBRACE          shift and go to state 92


state 42

    (22) statements -> assignment . statements1
    (37) statements1 -> . statements
    (38) statements1 -> . epsilon
    (22) statements -> . assignment statements1
    (23) statements -> . vars statements1
    (24) statements -> . condition statements1
    (25) statements -> . writing statements1
    (26) statements -> . reading statements1
    (27) statements -> . repetition statements1
    (28) statements -> . return statements1
    (29) statements -> . function_call statements1
    (30) statements -> . expression statements1
    (31) statements -> . special_functions statements1
    (100) epsilon -> .
    (39) assignment -> . ID EQUALS expression SEMI
    (40) assignment -> . ID LBRACKET expression RBRACKET EQUALS expression SEMI
    (5) vars -> . LET vars_prima_1
    (41) condition -> . IF LPAREN expression RPAREN block
    (42) condition -> . IF LPAREN expression RPAREN block ELSE block
    (74) writing -> . PRINT LPAREN writing_1 RPAREN SEMI
    (79) reading -> . READ LPAREN reading_1 RPAREN SEMI
    (84) repetition -> . non_conditional_loop
    (85) repetition -> . conditional_loop
    (88) return -> . RETURN expression SEMI
    (89) function_call -> . ID LPAREN RPAREN SEMI
    (90) function_call -> . ID LPAREN function_call_1 RPAREN SEMI
    (91) function_call -> . ID LPAREN function_call_1 RPAREN
    (92) function_call -> . ID LPAREN RPAREN
    (43) expression -> . exp
    (44) expression -> . expression1
    (32) special_functions -> . mean
    (33) special_functions -> . median
    (34) special_functions -> . mode
    (35) special_functions -> . variance
    (36) special_functions -> . standard_deviation
    (87) non_conditional_loop -> . FOR LPAREN ID EQUALS expression TO expression BY expression RPAREN block
    (86) conditional_loop -> . WHILE LPAREN expression RPAREN DO block
    (53) exp -> . term
    (54) exp -> . term exp_1
    (45) expression1 -> . exp LT exp
    (46) expression1 -> . exp LE exp
    (47) expression1 -> . exp GT exp
    (48) expression1 -> . exp GE exp
    (49) expression1 -> . exp EQ exp
    (50) expression1 -> . exp NE exp
    (51) expression1 -> . exp AND exp
    (52) expression1 -> . exp OR exp
    (95) mean -> . MEAN LPAREN expression RPAREN SEMI
    (96) median -> . MEDIAN LPAREN expression RPAREN SEMI
    (97) mode -> . MODE LPAREN expression RPAREN SEMI
    (98) variance -> . VARIANCE LPAREN expression RPAREN SEMI
    (99) standard_deviation -> . STDEV LPAREN expression RPAREN SEMI
    (57) term -> . factor
    (58) term -> . factor term_2
    (61) factor -> . LPAREN expression RPAREN
    (62) factor -> . LBRACKET expression RBRACKET
    (63) factor -> . function_call
    (64) factor -> . factor_prima_1
    (65) factor_prima_1 -> . PLUS varcte
    (66) factor_prima_1 -> . MINUS varcte
    (67) factor_prima_1 -> . varcte
    (68) varcte -> . ID
    (69) varcte -> . CTEI
    (70) varcte -> . CTEF
    (71) varcte -> . CTEC
    (72) varcte -> . TRUE
    (73) varcte -> . FALSE

    RBRACE          reduce using rule 100 (epsilon -> .)
    ID              shift and go to state 52
    LET             shift and go to state 9
    IF              shift and go to state 54
    PRINT           shift and go to state 56
    READ            shift and go to state 57
    RETURN          shift and go to state 60
    FOR             shift and go to state 68
    WHILE           shift and go to state 69
    MEAN            shift and go to state 71
    MEDIAN          shift and go to state 72
    MODE            shift and go to state 73
    VARIANCE        shift and go to state 74
    STDEV           shift and go to state 75
    LPAREN          shift and go to state 55
    LBRACKET        shift and go to state 53
    PLUS            shift and go to state 78
    MINUS           shift and go to state 80
    CTEI            shift and go to state 81
    CTEF            shift and go to state 82
    CTEC            shift and go to state 83
    TRUE            shift and go to state 84
    FALSE           shift and go to state 85

    assignment                     shift and go to state 42
    statements1                    shift and go to state 93
    statements                     shift and go to state 94
    epsilon                        shift and go to state 95
    vars                           shift and go to state 43
    condition                      shift and go to state 44
    writing                        shift and go to state 45
    reading                        shift and go to state 46
    repetition                     shift and go to state 47
    return                         shift and go to state 48
    function_call                  shift and go to state 49
    expression                     shift and go to state 50
    special_functions              shift and go to state 51
    non_conditional_loop           shift and go to state 58
    conditional_loop               shift and go to state 59
    exp                            shift and go to state 61
    expression1                    shift and go to state 62
    mean                           shift and go to state 63
    median                         shift and go to state 64
    mode                           shift and go to state 65
    variance                       shift and go to state 66
    standard_deviation             shift and go to state 67
    term                           shift and go to state 70
    factor                         shift and go to state 76
    factor_prima_1                 shift and go to state 77
    varcte                         shift and go to state 79

state 43

    (23) statements -> vars . statements1
    (37) statements1 -> . statements
    (38) statements1 -> . epsilon
    (22) statements -> . assignment statements1
    (23) statements -> . vars statements1
    (24) statements -> . condition statements1
    (25) statements -> . writing statements1
    (26) statements -> . reading statements1
    (27) statements -> . repetition statements1
    (28) statements -> . return statements1
    (29) statements -> . function_call statements1
    (30) statements -> . expression statements1
    (31) statements -> . special_functions statements1
    (100) epsilon -> .
    (39) assignment -> . ID EQUALS expression SEMI
    (40) assignment -> . ID LBRACKET expression RBRACKET EQUALS expression SEMI
    (5) vars -> . LET vars_prima_1
    (41) condition -> . IF LPAREN expression RPAREN block
    (42) condition -> . IF LPAREN expression RPAREN block ELSE block
    (74) writing -> . PRINT LPAREN writing_1 RPAREN SEMI
    (79) reading -> . READ LPAREN reading_1 RPAREN SEMI
    (84) repetition -> . non_conditional_loop
    (85) repetition -> . conditional_loop
    (88) return -> . RETURN expression SEMI
    (89) function_call -> . ID LPAREN RPAREN SEMI
    (90) function_call -> . ID LPAREN function_call_1 RPAREN SEMI
    (91) function_call -> . ID LPAREN function_call_1 RPAREN
    (92) function_call -> . ID LPAREN RPAREN
    (43) expression -> . exp
    (44) expression -> . expression1
    (32) special_functions -> . mean
    (33) special_functions -> . median
    (34) special_functions -> . mode
    (35) special_functions -> . variance
    (36) special_functions -> . standard_deviation
    (87) non_conditional_loop -> . FOR LPAREN ID EQUALS expression TO expression BY expression RPAREN block
    (86) conditional_loop -> . WHILE LPAREN expression RPAREN DO block
    (53) exp -> . term
    (54) exp -> . term exp_1
    (45) expression1 -> . exp LT exp
    (46) expression1 -> . exp LE exp
    (47) expression1 -> . exp GT exp
    (48) expression1 -> . exp GE exp
    (49) expression1 -> . exp EQ exp
    (50) expression1 -> . exp NE exp
    (51) expression1 -> . exp AND exp
    (52) expression1 -> . exp OR exp
    (95) mean -> . MEAN LPAREN expression RPAREN SEMI
    (96) median -> . MEDIAN LPAREN expression RPAREN SEMI
    (97) mode -> . MODE LPAREN expression RPAREN SEMI
    (98) variance -> . VARIANCE LPAREN expression RPAREN SEMI
    (99) standard_deviation -> . STDEV LPAREN expression RPAREN SEMI
    (57) term -> . factor
    (58) term -> . factor term_2
    (61) factor -> . LPAREN expression RPAREN
    (62) factor -> . LBRACKET expression RBRACKET
    (63) factor -> . function_call
    (64) factor -> . factor_prima_1
    (65) factor_prima_1 -> . PLUS varcte
    (66) factor_prima_1 -> . MINUS varcte
    (67) factor_prima_1 -> . varcte
    (68) varcte -> . ID
    (69) varcte -> . CTEI
    (70) varcte -> . CTEF
    (71) varcte -> . CTEC
    (72) varcte -> . TRUE
    (73) varcte -> . FALSE

    RBRACE          reduce using rule 100 (epsilon -> .)
    ID              shift and go to state 52
    LET             shift and go to state 9
    IF              shift and go to state 54
    PRINT           shift and go to state 56
    READ            shift and go to state 57
    RETURN          shift and go to state 60
    FOR             shift and go to state 68
    WHILE           shift and go to state 69
    MEAN            shift and go to state 71
    MEDIAN          shift and go to state 72
    MODE            shift and go to state 73
    VARIANCE        shift and go to state 74
    STDEV           shift and go to state 75
    LPAREN          shift and go to state 55
    LBRACKET        shift and go to state 53
    PLUS            shift and go to state 78
    MINUS           shift and go to state 80
    CTEI            shift and go to state 81
    CTEF            shift and go to state 82
    CTEC            shift and go to state 83
    TRUE            shift and go to state 84
    FALSE           shift and go to state 85

    vars                           shift and go to state 43
    statements1                    shift and go to state 96
    statements                     shift and go to state 94
    epsilon                        shift and go to state 95
    assignment                     shift and go to state 42
    condition                      shift and go to state 44
    writing                        shift and go to state 45
    reading                        shift and go to state 46
    repetition                     shift and go to state 47
    return                         shift and go to state 48
    function_call                  shift and go to state 49
    expression                     shift and go to state 50
    special_functions              shift and go to state 51
    non_conditional_loop           shift and go to state 58
    conditional_loop               shift and go to state 59
    exp                            shift and go to state 61
    expression1                    shift and go to state 62
    mean                           shift and go to state 63
    median                         shift and go to state 64
    mode                           shift and go to state 65
    variance                       shift and go to state 66
    standard_deviation             shift and go to state 67
    term                           shift and go to state 70
    factor                         shift and go to state 76
    factor_prima_1                 shift and go to state 77
    varcte                         shift and go to state 79

state 44

    (24) statements -> condition . statements1
    (37) statements1 -> . statements
    (38) statements1 -> . epsilon
    (22) statements -> . assignment statements1
    (23) statements -> . vars statements1
    (24) statements -> . condition statements1
    (25) statements -> . writing statements1
    (26) statements -> . reading statements1
    (27) statements -> . repetition statements1
    (28) statements -> . return statements1
    (29) statements -> . function_call statements1
    (30) statements -> . expression statements1
    (31) statements -> . special_functions statements1
    (100) epsilon -> .
    (39) assignment -> . ID EQUALS expression SEMI
    (40) assignment -> . ID LBRACKET expression RBRACKET EQUALS expression SEMI
    (5) vars -> . LET vars_prima_1
    (41) condition -> . IF LPAREN expression RPAREN block
    (42) condition -> . IF LPAREN expression RPAREN block ELSE block
    (74) writing -> . PRINT LPAREN writing_1 RPAREN SEMI
    (79) reading -> . READ LPAREN reading_1 RPAREN SEMI
    (84) repetition -> . non_conditional_loop
    (85) repetition -> . conditional_loop
    (88) return -> . RETURN expression SEMI
    (89) function_call -> . ID LPAREN RPAREN SEMI
    (90) function_call -> . ID LPAREN function_call_1 RPAREN SEMI
    (91) function_call -> . ID LPAREN function_call_1 RPAREN
    (92) function_call -> . ID LPAREN RPAREN
    (43) expression -> . exp
    (44) expression -> . expression1
    (32) special_functions -> . mean
    (33) special_functions -> . median
    (34) special_functions -> . mode
    (35) special_functions -> . variance
    (36) special_functions -> . standard_deviation
    (87) non_conditional_loop -> . FOR LPAREN ID EQUALS expression TO expression BY expression RPAREN block
    (86) conditional_loop -> . WHILE LPAREN expression RPAREN DO block
    (53) exp -> . term
    (54) exp -> . term exp_1
    (45) expression1 -> . exp LT exp
    (46) expression1 -> . exp LE exp
    (47) expression1 -> . exp GT exp
    (48) expression1 -> . exp GE exp
    (49) expression1 -> . exp EQ exp
    (50) expression1 -> . exp NE exp
    (51) expression1 -> . exp AND exp
    (52) expression1 -> . exp OR exp
    (95) mean -> . MEAN LPAREN expression RPAREN SEMI
    (96) median -> . MEDIAN LPAREN expression RPAREN SEMI
    (97) mode -> . MODE LPAREN expression RPAREN SEMI
    (98) variance -> . VARIANCE LPAREN expression RPAREN SEMI
    (99) standard_deviation -> . STDEV LPAREN expression RPAREN SEMI
    (57) term -> . factor
    (58) term -> . factor term_2
    (61) factor -> . LPAREN expression RPAREN
    (62) factor -> . LBRACKET expression RBRACKET
    (63) factor -> . function_call
    (64) factor -> . factor_prima_1
    (65) factor_prima_1 -> . PLUS varcte
    (66) factor_prima_1 -> . MINUS varcte
    (67) factor_prima_1 -> . varcte
    (68) varcte -> . ID
    (69) varcte -> . CTEI
    (70) varcte -> . CTEF
    (71) varcte -> . CTEC
    (72) varcte -> . TRUE
    (73) varcte -> . FALSE

    RBRACE          reduce using rule 100 (epsilon -> .)
    ID              shift and go to state 52
    LET             shift and go to state 9
    IF              shift and go to state 54
    PRINT           shift and go to state 56
    READ            shift and go to state 57
    RETURN          shift and go to state 60
    FOR             shift and go to state 68
    WHILE           shift and go to state 69
    MEAN            shift and go to state 71
    MEDIAN          shift and go to state 72
    MODE            shift and go to state 73
    VARIANCE        shift and go to state 74
    STDEV           shift and go to state 75
    LPAREN          shift and go to state 55
    LBRACKET        shift and go to state 53
    PLUS            shift and go to state 78
    MINUS           shift and go to state 80
    CTEI            shift and go to state 81
    CTEF            shift and go to state 82
    CTEC            shift and go to state 83
    TRUE            shift and go to state 84
    FALSE           shift and go to state 85

    condition                      shift and go to state 44
    statements1                    shift and go to state 97
    statements                     shift and go to state 94
    epsilon                        shift and go to state 95
    assignment                     shift and go to state 42
    vars                           shift and go to state 43
    writing                        shift and go to state 45
    reading                        shift and go to state 46
    repetition                     shift and go to state 47
    return                         shift and go to state 48
    function_call                  shift and go to state 49
    expression                     shift and go to state 50
    special_functions              shift and go to state 51
    non_conditional_loop           shift and go to state 58
    conditional_loop               shift and go to state 59
    exp                            shift and go to state 61
    expression1                    shift and go to state 62
    mean                           shift and go to state 63
    median                         shift and go to state 64
    mode                           shift and go to state 65
    variance                       shift and go to state 66
    standard_deviation             shift and go to state 67
    term                           shift and go to state 70
    factor                         shift and go to state 76
    factor_prima_1                 shift and go to state 77
    varcte                         shift and go to state 79

state 45

    (25) statements -> writing . statements1
    (37) statements1 -> . statements
    (38) statements1 -> . epsilon
    (22) statements -> . assignment statements1
    (23) statements -> . vars statements1
    (24) statements -> . condition statements1
    (25) statements -> . writing statements1
    (26) statements -> . reading statements1
    (27) statements -> . repetition statements1
    (28) statements -> . return statements1
    (29) statements -> . function_call statements1
    (30) statements -> . expression statements1
    (31) statements -> . special_functions statements1
    (100) epsilon -> .
    (39) assignment -> . ID EQUALS expression SEMI
    (40) assignment -> . ID LBRACKET expression RBRACKET EQUALS expression SEMI
    (5) vars -> . LET vars_prima_1
    (41) condition -> . IF LPAREN expression RPAREN block
    (42) condition -> . IF LPAREN expression RPAREN block ELSE block
    (74) writing -> . PRINT LPAREN writing_1 RPAREN SEMI
    (79) reading -> . READ LPAREN reading_1 RPAREN SEMI
    (84) repetition -> . non_conditional_loop
    (85) repetition -> . conditional_loop
    (88) return -> . RETURN expression SEMI
    (89) function_call -> . ID LPAREN RPAREN SEMI
    (90) function_call -> . ID LPAREN function_call_1 RPAREN SEMI
    (91) function_call -> . ID LPAREN function_call_1 RPAREN
    (92) function_call -> . ID LPAREN RPAREN
    (43) expression -> . exp
    (44) expression -> . expression1
    (32) special_functions -> . mean
    (33) special_functions -> . median
    (34) special_functions -> . mode
    (35) special_functions -> . variance
    (36) special_functions -> . standard_deviation
    (87) non_conditional_loop -> . FOR LPAREN ID EQUALS expression TO expression BY expression RPAREN block
    (86) conditional_loop -> . WHILE LPAREN expression RPAREN DO block
    (53) exp -> . term
    (54) exp -> . term exp_1
    (45) expression1 -> . exp LT exp
    (46) expression1 -> . exp LE exp
    (47) expression1 -> . exp GT exp
    (48) expression1 -> . exp GE exp
    (49) expression1 -> . exp EQ exp
    (50) expression1 -> . exp NE exp
    (51) expression1 -> . exp AND exp
    (52) expression1 -> . exp OR exp
    (95) mean -> . MEAN LPAREN expression RPAREN SEMI
    (96) median -> . MEDIAN LPAREN expression RPAREN SEMI
    (97) mode -> . MODE LPAREN expression RPAREN SEMI
    (98) variance -> . VARIANCE LPAREN expression RPAREN SEMI
    (99) standard_deviation -> . STDEV LPAREN expression RPAREN SEMI
    (57) term -> . factor
    (58) term -> . factor term_2
    (61) factor -> . LPAREN expression RPAREN
    (62) factor -> . LBRACKET expression RBRACKET
    (63) factor -> . function_call
    (64) factor -> . factor_prima_1
    (65) factor_prima_1 -> . PLUS varcte
    (66) factor_prima_1 -> . MINUS varcte
    (67) factor_prima_1 -> . varcte
    (68) varcte -> . ID
    (69) varcte -> . CTEI
    (70) varcte -> . CTEF
    (71) varcte -> . CTEC
    (72) varcte -> . TRUE
    (73) varcte -> . FALSE

    RBRACE          reduce using rule 100 (epsilon -> .)
    ID              shift and go to state 52
    LET             shift and go to state 9
    IF              shift and go to state 54
    PRINT           shift and go to state 56
    READ            shift and go to state 57
    RETURN          shift and go to state 60
    FOR             shift and go to state 68
    WHILE           shift and go to state 69
    MEAN            shift and go to state 71
    MEDIAN          shift and go to state 72
    MODE            shift and go to state 73
    VARIANCE        shift and go to state 74
    STDEV           shift and go to state 75
    LPAREN          shift and go to state 55
    LBRACKET        shift and go to state 53
    PLUS            shift and go to state 78
    MINUS           shift and go to state 80
    CTEI            shift and go to state 81
    CTEF            shift and go to state 82
    CTEC            shift and go to state 83
    TRUE            shift and go to state 84
    FALSE           shift and go to state 85

    writing                        shift and go to state 45
    statements1                    shift and go to state 98
    statements                     shift and go to state 94
    epsilon                        shift and go to state 95
    assignment                     shift and go to state 42
    vars                           shift and go to state 43
    condition                      shift and go to state 44
    reading                        shift and go to state 46
    repetition                     shift and go to state 47
    return                         shift and go to state 48
    function_call                  shift and go to state 49
    expression                     shift and go to state 50
    special_functions              shift and go to state 51
    non_conditional_loop           shift and go to state 58
    conditional_loop               shift and go to state 59
    exp                            shift and go to state 61
    expression1                    shift and go to state 62
    mean                           shift and go to state 63
    median                         shift and go to state 64
    mode                           shift and go to state 65
    variance                       shift and go to state 66
    standard_deviation             shift and go to state 67
    term                           shift and go to state 70
    factor                         shift and go to state 76
    factor_prima_1                 shift and go to state 77
    varcte                         shift and go to state 79

state 46

    (26) statements -> reading . statements1
    (37) statements1 -> . statements
    (38) statements1 -> . epsilon
    (22) statements -> . assignment statements1
    (23) statements -> . vars statements1
    (24) statements -> . condition statements1
    (25) statements -> . writing statements1
    (26) statements -> . reading statements1
    (27) statements -> . repetition statements1
    (28) statements -> . return statements1
    (29) statements -> . function_call statements1
    (30) statements -> . expression statements1
    (31) statements -> . special_functions statements1
    (100) epsilon -> .
    (39) assignment -> . ID EQUALS expression SEMI
    (40) assignment -> . ID LBRACKET expression RBRACKET EQUALS expression SEMI
    (5) vars -> . LET vars_prima_1
    (41) condition -> . IF LPAREN expression RPAREN block
    (42) condition -> . IF LPAREN expression RPAREN block ELSE block
    (74) writing -> . PRINT LPAREN writing_1 RPAREN SEMI
    (79) reading -> . READ LPAREN reading_1 RPAREN SEMI
    (84) repetition -> . non_conditional_loop
    (85) repetition -> . conditional_loop
    (88) return -> . RETURN expression SEMI
    (89) function_call -> . ID LPAREN RPAREN SEMI
    (90) function_call -> . ID LPAREN function_call_1 RPAREN SEMI
    (91) function_call -> . ID LPAREN function_call_1 RPAREN
    (92) function_call -> . ID LPAREN RPAREN
    (43) expression -> . exp
    (44) expression -> . expression1
    (32) special_functions -> . mean
    (33) special_functions -> . median
    (34) special_functions -> . mode
    (35) special_functions -> . variance
    (36) special_functions -> . standard_deviation
    (87) non_conditional_loop -> . FOR LPAREN ID EQUALS expression TO expression BY expression RPAREN block
    (86) conditional_loop -> . WHILE LPAREN expression RPAREN DO block
    (53) exp -> . term
    (54) exp -> . term exp_1
    (45) expression1 -> . exp LT exp
    (46) expression1 -> . exp LE exp
    (47) expression1 -> . exp GT exp
    (48) expression1 -> . exp GE exp
    (49) expression1 -> . exp EQ exp
    (50) expression1 -> . exp NE exp
    (51) expression1 -> . exp AND exp
    (52) expression1 -> . exp OR exp
    (95) mean -> . MEAN LPAREN expression RPAREN SEMI
    (96) median -> . MEDIAN LPAREN expression RPAREN SEMI
    (97) mode -> . MODE LPAREN expression RPAREN SEMI
    (98) variance -> . VARIANCE LPAREN expression RPAREN SEMI
    (99) standard_deviation -> . STDEV LPAREN expression RPAREN SEMI
    (57) term -> . factor
    (58) term -> . factor term_2
    (61) factor -> . LPAREN expression RPAREN
    (62) factor -> . LBRACKET expression RBRACKET
    (63) factor -> . function_call
    (64) factor -> . factor_prima_1
    (65) factor_prima_1 -> . PLUS varcte
    (66) factor_prima_1 -> . MINUS varcte
    (67) factor_prima_1 -> . varcte
    (68) varcte -> . ID
    (69) varcte -> . CTEI
    (70) varcte -> . CTEF
    (71) varcte -> . CTEC
    (72) varcte -> . TRUE
    (73) varcte -> . FALSE

    RBRACE          reduce using rule 100 (epsilon -> .)
    ID              shift and go to state 52
    LET             shift and go to state 9
    IF              shift and go to state 54
    PRINT           shift and go to state 56
    READ            shift and go to state 57
    RETURN          shift and go to state 60
    FOR             shift and go to state 68
    WHILE           shift and go to state 69
    MEAN            shift and go to state 71
    MEDIAN          shift and go to state 72
    MODE            shift and go to state 73
    VARIANCE        shift and go to state 74
    STDEV           shift and go to state 75
    LPAREN          shift and go to state 55
    LBRACKET        shift and go to state 53
    PLUS            shift and go to state 78
    MINUS           shift and go to state 80
    CTEI            shift and go to state 81
    CTEF            shift and go to state 82
    CTEC            shift and go to state 83
    TRUE            shift and go to state 84
    FALSE           shift and go to state 85

    reading                        shift and go to state 46
    statements1                    shift and go to state 99
    statements                     shift and go to state 94
    epsilon                        shift and go to state 95
    assignment                     shift and go to state 42
    vars                           shift and go to state 43
    condition                      shift and go to state 44
    writing                        shift and go to state 45
    repetition                     shift and go to state 47
    return                         shift and go to state 48
    function_call                  shift and go to state 49
    expression                     shift and go to state 50
    special_functions              shift and go to state 51
    non_conditional_loop           shift and go to state 58
    conditional_loop               shift and go to state 59
    exp                            shift and go to state 61
    expression1                    shift and go to state 62
    mean                           shift and go to state 63
    median                         shift and go to state 64
    mode                           shift and go to state 65
    variance                       shift and go to state 66
    standard_deviation             shift and go to state 67
    term                           shift and go to state 70
    factor                         shift and go to state 76
    factor_prima_1                 shift and go to state 77
    varcte                         shift and go to state 79

state 47

    (27) statements -> repetition . statements1
    (37) statements1 -> . statements
    (38) statements1 -> . epsilon
    (22) statements -> . assignment statements1
    (23) statements -> . vars statements1
    (24) statements -> . condition statements1
    (25) statements -> . writing statements1
    (26) statements -> . reading statements1
    (27) statements -> . repetition statements1
    (28) statements -> . return statements1
    (29) statements -> . function_call statements1
    (30) statements -> . expression statements1
    (31) statements -> . special_functions statements1
    (100) epsilon -> .
    (39) assignment -> . ID EQUALS expression SEMI
    (40) assignment -> . ID LBRACKET expression RBRACKET EQUALS expression SEMI
    (5) vars -> . LET vars_prima_1
    (41) condition -> . IF LPAREN expression RPAREN block
    (42) condition -> . IF LPAREN expression RPAREN block ELSE block
    (74) writing -> . PRINT LPAREN writing_1 RPAREN SEMI
    (79) reading -> . READ LPAREN reading_1 RPAREN SEMI
    (84) repetition -> . non_conditional_loop
    (85) repetition -> . conditional_loop
    (88) return -> . RETURN expression SEMI
    (89) function_call -> . ID LPAREN RPAREN SEMI
    (90) function_call -> . ID LPAREN function_call_1 RPAREN SEMI
    (91) function_call -> . ID LPAREN function_call_1 RPAREN
    (92) function_call -> . ID LPAREN RPAREN
    (43) expression -> . exp
    (44) expression -> . expression1
    (32) special_functions -> . mean
    (33) special_functions -> . median
    (34) special_functions -> . mode
    (35) special_functions -> . variance
    (36) special_functions -> . standard_deviation
    (87) non_conditional_loop -> . FOR LPAREN ID EQUALS expression TO expression BY expression RPAREN block
    (86) conditional_loop -> . WHILE LPAREN expression RPAREN DO block
    (53) exp -> . term
    (54) exp -> . term exp_1
    (45) expression1 -> . exp LT exp
    (46) expression1 -> . exp LE exp
    (47) expression1 -> . exp GT exp
    (48) expression1 -> . exp GE exp
    (49) expression1 -> . exp EQ exp
    (50) expression1 -> . exp NE exp
    (51) expression1 -> . exp AND exp
    (52) expression1 -> . exp OR exp
    (95) mean -> . MEAN LPAREN expression RPAREN SEMI
    (96) median -> . MEDIAN LPAREN expression RPAREN SEMI
    (97) mode -> . MODE LPAREN expression RPAREN SEMI
    (98) variance -> . VARIANCE LPAREN expression RPAREN SEMI
    (99) standard_deviation -> . STDEV LPAREN expression RPAREN SEMI
    (57) term -> . factor
    (58) term -> . factor term_2
    (61) factor -> . LPAREN expression RPAREN
    (62) factor -> . LBRACKET expression RBRACKET
    (63) factor -> . function_call
    (64) factor -> . factor_prima_1
    (65) factor_prima_1 -> . PLUS varcte
    (66) factor_prima_1 -> . MINUS varcte
    (67) factor_prima_1 -> . varcte
    (68) varcte -> . ID
    (69) varcte -> . CTEI
    (70) varcte -> . CTEF
    (71) varcte -> . CTEC
    (72) varcte -> . TRUE
    (73) varcte -> . FALSE

    RBRACE          reduce using rule 100 (epsilon -> .)
    ID              shift and go to state 52
    LET             shift and go to state 9
    IF              shift and go to state 54
    PRINT           shift and go to state 56
    READ            shift and go to state 57
    RETURN          shift and go to state 60
    FOR             shift and go to state 68
    WHILE           shift and go to state 69
    MEAN            shift and go to state 71
    MEDIAN          shift and go to state 72
    MODE            shift and go to state 73
    VARIANCE        shift and go to state 74
    STDEV           shift and go to state 75
    LPAREN          shift and go to state 55
    LBRACKET        shift and go to state 53
    PLUS            shift and go to state 78
    MINUS           shift and go to state 80
    CTEI            shift and go to state 81
    CTEF            shift and go to state 82
    CTEC            shift and go to state 83
    TRUE            shift and go to state 84
    FALSE           shift and go to state 85

    repetition                     shift and go to state 47
    statements1                    shift and go to state 100
    statements                     shift and go to state 94
    epsilon                        shift and go to state 95
    assignment                     shift and go to state 42
    vars                           shift and go to state 43
    condition                      shift and go to state 44
    writing                        shift and go to state 45
    reading                        shift and go to state 46
    return                         shift and go to state 48
    function_call                  shift and go to state 49
    expression                     shift and go to state 50
    special_functions              shift and go to state 51
    non_conditional_loop           shift and go to state 58
    conditional_loop               shift and go to state 59
    exp                            shift and go to state 61
    expression1                    shift and go to state 62
    mean                           shift and go to state 63
    median                         shift and go to state 64
    mode                           shift and go to state 65
    variance                       shift and go to state 66
    standard_deviation             shift and go to state 67
    term                           shift and go to state 70
    factor                         shift and go to state 76
    factor_prima_1                 shift and go to state 77
    varcte                         shift and go to state 79

state 48

    (28) statements -> return . statements1
    (37) statements1 -> . statements
    (38) statements1 -> . epsilon
    (22) statements -> . assignment statements1
    (23) statements -> . vars statements1
    (24) statements -> . condition statements1
    (25) statements -> . writing statements1
    (26) statements -> . reading statements1
    (27) statements -> . repetition statements1
    (28) statements -> . return statements1
    (29) statements -> . function_call statements1
    (30) statements -> . expression statements1
    (31) statements -> . special_functions statements1
    (100) epsilon -> .
    (39) assignment -> . ID EQUALS expression SEMI
    (40) assignment -> . ID LBRACKET expression RBRACKET EQUALS expression SEMI
    (5) vars -> . LET vars_prima_1
    (41) condition -> . IF LPAREN expression RPAREN block
    (42) condition -> . IF LPAREN expression RPAREN block ELSE block
    (74) writing -> . PRINT LPAREN writing_1 RPAREN SEMI
    (79) reading -> . READ LPAREN reading_1 RPAREN SEMI
    (84) repetition -> . non_conditional_loop
    (85) repetition -> . conditional_loop
    (88) return -> . RETURN expression SEMI
    (89) function_call -> . ID LPAREN RPAREN SEMI
    (90) function_call -> . ID LPAREN function_call_1 RPAREN SEMI
    (91) function_call -> . ID LPAREN function_call_1 RPAREN
    (92) function_call -> . ID LPAREN RPAREN
    (43) expression -> . exp
    (44) expression -> . expression1
    (32) special_functions -> . mean
    (33) special_functions -> . median
    (34) special_functions -> . mode
    (35) special_functions -> . variance
    (36) special_functions -> . standard_deviation
    (87) non_conditional_loop -> . FOR LPAREN ID EQUALS expression TO expression BY expression RPAREN block
    (86) conditional_loop -> . WHILE LPAREN expression RPAREN DO block
    (53) exp -> . term
    (54) exp -> . term exp_1
    (45) expression1 -> . exp LT exp
    (46) expression1 -> . exp LE exp
    (47) expression1 -> . exp GT exp
    (48) expression1 -> . exp GE exp
    (49) expression1 -> . exp EQ exp
    (50) expression1 -> . exp NE exp
    (51) expression1 -> . exp AND exp
    (52) expression1 -> . exp OR exp
    (95) mean -> . MEAN LPAREN expression RPAREN SEMI
    (96) median -> . MEDIAN LPAREN expression RPAREN SEMI
    (97) mode -> . MODE LPAREN expression RPAREN SEMI
    (98) variance -> . VARIANCE LPAREN expression RPAREN SEMI
    (99) standard_deviation -> . STDEV LPAREN expression RPAREN SEMI
    (57) term -> . factor
    (58) term -> . factor term_2
    (61) factor -> . LPAREN expression RPAREN
    (62) factor -> . LBRACKET expression RBRACKET
    (63) factor -> . function_call
    (64) factor -> . factor_prima_1
    (65) factor_prima_1 -> . PLUS varcte
    (66) factor_prima_1 -> . MINUS varcte
    (67) factor_prima_1 -> . varcte
    (68) varcte -> . ID
    (69) varcte -> . CTEI
    (70) varcte -> . CTEF
    (71) varcte -> . CTEC
    (72) varcte -> . TRUE
    (73) varcte -> . FALSE

    RBRACE          reduce using rule 100 (epsilon -> .)
    ID              shift and go to state 52
    LET             shift and go to state 9
    IF              shift and go to state 54
    PRINT           shift and go to state 56
    READ            shift and go to state 57
    RETURN          shift and go to state 60
    FOR             shift and go to state 68
    WHILE           shift and go to state 69
    MEAN            shift and go to state 71
    MEDIAN          shift and go to state 72
    MODE            shift and go to state 73
    VARIANCE        shift and go to state 74
    STDEV           shift and go to state 75
    LPAREN          shift and go to state 55
    LBRACKET        shift and go to state 53
    PLUS            shift and go to state 78
    MINUS           shift and go to state 80
    CTEI            shift and go to state 81
    CTEF            shift and go to state 82
    CTEC            shift and go to state 83
    TRUE            shift and go to state 84
    FALSE           shift and go to state 85

    return                         shift and go to state 48
    statements1                    shift and go to state 101
    statements                     shift and go to state 94
    epsilon                        shift and go to state 95
    assignment                     shift and go to state 42
    vars                           shift and go to state 43
    condition                      shift and go to state 44
    writing                        shift and go to state 45
    reading                        shift and go to state 46
    repetition                     shift and go to state 47
    function_call                  shift and go to state 49
    expression                     shift and go to state 50
    special_functions              shift and go to state 51
    non_conditional_loop           shift and go to state 58
    conditional_loop               shift and go to state 59
    exp                            shift and go to state 61
    expression1                    shift and go to state 62
    mean                           shift and go to state 63
    median                         shift and go to state 64
    mode                           shift and go to state 65
    variance                       shift and go to state 66
    standard_deviation             shift and go to state 67
    term                           shift and go to state 70
    factor                         shift and go to state 76
    factor_prima_1                 shift and go to state 77
    varcte                         shift and go to state 79

state 49

    (29) statements -> function_call . statements1
    (63) factor -> function_call .
    (37) statements1 -> . statements
    (38) statements1 -> . epsilon
    (22) statements -> . assignment statements1
    (23) statements -> . vars statements1
    (24) statements -> . condition statements1
    (25) statements -> . writing statements1
    (26) statements -> . reading statements1
    (27) statements -> . repetition statements1
    (28) statements -> . return statements1
    (29) statements -> . function_call statements1
    (30) statements -> . expression statements1
    (31) statements -> . special_functions statements1
    (100) epsilon -> .
    (39) assignment -> . ID EQUALS expression SEMI
    (40) assignment -> . ID LBRACKET expression RBRACKET EQUALS expression SEMI
    (5) vars -> . LET vars_prima_1
    (41) condition -> . IF LPAREN expression RPAREN block
    (42) condition -> . IF LPAREN expression RPAREN block ELSE block
    (74) writing -> . PRINT LPAREN writing_1 RPAREN SEMI
    (79) reading -> . READ LPAREN reading_1 RPAREN SEMI
    (84) repetition -> . non_conditional_loop
    (85) repetition -> . conditional_loop
    (88) return -> . RETURN expression SEMI
    (89) function_call -> . ID LPAREN RPAREN SEMI
    (90) function_call -> . ID LPAREN function_call_1 RPAREN SEMI
    (91) function_call -> . ID LPAREN function_call_1 RPAREN
    (92) function_call -> . ID LPAREN RPAREN
    (43) expression -> . exp
    (44) expression -> . expression1
    (32) special_functions -> . mean
    (33) special_functions -> . median
    (34) special_functions -> . mode
    (35) special_functions -> . variance
    (36) special_functions -> . standard_deviation
    (87) non_conditional_loop -> . FOR LPAREN ID EQUALS expression TO expression BY expression RPAREN block
    (86) conditional_loop -> . WHILE LPAREN expression RPAREN DO block
    (53) exp -> . term
    (54) exp -> . term exp_1
    (45) expression1 -> . exp LT exp
    (46) expression1 -> . exp LE exp
    (47) expression1 -> . exp GT exp
    (48) expression1 -> . exp GE exp
    (49) expression1 -> . exp EQ exp
    (50) expression1 -> . exp NE exp
    (51) expression1 -> . exp AND exp
    (52) expression1 -> . exp OR exp
    (95) mean -> . MEAN LPAREN expression RPAREN SEMI
    (96) median -> . MEDIAN LPAREN expression RPAREN SEMI
    (97) mode -> . MODE LPAREN expression RPAREN SEMI
    (98) variance -> . VARIANCE LPAREN expression RPAREN SEMI
    (99) standard_deviation -> . STDEV LPAREN expression RPAREN SEMI
    (57) term -> . factor
    (58) term -> . factor term_2
    (61) factor -> . LPAREN expression RPAREN
    (62) factor -> . LBRACKET expression RBRACKET
    (63) factor -> . function_call
    (64) factor -> . factor_prima_1
    (65) factor_prima_1 -> . PLUS varcte
    (66) factor_prima_1 -> . MINUS varcte
    (67) factor_prima_1 -> . varcte
    (68) varcte -> . ID
    (69) varcte -> . CTEI
    (70) varcte -> . CTEF
    (71) varcte -> . CTEC
    (72) varcte -> . TRUE
    (73) varcte -> . FALSE

  ! reduce/reduce conflict for RBRACE resolved using rule 63 (factor -> function_call .)
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for LET resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for MEAN resolved as shift
  ! shift/reduce conflict for MEDIAN resolved as shift
  ! shift/reduce conflict for MODE resolved as shift
  ! shift/reduce conflict for VARIANCE resolved as shift
  ! shift/reduce conflict for STDEV resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for CTEI resolved as shift
  ! shift/reduce conflict for CTEF resolved as shift
  ! shift/reduce conflict for CTEC resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    TIMES           reduce using rule 63 (factor -> function_call .)
    DIVIDE          reduce using rule 63 (factor -> function_call .)
    LT              reduce using rule 63 (factor -> function_call .)
    LE              reduce using rule 63 (factor -> function_call .)
    GT              reduce using rule 63 (factor -> function_call .)
    GE              reduce using rule 63 (factor -> function_call .)
    EQ              reduce using rule 63 (factor -> function_call .)
    NE              reduce using rule 63 (factor -> function_call .)
    AND             reduce using rule 63 (factor -> function_call .)
    OR              reduce using rule 63 (factor -> function_call .)
    RBRACE          reduce using rule 63 (factor -> function_call .)
    ID              shift and go to state 52
    LET             shift and go to state 9
    IF              shift and go to state 54
    PRINT           shift and go to state 56
    READ            shift and go to state 57
    RETURN          shift and go to state 60
    FOR             shift and go to state 68
    WHILE           shift and go to state 69
    MEAN            shift and go to state 71
    MEDIAN          shift and go to state 72
    MODE            shift and go to state 73
    VARIANCE        shift and go to state 74
    STDEV           shift and go to state 75
    LPAREN          shift and go to state 55
    LBRACKET        shift and go to state 53
    PLUS            shift and go to state 78
    MINUS           shift and go to state 80
    CTEI            shift and go to state 81
    CTEF            shift and go to state 82
    CTEC            shift and go to state 83
    TRUE            shift and go to state 84
    FALSE           shift and go to state 85

  ! PLUS            [ reduce using rule 63 (factor -> function_call .) ]
  ! MINUS           [ reduce using rule 63 (factor -> function_call .) ]
  ! ID              [ reduce using rule 63 (factor -> function_call .) ]
  ! LET             [ reduce using rule 63 (factor -> function_call .) ]
  ! IF              [ reduce using rule 63 (factor -> function_call .) ]
  ! PRINT           [ reduce using rule 63 (factor -> function_call .) ]
  ! READ            [ reduce using rule 63 (factor -> function_call .) ]
  ! RETURN          [ reduce using rule 63 (factor -> function_call .) ]
  ! FOR             [ reduce using rule 63 (factor -> function_call .) ]
  ! WHILE           [ reduce using rule 63 (factor -> function_call .) ]
  ! MEAN            [ reduce using rule 63 (factor -> function_call .) ]
  ! MEDIAN          [ reduce using rule 63 (factor -> function_call .) ]
  ! MODE            [ reduce using rule 63 (factor -> function_call .) ]
  ! VARIANCE        [ reduce using rule 63 (factor -> function_call .) ]
  ! STDEV           [ reduce using rule 63 (factor -> function_call .) ]
  ! LPAREN          [ reduce using rule 63 (factor -> function_call .) ]
  ! LBRACKET        [ reduce using rule 63 (factor -> function_call .) ]
  ! CTEI            [ reduce using rule 63 (factor -> function_call .) ]
  ! CTEF            [ reduce using rule 63 (factor -> function_call .) ]
  ! CTEC            [ reduce using rule 63 (factor -> function_call .) ]
  ! TRUE            [ reduce using rule 63 (factor -> function_call .) ]
  ! FALSE           [ reduce using rule 63 (factor -> function_call .) ]
  ! RBRACE          [ reduce using rule 100 (epsilon -> .) ]

    function_call                  shift and go to state 49
    statements1                    shift and go to state 102
    statements                     shift and go to state 94
    epsilon                        shift and go to state 95
    assignment                     shift and go to state 42
    vars                           shift and go to state 43
    condition                      shift and go to state 44
    writing                        shift and go to state 45
    reading                        shift and go to state 46
    repetition                     shift and go to state 47
    return                         shift and go to state 48
    expression                     shift and go to state 50
    special_functions              shift and go to state 51
    non_conditional_loop           shift and go to state 58
    conditional_loop               shift and go to state 59
    exp                            shift and go to state 61
    expression1                    shift and go to state 62
    mean                           shift and go to state 63
    median                         shift and go to state 64
    mode                           shift and go to state 65
    variance                       shift and go to state 66
    standard_deviation             shift and go to state 67
    term                           shift and go to state 70
    factor                         shift and go to state 76
    factor_prima_1                 shift and go to state 77
    varcte                         shift and go to state 79

state 50

    (30) statements -> expression . statements1
    (37) statements1 -> . statements
    (38) statements1 -> . epsilon
    (22) statements -> . assignment statements1
    (23) statements -> . vars statements1
    (24) statements -> . condition statements1
    (25) statements -> . writing statements1
    (26) statements -> . reading statements1
    (27) statements -> . repetition statements1
    (28) statements -> . return statements1
    (29) statements -> . function_call statements1
    (30) statements -> . expression statements1
    (31) statements -> . special_functions statements1
    (100) epsilon -> .
    (39) assignment -> . ID EQUALS expression SEMI
    (40) assignment -> . ID LBRACKET expression RBRACKET EQUALS expression SEMI
    (5) vars -> . LET vars_prima_1
    (41) condition -> . IF LPAREN expression RPAREN block
    (42) condition -> . IF LPAREN expression RPAREN block ELSE block
    (74) writing -> . PRINT LPAREN writing_1 RPAREN SEMI
    (79) reading -> . READ LPAREN reading_1 RPAREN SEMI
    (84) repetition -> . non_conditional_loop
    (85) repetition -> . conditional_loop
    (88) return -> . RETURN expression SEMI
    (89) function_call -> . ID LPAREN RPAREN SEMI
    (90) function_call -> . ID LPAREN function_call_1 RPAREN SEMI
    (91) function_call -> . ID LPAREN function_call_1 RPAREN
    (92) function_call -> . ID LPAREN RPAREN
    (43) expression -> . exp
    (44) expression -> . expression1
    (32) special_functions -> . mean
    (33) special_functions -> . median
    (34) special_functions -> . mode
    (35) special_functions -> . variance
    (36) special_functions -> . standard_deviation
    (87) non_conditional_loop -> . FOR LPAREN ID EQUALS expression TO expression BY expression RPAREN block
    (86) conditional_loop -> . WHILE LPAREN expression RPAREN DO block
    (53) exp -> . term
    (54) exp -> . term exp_1
    (45) expression1 -> . exp LT exp
    (46) expression1 -> . exp LE exp
    (47) expression1 -> . exp GT exp
    (48) expression1 -> . exp GE exp
    (49) expression1 -> . exp EQ exp
    (50) expression1 -> . exp NE exp
    (51) expression1 -> . exp AND exp
    (52) expression1 -> . exp OR exp
    (95) mean -> . MEAN LPAREN expression RPAREN SEMI
    (96) median -> . MEDIAN LPAREN expression RPAREN SEMI
    (97) mode -> . MODE LPAREN expression RPAREN SEMI
    (98) variance -> . VARIANCE LPAREN expression RPAREN SEMI
    (99) standard_deviation -> . STDEV LPAREN expression RPAREN SEMI
    (57) term -> . factor
    (58) term -> . factor term_2
    (61) factor -> . LPAREN expression RPAREN
    (62) factor -> . LBRACKET expression RBRACKET
    (63) factor -> . function_call
    (64) factor -> . factor_prima_1
    (65) factor_prima_1 -> . PLUS varcte
    (66) factor_prima_1 -> . MINUS varcte
    (67) factor_prima_1 -> . varcte
    (68) varcte -> . ID
    (69) varcte -> . CTEI
    (70) varcte -> . CTEF
    (71) varcte -> . CTEC
    (72) varcte -> . TRUE
    (73) varcte -> . FALSE

    RBRACE          reduce using rule 100 (epsilon -> .)
    ID              shift and go to state 52
    LET             shift and go to state 9
    IF              shift and go to state 54
    PRINT           shift and go to state 56
    READ            shift and go to state 57
    RETURN          shift and go to state 60
    FOR             shift and go to state 68
    WHILE           shift and go to state 69
    MEAN            shift and go to state 71
    MEDIAN          shift and go to state 72
    MODE            shift and go to state 73
    VARIANCE        shift and go to state 74
    STDEV           shift and go to state 75
    LPAREN          shift and go to state 55
    LBRACKET        shift and go to state 53
    PLUS            shift and go to state 78
    MINUS           shift and go to state 80
    CTEI            shift and go to state 81
    CTEF            shift and go to state 82
    CTEC            shift and go to state 83
    TRUE            shift and go to state 84
    FALSE           shift and go to state 85

    expression                     shift and go to state 50
    statements1                    shift and go to state 103
    statements                     shift and go to state 94
    epsilon                        shift and go to state 95
    assignment                     shift and go to state 42
    vars                           shift and go to state 43
    condition                      shift and go to state 44
    writing                        shift and go to state 45
    reading                        shift and go to state 46
    repetition                     shift and go to state 47
    return                         shift and go to state 48
    function_call                  shift and go to state 49
    special_functions              shift and go to state 51
    non_conditional_loop           shift and go to state 58
    conditional_loop               shift and go to state 59
    exp                            shift and go to state 61
    expression1                    shift and go to state 62
    mean                           shift and go to state 63
    median                         shift and go to state 64
    mode                           shift and go to state 65
    variance                       shift and go to state 66
    standard_deviation             shift and go to state 67
    term                           shift and go to state 70
    factor                         shift and go to state 76
    factor_prima_1                 shift and go to state 77
    varcte                         shift and go to state 79

state 51

    (31) statements -> special_functions . statements1
    (37) statements1 -> . statements
    (38) statements1 -> . epsilon
    (22) statements -> . assignment statements1
    (23) statements -> . vars statements1
    (24) statements -> . condition statements1
    (25) statements -> . writing statements1
    (26) statements -> . reading statements1
    (27) statements -> . repetition statements1
    (28) statements -> . return statements1
    (29) statements -> . function_call statements1
    (30) statements -> . expression statements1
    (31) statements -> . special_functions statements1
    (100) epsilon -> .
    (39) assignment -> . ID EQUALS expression SEMI
    (40) assignment -> . ID LBRACKET expression RBRACKET EQUALS expression SEMI
    (5) vars -> . LET vars_prima_1
    (41) condition -> . IF LPAREN expression RPAREN block
    (42) condition -> . IF LPAREN expression RPAREN block ELSE block
    (74) writing -> . PRINT LPAREN writing_1 RPAREN SEMI
    (79) reading -> . READ LPAREN reading_1 RPAREN SEMI
    (84) repetition -> . non_conditional_loop
    (85) repetition -> . conditional_loop
    (88) return -> . RETURN expression SEMI
    (89) function_call -> . ID LPAREN RPAREN SEMI
    (90) function_call -> . ID LPAREN function_call_1 RPAREN SEMI
    (91) function_call -> . ID LPAREN function_call_1 RPAREN
    (92) function_call -> . ID LPAREN RPAREN
    (43) expression -> . exp
    (44) expression -> . expression1
    (32) special_functions -> . mean
    (33) special_functions -> . median
    (34) special_functions -> . mode
    (35) special_functions -> . variance
    (36) special_functions -> . standard_deviation
    (87) non_conditional_loop -> . FOR LPAREN ID EQUALS expression TO expression BY expression RPAREN block
    (86) conditional_loop -> . WHILE LPAREN expression RPAREN DO block
    (53) exp -> . term
    (54) exp -> . term exp_1
    (45) expression1 -> . exp LT exp
    (46) expression1 -> . exp LE exp
    (47) expression1 -> . exp GT exp
    (48) expression1 -> . exp GE exp
    (49) expression1 -> . exp EQ exp
    (50) expression1 -> . exp NE exp
    (51) expression1 -> . exp AND exp
    (52) expression1 -> . exp OR exp
    (95) mean -> . MEAN LPAREN expression RPAREN SEMI
    (96) median -> . MEDIAN LPAREN expression RPAREN SEMI
    (97) mode -> . MODE LPAREN expression RPAREN SEMI
    (98) variance -> . VARIANCE LPAREN expression RPAREN SEMI
    (99) standard_deviation -> . STDEV LPAREN expression RPAREN SEMI
    (57) term -> . factor
    (58) term -> . factor term_2
    (61) factor -> . LPAREN expression RPAREN
    (62) factor -> . LBRACKET expression RBRACKET
    (63) factor -> . function_call
    (64) factor -> . factor_prima_1
    (65) factor_prima_1 -> . PLUS varcte
    (66) factor_prima_1 -> . MINUS varcte
    (67) factor_prima_1 -> . varcte
    (68) varcte -> . ID
    (69) varcte -> . CTEI
    (70) varcte -> . CTEF
    (71) varcte -> . CTEC
    (72) varcte -> . TRUE
    (73) varcte -> . FALSE

    RBRACE          reduce using rule 100 (epsilon -> .)
    ID              shift and go to state 52
    LET             shift and go to state 9
    IF              shift and go to state 54
    PRINT           shift and go to state 56
    READ            shift and go to state 57
    RETURN          shift and go to state 60
    FOR             shift and go to state 68
    WHILE           shift and go to state 69
    MEAN            shift and go to state 71
    MEDIAN          shift and go to state 72
    MODE            shift and go to state 73
    VARIANCE        shift and go to state 74
    STDEV           shift and go to state 75
    LPAREN          shift and go to state 55
    LBRACKET        shift and go to state 53
    PLUS            shift and go to state 78
    MINUS           shift and go to state 80
    CTEI            shift and go to state 81
    CTEF            shift and go to state 82
    CTEC            shift and go to state 83
    TRUE            shift and go to state 84
    FALSE           shift and go to state 85

    special_functions              shift and go to state 51
    statements1                    shift and go to state 104
    statements                     shift and go to state 94
    epsilon                        shift and go to state 95
    assignment                     shift and go to state 42
    vars                           shift and go to state 43
    condition                      shift and go to state 44
    writing                        shift and go to state 45
    reading                        shift and go to state 46
    repetition                     shift and go to state 47
    return                         shift and go to state 48
    function_call                  shift and go to state 49
    expression                     shift and go to state 50
    non_conditional_loop           shift and go to state 58
    conditional_loop               shift and go to state 59
    exp                            shift and go to state 61
    expression1                    shift and go to state 62
    mean                           shift and go to state 63
    median                         shift and go to state 64
    mode                           shift and go to state 65
    variance                       shift and go to state 66
    standard_deviation             shift and go to state 67
    term                           shift and go to state 70
    factor                         shift and go to state 76
    factor_prima_1                 shift and go to state 77
    varcte                         shift and go to state 79

state 52

    (39) assignment -> ID . EQUALS expression SEMI
    (40) assignment -> ID . LBRACKET expression RBRACKET EQUALS expression SEMI
    (89) function_call -> ID . LPAREN RPAREN SEMI
    (90) function_call -> ID . LPAREN function_call_1 RPAREN SEMI
    (91) function_call -> ID . LPAREN function_call_1 RPAREN
    (92) function_call -> ID . LPAREN RPAREN
    (68) varcte -> ID .

  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
    EQUALS          shift and go to state 105
    LBRACKET        shift and go to state 106
    LPAREN          shift and go to state 107
    TIMES           reduce using rule 68 (varcte -> ID .)
    DIVIDE          reduce using rule 68 (varcte -> ID .)
    PLUS            reduce using rule 68 (varcte -> ID .)
    MINUS           reduce using rule 68 (varcte -> ID .)
    LT              reduce using rule 68 (varcte -> ID .)
    LE              reduce using rule 68 (varcte -> ID .)
    GT              reduce using rule 68 (varcte -> ID .)
    GE              reduce using rule 68 (varcte -> ID .)
    EQ              reduce using rule 68 (varcte -> ID .)
    NE              reduce using rule 68 (varcte -> ID .)
    AND             reduce using rule 68 (varcte -> ID .)
    OR              reduce using rule 68 (varcte -> ID .)
    ID              reduce using rule 68 (varcte -> ID .)
    LET             reduce using rule 68 (varcte -> ID .)
    IF              reduce using rule 68 (varcte -> ID .)
    PRINT           reduce using rule 68 (varcte -> ID .)
    READ            reduce using rule 68 (varcte -> ID .)
    RETURN          reduce using rule 68 (varcte -> ID .)
    FOR             reduce using rule 68 (varcte -> ID .)
    WHILE           reduce using rule 68 (varcte -> ID .)
    MEAN            reduce using rule 68 (varcte -> ID .)
    MEDIAN          reduce using rule 68 (varcte -> ID .)
    MODE            reduce using rule 68 (varcte -> ID .)
    VARIANCE        reduce using rule 68 (varcte -> ID .)
    STDEV           reduce using rule 68 (varcte -> ID .)
    CTEI            reduce using rule 68 (varcte -> ID .)
    CTEF            reduce using rule 68 (varcte -> ID .)
    CTEC            reduce using rule 68 (varcte -> ID .)
    TRUE            reduce using rule 68 (varcte -> ID .)
    FALSE           reduce using rule 68 (varcte -> ID .)
    RBRACE          reduce using rule 68 (varcte -> ID .)

  ! LPAREN          [ reduce using rule 68 (varcte -> ID .) ]
  ! LBRACKET        [ reduce using rule 68 (varcte -> ID .) ]


state 53

    (62) factor -> LBRACKET . expression RBRACKET
    (43) expression -> . exp
    (44) expression -> . expression1
    (53) exp -> . term
    (54) exp -> . term exp_1
    (45) expression1 -> . exp LT exp
    (46) expression1 -> . exp LE exp
    (47) expression1 -> . exp GT exp
    (48) expression1 -> . exp GE exp
    (49) expression1 -> . exp EQ exp
    (50) expression1 -> . exp NE exp
    (51) expression1 -> . exp AND exp
    (52) expression1 -> . exp OR exp
    (57) term -> . factor
    (58) term -> . factor term_2
    (61) factor -> . LPAREN expression RPAREN
    (62) factor -> . LBRACKET expression RBRACKET
    (63) factor -> . function_call
    (64) factor -> . factor_prima_1
    (89) function_call -> . ID LPAREN RPAREN SEMI
    (90) function_call -> . ID LPAREN function_call_1 RPAREN SEMI
    (91) function_call -> . ID LPAREN function_call_1 RPAREN
    (92) function_call -> . ID LPAREN RPAREN
    (65) factor_prima_1 -> . PLUS varcte
    (66) factor_prima_1 -> . MINUS varcte
    (67) factor_prima_1 -> . varcte
    (68) varcte -> . ID
    (69) varcte -> . CTEI
    (70) varcte -> . CTEF
    (71) varcte -> . CTEC
    (72) varcte -> . TRUE
    (73) varcte -> . FALSE

    LPAREN          shift and go to state 55
    LBRACKET        shift and go to state 53
    ID              shift and go to state 88
    PLUS            shift and go to state 78
    MINUS           shift and go to state 80
    CTEI            shift and go to state 81
    CTEF            shift and go to state 82
    CTEC            shift and go to state 83
    TRUE            shift and go to state 84
    FALSE           shift and go to state 85

    expression                     shift and go to state 108
    exp                            shift and go to state 61
    expression1                    shift and go to state 62
    term                           shift and go to state 70
    factor                         shift and go to state 76
    function_call                  shift and go to state 87
    factor_prima_1                 shift and go to state 77
    varcte                         shift and go to state 79

state 54

    (41) condition -> IF . LPAREN expression RPAREN block
    (42) condition -> IF . LPAREN expression RPAREN block ELSE block

    LPAREN          shift and go to state 109


state 55

    (61) factor -> LPAREN . expression RPAREN
    (43) expression -> . exp
    (44) expression -> . expression1
    (53) exp -> . term
    (54) exp -> . term exp_1
    (45) expression1 -> . exp LT exp
    (46) expression1 -> . exp LE exp
    (47) expression1 -> . exp GT exp
    (48) expression1 -> . exp GE exp
    (49) expression1 -> . exp EQ exp
    (50) expression1 -> . exp NE exp
    (51) expression1 -> . exp AND exp
    (52) expression1 -> . exp OR exp
    (57) term -> . factor
    (58) term -> . factor term_2
    (61) factor -> . LPAREN expression RPAREN
    (62) factor -> . LBRACKET expression RBRACKET
    (63) factor -> . function_call
    (64) factor -> . factor_prima_1
    (89) function_call -> . ID LPAREN RPAREN SEMI
    (90) function_call -> . ID LPAREN function_call_1 RPAREN SEMI
    (91) function_call -> . ID LPAREN function_call_1 RPAREN
    (92) function_call -> . ID LPAREN RPAREN
    (65) factor_prima_1 -> . PLUS varcte
    (66) factor_prima_1 -> . MINUS varcte
    (67) factor_prima_1 -> . varcte
    (68) varcte -> . ID
    (69) varcte -> . CTEI
    (70) varcte -> . CTEF
    (71) varcte -> . CTEC
    (72) varcte -> . TRUE
    (73) varcte -> . FALSE

    LPAREN          shift and go to state 55
    LBRACKET        shift and go to state 53
    ID              shift and go to state 88
    PLUS            shift and go to state 78
    MINUS           shift and go to state 80
    CTEI            shift and go to state 81
    CTEF            shift and go to state 82
    CTEC            shift and go to state 83
    TRUE            shift and go to state 84
    FALSE           shift and go to state 85

    expression                     shift and go to state 110
    exp                            shift and go to state 61
    expression1                    shift and go to state 62
    term                           shift and go to state 70
    factor                         shift and go to state 76
    function_call                  shift and go to state 87
    factor_prima_1                 shift and go to state 77
    varcte                         shift and go to state 79

state 56

    (74) writing -> PRINT . LPAREN writing_1 RPAREN SEMI

    LPAREN          shift and go to state 111


state 57

    (79) reading -> READ . LPAREN reading_1 RPAREN SEMI

    LPAREN          shift and go to state 112


state 58

    (84) repetition -> non_conditional_loop .

    ID              reduce using rule 84 (repetition -> non_conditional_loop .)
    LET             reduce using rule 84 (repetition -> non_conditional_loop .)
    IF              reduce using rule 84 (repetition -> non_conditional_loop .)
    PRINT           reduce using rule 84 (repetition -> non_conditional_loop .)
    READ            reduce using rule 84 (repetition -> non_conditional_loop .)
    RETURN          reduce using rule 84 (repetition -> non_conditional_loop .)
    FOR             reduce using rule 84 (repetition -> non_conditional_loop .)
    WHILE           reduce using rule 84 (repetition -> non_conditional_loop .)
    MEAN            reduce using rule 84 (repetition -> non_conditional_loop .)
    MEDIAN          reduce using rule 84 (repetition -> non_conditional_loop .)
    MODE            reduce using rule 84 (repetition -> non_conditional_loop .)
    VARIANCE        reduce using rule 84 (repetition -> non_conditional_loop .)
    STDEV           reduce using rule 84 (repetition -> non_conditional_loop .)
    LPAREN          reduce using rule 84 (repetition -> non_conditional_loop .)
    LBRACKET        reduce using rule 84 (repetition -> non_conditional_loop .)
    PLUS            reduce using rule 84 (repetition -> non_conditional_loop .)
    MINUS           reduce using rule 84 (repetition -> non_conditional_loop .)
    CTEI            reduce using rule 84 (repetition -> non_conditional_loop .)
    CTEF            reduce using rule 84 (repetition -> non_conditional_loop .)
    CTEC            reduce using rule 84 (repetition -> non_conditional_loop .)
    TRUE            reduce using rule 84 (repetition -> non_conditional_loop .)
    FALSE           reduce using rule 84 (repetition -> non_conditional_loop .)
    RBRACE          reduce using rule 84 (repetition -> non_conditional_loop .)


state 59

    (85) repetition -> conditional_loop .

    ID              reduce using rule 85 (repetition -> conditional_loop .)
    LET             reduce using rule 85 (repetition -> conditional_loop .)
    IF              reduce using rule 85 (repetition -> conditional_loop .)
    PRINT           reduce using rule 85 (repetition -> conditional_loop .)
    READ            reduce using rule 85 (repetition -> conditional_loop .)
    RETURN          reduce using rule 85 (repetition -> conditional_loop .)
    FOR             reduce using rule 85 (repetition -> conditional_loop .)
    WHILE           reduce using rule 85 (repetition -> conditional_loop .)
    MEAN            reduce using rule 85 (repetition -> conditional_loop .)
    MEDIAN          reduce using rule 85 (repetition -> conditional_loop .)
    MODE            reduce using rule 85 (repetition -> conditional_loop .)
    VARIANCE        reduce using rule 85 (repetition -> conditional_loop .)
    STDEV           reduce using rule 85 (repetition -> conditional_loop .)
    LPAREN          reduce using rule 85 (repetition -> conditional_loop .)
    LBRACKET        reduce using rule 85 (repetition -> conditional_loop .)
    PLUS            reduce using rule 85 (repetition -> conditional_loop .)
    MINUS           reduce using rule 85 (repetition -> conditional_loop .)
    CTEI            reduce using rule 85 (repetition -> conditional_loop .)
    CTEF            reduce using rule 85 (repetition -> conditional_loop .)
    CTEC            reduce using rule 85 (repetition -> conditional_loop .)
    TRUE            reduce using rule 85 (repetition -> conditional_loop .)
    FALSE           reduce using rule 85 (repetition -> conditional_loop .)
    RBRACE          reduce using rule 85 (repetition -> conditional_loop .)


state 60

    (88) return -> RETURN . expression SEMI
    (43) expression -> . exp
    (44) expression -> . expression1
    (53) exp -> . term
    (54) exp -> . term exp_1
    (45) expression1 -> . exp LT exp
    (46) expression1 -> . exp LE exp
    (47) expression1 -> . exp GT exp
    (48) expression1 -> . exp GE exp
    (49) expression1 -> . exp EQ exp
    (50) expression1 -> . exp NE exp
    (51) expression1 -> . exp AND exp
    (52) expression1 -> . exp OR exp
    (57) term -> . factor
    (58) term -> . factor term_2
    (61) factor -> . LPAREN expression RPAREN
    (62) factor -> . LBRACKET expression RBRACKET
    (63) factor -> . function_call
    (64) factor -> . factor_prima_1
    (89) function_call -> . ID LPAREN RPAREN SEMI
    (90) function_call -> . ID LPAREN function_call_1 RPAREN SEMI
    (91) function_call -> . ID LPAREN function_call_1 RPAREN
    (92) function_call -> . ID LPAREN RPAREN
    (65) factor_prima_1 -> . PLUS varcte
    (66) factor_prima_1 -> . MINUS varcte
    (67) factor_prima_1 -> . varcte
    (68) varcte -> . ID
    (69) varcte -> . CTEI
    (70) varcte -> . CTEF
    (71) varcte -> . CTEC
    (72) varcte -> . TRUE
    (73) varcte -> . FALSE

    LPAREN          shift and go to state 55
    LBRACKET        shift and go to state 53
    ID              shift and go to state 88
    PLUS            shift and go to state 78
    MINUS           shift and go to state 80
    CTEI            shift and go to state 81
    CTEF            shift and go to state 82
    CTEC            shift and go to state 83
    TRUE            shift and go to state 84
    FALSE           shift and go to state 85

    expression                     shift and go to state 113
    exp                            shift and go to state 61
    expression1                    shift and go to state 62
    term                           shift and go to state 70
    factor                         shift and go to state 76
    function_call                  shift and go to state 87
    factor_prima_1                 shift and go to state 77
    varcte                         shift and go to state 79

state 61

    (43) expression -> exp .
    (45) expression1 -> exp . LT exp
    (46) expression1 -> exp . LE exp
    (47) expression1 -> exp . GT exp
    (48) expression1 -> exp . GE exp
    (49) expression1 -> exp . EQ exp
    (50) expression1 -> exp . NE exp
    (51) expression1 -> exp . AND exp
    (52) expression1 -> exp . OR exp

    ID              reduce using rule 43 (expression -> exp .)
    LET             reduce using rule 43 (expression -> exp .)
    IF              reduce using rule 43 (expression -> exp .)
    PRINT           reduce using rule 43 (expression -> exp .)
    READ            reduce using rule 43 (expression -> exp .)
    RETURN          reduce using rule 43 (expression -> exp .)
    FOR             reduce using rule 43 (expression -> exp .)
    WHILE           reduce using rule 43 (expression -> exp .)
    MEAN            reduce using rule 43 (expression -> exp .)
    MEDIAN          reduce using rule 43 (expression -> exp .)
    MODE            reduce using rule 43 (expression -> exp .)
    VARIANCE        reduce using rule 43 (expression -> exp .)
    STDEV           reduce using rule 43 (expression -> exp .)
    LPAREN          reduce using rule 43 (expression -> exp .)
    LBRACKET        reduce using rule 43 (expression -> exp .)
    PLUS            reduce using rule 43 (expression -> exp .)
    MINUS           reduce using rule 43 (expression -> exp .)
    CTEI            reduce using rule 43 (expression -> exp .)
    CTEF            reduce using rule 43 (expression -> exp .)
    CTEC            reduce using rule 43 (expression -> exp .)
    TRUE            reduce using rule 43 (expression -> exp .)
    FALSE           reduce using rule 43 (expression -> exp .)
    RBRACE          reduce using rule 43 (expression -> exp .)
    RBRACKET        reduce using rule 43 (expression -> exp .)
    RPAREN          reduce using rule 43 (expression -> exp .)
    SEMI            reduce using rule 43 (expression -> exp .)
    COMMA           reduce using rule 43 (expression -> exp .)
    TO              reduce using rule 43 (expression -> exp .)
    BY              reduce using rule 43 (expression -> exp .)
    LT              shift and go to state 114
    LE              shift and go to state 115
    GT              shift and go to state 116
    GE              shift and go to state 117
    EQ              shift and go to state 118
    NE              shift and go to state 119
    AND             shift and go to state 120
    OR              shift and go to state 121


state 62

    (44) expression -> expression1 .

    ID              reduce using rule 44 (expression -> expression1 .)
    LET             reduce using rule 44 (expression -> expression1 .)
    IF              reduce using rule 44 (expression -> expression1 .)
    PRINT           reduce using rule 44 (expression -> expression1 .)
    READ            reduce using rule 44 (expression -> expression1 .)
    RETURN          reduce using rule 44 (expression -> expression1 .)
    FOR             reduce using rule 44 (expression -> expression1 .)
    WHILE           reduce using rule 44 (expression -> expression1 .)
    MEAN            reduce using rule 44 (expression -> expression1 .)
    MEDIAN          reduce using rule 44 (expression -> expression1 .)
    MODE            reduce using rule 44 (expression -> expression1 .)
    VARIANCE        reduce using rule 44 (expression -> expression1 .)
    STDEV           reduce using rule 44 (expression -> expression1 .)
    LPAREN          reduce using rule 44 (expression -> expression1 .)
    LBRACKET        reduce using rule 44 (expression -> expression1 .)
    PLUS            reduce using rule 44 (expression -> expression1 .)
    MINUS           reduce using rule 44 (expression -> expression1 .)
    CTEI            reduce using rule 44 (expression -> expression1 .)
    CTEF            reduce using rule 44 (expression -> expression1 .)
    CTEC            reduce using rule 44 (expression -> expression1 .)
    TRUE            reduce using rule 44 (expression -> expression1 .)
    FALSE           reduce using rule 44 (expression -> expression1 .)
    RBRACE          reduce using rule 44 (expression -> expression1 .)
    RBRACKET        reduce using rule 44 (expression -> expression1 .)
    RPAREN          reduce using rule 44 (expression -> expression1 .)
    SEMI            reduce using rule 44 (expression -> expression1 .)
    COMMA           reduce using rule 44 (expression -> expression1 .)
    TO              reduce using rule 44 (expression -> expression1 .)
    BY              reduce using rule 44 (expression -> expression1 .)


state 63

    (32) special_functions -> mean .

    ID              reduce using rule 32 (special_functions -> mean .)
    LET             reduce using rule 32 (special_functions -> mean .)
    IF              reduce using rule 32 (special_functions -> mean .)
    PRINT           reduce using rule 32 (special_functions -> mean .)
    READ            reduce using rule 32 (special_functions -> mean .)
    RETURN          reduce using rule 32 (special_functions -> mean .)
    FOR             reduce using rule 32 (special_functions -> mean .)
    WHILE           reduce using rule 32 (special_functions -> mean .)
    MEAN            reduce using rule 32 (special_functions -> mean .)
    MEDIAN          reduce using rule 32 (special_functions -> mean .)
    MODE            reduce using rule 32 (special_functions -> mean .)
    VARIANCE        reduce using rule 32 (special_functions -> mean .)
    STDEV           reduce using rule 32 (special_functions -> mean .)
    LPAREN          reduce using rule 32 (special_functions -> mean .)
    LBRACKET        reduce using rule 32 (special_functions -> mean .)
    PLUS            reduce using rule 32 (special_functions -> mean .)
    MINUS           reduce using rule 32 (special_functions -> mean .)
    CTEI            reduce using rule 32 (special_functions -> mean .)
    CTEF            reduce using rule 32 (special_functions -> mean .)
    CTEC            reduce using rule 32 (special_functions -> mean .)
    TRUE            reduce using rule 32 (special_functions -> mean .)
    FALSE           reduce using rule 32 (special_functions -> mean .)
    RBRACE          reduce using rule 32 (special_functions -> mean .)


state 64

    (33) special_functions -> median .

    ID              reduce using rule 33 (special_functions -> median .)
    LET             reduce using rule 33 (special_functions -> median .)
    IF              reduce using rule 33 (special_functions -> median .)
    PRINT           reduce using rule 33 (special_functions -> median .)
    READ            reduce using rule 33 (special_functions -> median .)
    RETURN          reduce using rule 33 (special_functions -> median .)
    FOR             reduce using rule 33 (special_functions -> median .)
    WHILE           reduce using rule 33 (special_functions -> median .)
    MEAN            reduce using rule 33 (special_functions -> median .)
    MEDIAN          reduce using rule 33 (special_functions -> median .)
    MODE            reduce using rule 33 (special_functions -> median .)
    VARIANCE        reduce using rule 33 (special_functions -> median .)
    STDEV           reduce using rule 33 (special_functions -> median .)
    LPAREN          reduce using rule 33 (special_functions -> median .)
    LBRACKET        reduce using rule 33 (special_functions -> median .)
    PLUS            reduce using rule 33 (special_functions -> median .)
    MINUS           reduce using rule 33 (special_functions -> median .)
    CTEI            reduce using rule 33 (special_functions -> median .)
    CTEF            reduce using rule 33 (special_functions -> median .)
    CTEC            reduce using rule 33 (special_functions -> median .)
    TRUE            reduce using rule 33 (special_functions -> median .)
    FALSE           reduce using rule 33 (special_functions -> median .)
    RBRACE          reduce using rule 33 (special_functions -> median .)


state 65

    (34) special_functions -> mode .

    ID              reduce using rule 34 (special_functions -> mode .)
    LET             reduce using rule 34 (special_functions -> mode .)
    IF              reduce using rule 34 (special_functions -> mode .)
    PRINT           reduce using rule 34 (special_functions -> mode .)
    READ            reduce using rule 34 (special_functions -> mode .)
    RETURN          reduce using rule 34 (special_functions -> mode .)
    FOR             reduce using rule 34 (special_functions -> mode .)
    WHILE           reduce using rule 34 (special_functions -> mode .)
    MEAN            reduce using rule 34 (special_functions -> mode .)
    MEDIAN          reduce using rule 34 (special_functions -> mode .)
    MODE            reduce using rule 34 (special_functions -> mode .)
    VARIANCE        reduce using rule 34 (special_functions -> mode .)
    STDEV           reduce using rule 34 (special_functions -> mode .)
    LPAREN          reduce using rule 34 (special_functions -> mode .)
    LBRACKET        reduce using rule 34 (special_functions -> mode .)
    PLUS            reduce using rule 34 (special_functions -> mode .)
    MINUS           reduce using rule 34 (special_functions -> mode .)
    CTEI            reduce using rule 34 (special_functions -> mode .)
    CTEF            reduce using rule 34 (special_functions -> mode .)
    CTEC            reduce using rule 34 (special_functions -> mode .)
    TRUE            reduce using rule 34 (special_functions -> mode .)
    FALSE           reduce using rule 34 (special_functions -> mode .)
    RBRACE          reduce using rule 34 (special_functions -> mode .)


state 66

    (35) special_functions -> variance .

    ID              reduce using rule 35 (special_functions -> variance .)
    LET             reduce using rule 35 (special_functions -> variance .)
    IF              reduce using rule 35 (special_functions -> variance .)
    PRINT           reduce using rule 35 (special_functions -> variance .)
    READ            reduce using rule 35 (special_functions -> variance .)
    RETURN          reduce using rule 35 (special_functions -> variance .)
    FOR             reduce using rule 35 (special_functions -> variance .)
    WHILE           reduce using rule 35 (special_functions -> variance .)
    MEAN            reduce using rule 35 (special_functions -> variance .)
    MEDIAN          reduce using rule 35 (special_functions -> variance .)
    MODE            reduce using rule 35 (special_functions -> variance .)
    VARIANCE        reduce using rule 35 (special_functions -> variance .)
    STDEV           reduce using rule 35 (special_functions -> variance .)
    LPAREN          reduce using rule 35 (special_functions -> variance .)
    LBRACKET        reduce using rule 35 (special_functions -> variance .)
    PLUS            reduce using rule 35 (special_functions -> variance .)
    MINUS           reduce using rule 35 (special_functions -> variance .)
    CTEI            reduce using rule 35 (special_functions -> variance .)
    CTEF            reduce using rule 35 (special_functions -> variance .)
    CTEC            reduce using rule 35 (special_functions -> variance .)
    TRUE            reduce using rule 35 (special_functions -> variance .)
    FALSE           reduce using rule 35 (special_functions -> variance .)
    RBRACE          reduce using rule 35 (special_functions -> variance .)


state 67

    (36) special_functions -> standard_deviation .

    ID              reduce using rule 36 (special_functions -> standard_deviation .)
    LET             reduce using rule 36 (special_functions -> standard_deviation .)
    IF              reduce using rule 36 (special_functions -> standard_deviation .)
    PRINT           reduce using rule 36 (special_functions -> standard_deviation .)
    READ            reduce using rule 36 (special_functions -> standard_deviation .)
    RETURN          reduce using rule 36 (special_functions -> standard_deviation .)
    FOR             reduce using rule 36 (special_functions -> standard_deviation .)
    WHILE           reduce using rule 36 (special_functions -> standard_deviation .)
    MEAN            reduce using rule 36 (special_functions -> standard_deviation .)
    MEDIAN          reduce using rule 36 (special_functions -> standard_deviation .)
    MODE            reduce using rule 36 (special_functions -> standard_deviation .)
    VARIANCE        reduce using rule 36 (special_functions -> standard_deviation .)
    STDEV           reduce using rule 36 (special_functions -> standard_deviation .)
    LPAREN          reduce using rule 36 (special_functions -> standard_deviation .)
    LBRACKET        reduce using rule 36 (special_functions -> standard_deviation .)
    PLUS            reduce using rule 36 (special_functions -> standard_deviation .)
    MINUS           reduce using rule 36 (special_functions -> standard_deviation .)
    CTEI            reduce using rule 36 (special_functions -> standard_deviation .)
    CTEF            reduce using rule 36 (special_functions -> standard_deviation .)
    CTEC            reduce using rule 36 (special_functions -> standard_deviation .)
    TRUE            reduce using rule 36 (special_functions -> standard_deviation .)
    FALSE           reduce using rule 36 (special_functions -> standard_deviation .)
    RBRACE          reduce using rule 36 (special_functions -> standard_deviation .)


state 68

    (87) non_conditional_loop -> FOR . LPAREN ID EQUALS expression TO expression BY expression RPAREN block

    LPAREN          shift and go to state 122


state 69

    (86) conditional_loop -> WHILE . LPAREN expression RPAREN DO block

    LPAREN          shift and go to state 123


state 70

    (53) exp -> term .
    (54) exp -> term . exp_1
    (55) exp_1 -> . PLUS exp
    (56) exp_1 -> . MINUS exp

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    LT              reduce using rule 53 (exp -> term .)
    LE              reduce using rule 53 (exp -> term .)
    GT              reduce using rule 53 (exp -> term .)
    GE              reduce using rule 53 (exp -> term .)
    EQ              reduce using rule 53 (exp -> term .)
    NE              reduce using rule 53 (exp -> term .)
    AND             reduce using rule 53 (exp -> term .)
    OR              reduce using rule 53 (exp -> term .)
    ID              reduce using rule 53 (exp -> term .)
    LET             reduce using rule 53 (exp -> term .)
    IF              reduce using rule 53 (exp -> term .)
    PRINT           reduce using rule 53 (exp -> term .)
    READ            reduce using rule 53 (exp -> term .)
    RETURN          reduce using rule 53 (exp -> term .)
    FOR             reduce using rule 53 (exp -> term .)
    WHILE           reduce using rule 53 (exp -> term .)
    MEAN            reduce using rule 53 (exp -> term .)
    MEDIAN          reduce using rule 53 (exp -> term .)
    MODE            reduce using rule 53 (exp -> term .)
    VARIANCE        reduce using rule 53 (exp -> term .)
    STDEV           reduce using rule 53 (exp -> term .)
    LPAREN          reduce using rule 53 (exp -> term .)
    LBRACKET        reduce using rule 53 (exp -> term .)
    CTEI            reduce using rule 53 (exp -> term .)
    CTEF            reduce using rule 53 (exp -> term .)
    CTEC            reduce using rule 53 (exp -> term .)
    TRUE            reduce using rule 53 (exp -> term .)
    FALSE           reduce using rule 53 (exp -> term .)
    RBRACE          reduce using rule 53 (exp -> term .)
    RBRACKET        reduce using rule 53 (exp -> term .)
    RPAREN          reduce using rule 53 (exp -> term .)
    SEMI            reduce using rule 53 (exp -> term .)
    COMMA           reduce using rule 53 (exp -> term .)
    TO              reduce using rule 53 (exp -> term .)
    BY              reduce using rule 53 (exp -> term .)
    PLUS            shift and go to state 125
    MINUS           shift and go to state 126

  ! PLUS            [ reduce using rule 53 (exp -> term .) ]
  ! MINUS           [ reduce using rule 53 (exp -> term .) ]

    exp_1                          shift and go to state 124

state 71

    (95) mean -> MEAN . LPAREN expression RPAREN SEMI

    LPAREN          shift and go to state 127


state 72

    (96) median -> MEDIAN . LPAREN expression RPAREN SEMI

    LPAREN          shift and go to state 128


state 73

    (97) mode -> MODE . LPAREN expression RPAREN SEMI

    LPAREN          shift and go to state 129


state 74

    (98) variance -> VARIANCE . LPAREN expression RPAREN SEMI

    LPAREN          shift and go to state 130


state 75

    (99) standard_deviation -> STDEV . LPAREN expression RPAREN SEMI

    LPAREN          shift and go to state 131


state 76

    (57) term -> factor .
    (58) term -> factor . term_2
    (59) term_2 -> . TIMES term
    (60) term_2 -> . DIVIDE term

    PLUS            reduce using rule 57 (term -> factor .)
    MINUS           reduce using rule 57 (term -> factor .)
    LT              reduce using rule 57 (term -> factor .)
    LE              reduce using rule 57 (term -> factor .)
    GT              reduce using rule 57 (term -> factor .)
    GE              reduce using rule 57 (term -> factor .)
    EQ              reduce using rule 57 (term -> factor .)
    NE              reduce using rule 57 (term -> factor .)
    AND             reduce using rule 57 (term -> factor .)
    OR              reduce using rule 57 (term -> factor .)
    ID              reduce using rule 57 (term -> factor .)
    LET             reduce using rule 57 (term -> factor .)
    IF              reduce using rule 57 (term -> factor .)
    PRINT           reduce using rule 57 (term -> factor .)
    READ            reduce using rule 57 (term -> factor .)
    RETURN          reduce using rule 57 (term -> factor .)
    FOR             reduce using rule 57 (term -> factor .)
    WHILE           reduce using rule 57 (term -> factor .)
    MEAN            reduce using rule 57 (term -> factor .)
    MEDIAN          reduce using rule 57 (term -> factor .)
    MODE            reduce using rule 57 (term -> factor .)
    VARIANCE        reduce using rule 57 (term -> factor .)
    STDEV           reduce using rule 57 (term -> factor .)
    LPAREN          reduce using rule 57 (term -> factor .)
    LBRACKET        reduce using rule 57 (term -> factor .)
    CTEI            reduce using rule 57 (term -> factor .)
    CTEF            reduce using rule 57 (term -> factor .)
    CTEC            reduce using rule 57 (term -> factor .)
    TRUE            reduce using rule 57 (term -> factor .)
    FALSE           reduce using rule 57 (term -> factor .)
    RBRACE          reduce using rule 57 (term -> factor .)
    RBRACKET        reduce using rule 57 (term -> factor .)
    RPAREN          reduce using rule 57 (term -> factor .)
    SEMI            reduce using rule 57 (term -> factor .)
    COMMA           reduce using rule 57 (term -> factor .)
    TO              reduce using rule 57 (term -> factor .)
    BY              reduce using rule 57 (term -> factor .)
    TIMES           shift and go to state 133
    DIVIDE          shift and go to state 134

    term_2                         shift and go to state 132

state 77

    (64) factor -> factor_prima_1 .

    TIMES           reduce using rule 64 (factor -> factor_prima_1 .)
    DIVIDE          reduce using rule 64 (factor -> factor_prima_1 .)
    PLUS            reduce using rule 64 (factor -> factor_prima_1 .)
    MINUS           reduce using rule 64 (factor -> factor_prima_1 .)
    LT              reduce using rule 64 (factor -> factor_prima_1 .)
    LE              reduce using rule 64 (factor -> factor_prima_1 .)
    GT              reduce using rule 64 (factor -> factor_prima_1 .)
    GE              reduce using rule 64 (factor -> factor_prima_1 .)
    EQ              reduce using rule 64 (factor -> factor_prima_1 .)
    NE              reduce using rule 64 (factor -> factor_prima_1 .)
    AND             reduce using rule 64 (factor -> factor_prima_1 .)
    OR              reduce using rule 64 (factor -> factor_prima_1 .)
    ID              reduce using rule 64 (factor -> factor_prima_1 .)
    LET             reduce using rule 64 (factor -> factor_prima_1 .)
    IF              reduce using rule 64 (factor -> factor_prima_1 .)
    PRINT           reduce using rule 64 (factor -> factor_prima_1 .)
    READ            reduce using rule 64 (factor -> factor_prima_1 .)
    RETURN          reduce using rule 64 (factor -> factor_prima_1 .)
    FOR             reduce using rule 64 (factor -> factor_prima_1 .)
    WHILE           reduce using rule 64 (factor -> factor_prima_1 .)
    MEAN            reduce using rule 64 (factor -> factor_prima_1 .)
    MEDIAN          reduce using rule 64 (factor -> factor_prima_1 .)
    MODE            reduce using rule 64 (factor -> factor_prima_1 .)
    VARIANCE        reduce using rule 64 (factor -> factor_prima_1 .)
    STDEV           reduce using rule 64 (factor -> factor_prima_1 .)
    LPAREN          reduce using rule 64 (factor -> factor_prima_1 .)
    LBRACKET        reduce using rule 64 (factor -> factor_prima_1 .)
    CTEI            reduce using rule 64 (factor -> factor_prima_1 .)
    CTEF            reduce using rule 64 (factor -> factor_prima_1 .)
    CTEC            reduce using rule 64 (factor -> factor_prima_1 .)
    TRUE            reduce using rule 64 (factor -> factor_prima_1 .)
    FALSE           reduce using rule 64 (factor -> factor_prima_1 .)
    RBRACE          reduce using rule 64 (factor -> factor_prima_1 .)
    RBRACKET        reduce using rule 64 (factor -> factor_prima_1 .)
    RPAREN          reduce using rule 64 (factor -> factor_prima_1 .)
    SEMI            reduce using rule 64 (factor -> factor_prima_1 .)
    COMMA           reduce using rule 64 (factor -> factor_prima_1 .)
    TO              reduce using rule 64 (factor -> factor_prima_1 .)
    BY              reduce using rule 64 (factor -> factor_prima_1 .)


state 78

    (65) factor_prima_1 -> PLUS . varcte
    (68) varcte -> . ID
    (69) varcte -> . CTEI
    (70) varcte -> . CTEF
    (71) varcte -> . CTEC
    (72) varcte -> . TRUE
    (73) varcte -> . FALSE

    ID              shift and go to state 136
    CTEI            shift and go to state 81
    CTEF            shift and go to state 82
    CTEC            shift and go to state 83
    TRUE            shift and go to state 84
    FALSE           shift and go to state 85

    varcte                         shift and go to state 135

state 79

    (67) factor_prima_1 -> varcte .

    TIMES           reduce using rule 67 (factor_prima_1 -> varcte .)
    DIVIDE          reduce using rule 67 (factor_prima_1 -> varcte .)
    PLUS            reduce using rule 67 (factor_prima_1 -> varcte .)
    MINUS           reduce using rule 67 (factor_prima_1 -> varcte .)
    LT              reduce using rule 67 (factor_prima_1 -> varcte .)
    LE              reduce using rule 67 (factor_prima_1 -> varcte .)
    GT              reduce using rule 67 (factor_prima_1 -> varcte .)
    GE              reduce using rule 67 (factor_prima_1 -> varcte .)
    EQ              reduce using rule 67 (factor_prima_1 -> varcte .)
    NE              reduce using rule 67 (factor_prima_1 -> varcte .)
    AND             reduce using rule 67 (factor_prima_1 -> varcte .)
    OR              reduce using rule 67 (factor_prima_1 -> varcte .)
    ID              reduce using rule 67 (factor_prima_1 -> varcte .)
    LET             reduce using rule 67 (factor_prima_1 -> varcte .)
    IF              reduce using rule 67 (factor_prima_1 -> varcte .)
    PRINT           reduce using rule 67 (factor_prima_1 -> varcte .)
    READ            reduce using rule 67 (factor_prima_1 -> varcte .)
    RETURN          reduce using rule 67 (factor_prima_1 -> varcte .)
    FOR             reduce using rule 67 (factor_prima_1 -> varcte .)
    WHILE           reduce using rule 67 (factor_prima_1 -> varcte .)
    MEAN            reduce using rule 67 (factor_prima_1 -> varcte .)
    MEDIAN          reduce using rule 67 (factor_prima_1 -> varcte .)
    MODE            reduce using rule 67 (factor_prima_1 -> varcte .)
    VARIANCE        reduce using rule 67 (factor_prima_1 -> varcte .)
    STDEV           reduce using rule 67 (factor_prima_1 -> varcte .)
    LPAREN          reduce using rule 67 (factor_prima_1 -> varcte .)
    LBRACKET        reduce using rule 67 (factor_prima_1 -> varcte .)
    CTEI            reduce using rule 67 (factor_prima_1 -> varcte .)
    CTEF            reduce using rule 67 (factor_prima_1 -> varcte .)
    CTEC            reduce using rule 67 (factor_prima_1 -> varcte .)
    TRUE            reduce using rule 67 (factor_prima_1 -> varcte .)
    FALSE           reduce using rule 67 (factor_prima_1 -> varcte .)
    RBRACE          reduce using rule 67 (factor_prima_1 -> varcte .)
    RBRACKET        reduce using rule 67 (factor_prima_1 -> varcte .)
    RPAREN          reduce using rule 67 (factor_prima_1 -> varcte .)
    SEMI            reduce using rule 67 (factor_prima_1 -> varcte .)
    COMMA           reduce using rule 67 (factor_prima_1 -> varcte .)
    TO              reduce using rule 67 (factor_prima_1 -> varcte .)
    BY              reduce using rule 67 (factor_prima_1 -> varcte .)


state 80

    (66) factor_prima_1 -> MINUS . varcte
    (68) varcte -> . ID
    (69) varcte -> . CTEI
    (70) varcte -> . CTEF
    (71) varcte -> . CTEC
    (72) varcte -> . TRUE
    (73) varcte -> . FALSE

    ID              shift and go to state 136
    CTEI            shift and go to state 81
    CTEF            shift and go to state 82
    CTEC            shift and go to state 83
    TRUE            shift and go to state 84
    FALSE           shift and go to state 85

    varcte                         shift and go to state 137

state 81

    (69) varcte -> CTEI .

    TIMES           reduce using rule 69 (varcte -> CTEI .)
    DIVIDE          reduce using rule 69 (varcte -> CTEI .)
    PLUS            reduce using rule 69 (varcte -> CTEI .)
    MINUS           reduce using rule 69 (varcte -> CTEI .)
    LT              reduce using rule 69 (varcte -> CTEI .)
    LE              reduce using rule 69 (varcte -> CTEI .)
    GT              reduce using rule 69 (varcte -> CTEI .)
    GE              reduce using rule 69 (varcte -> CTEI .)
    EQ              reduce using rule 69 (varcte -> CTEI .)
    NE              reduce using rule 69 (varcte -> CTEI .)
    AND             reduce using rule 69 (varcte -> CTEI .)
    OR              reduce using rule 69 (varcte -> CTEI .)
    ID              reduce using rule 69 (varcte -> CTEI .)
    LET             reduce using rule 69 (varcte -> CTEI .)
    IF              reduce using rule 69 (varcte -> CTEI .)
    PRINT           reduce using rule 69 (varcte -> CTEI .)
    READ            reduce using rule 69 (varcte -> CTEI .)
    RETURN          reduce using rule 69 (varcte -> CTEI .)
    FOR             reduce using rule 69 (varcte -> CTEI .)
    WHILE           reduce using rule 69 (varcte -> CTEI .)
    MEAN            reduce using rule 69 (varcte -> CTEI .)
    MEDIAN          reduce using rule 69 (varcte -> CTEI .)
    MODE            reduce using rule 69 (varcte -> CTEI .)
    VARIANCE        reduce using rule 69 (varcte -> CTEI .)
    STDEV           reduce using rule 69 (varcte -> CTEI .)
    LPAREN          reduce using rule 69 (varcte -> CTEI .)
    LBRACKET        reduce using rule 69 (varcte -> CTEI .)
    CTEI            reduce using rule 69 (varcte -> CTEI .)
    CTEF            reduce using rule 69 (varcte -> CTEI .)
    CTEC            reduce using rule 69 (varcte -> CTEI .)
    TRUE            reduce using rule 69 (varcte -> CTEI .)
    FALSE           reduce using rule 69 (varcte -> CTEI .)
    RBRACE          reduce using rule 69 (varcte -> CTEI .)
    RBRACKET        reduce using rule 69 (varcte -> CTEI .)
    RPAREN          reduce using rule 69 (varcte -> CTEI .)
    SEMI            reduce using rule 69 (varcte -> CTEI .)
    COMMA           reduce using rule 69 (varcte -> CTEI .)
    TO              reduce using rule 69 (varcte -> CTEI .)
    BY              reduce using rule 69 (varcte -> CTEI .)


state 82

    (70) varcte -> CTEF .

    TIMES           reduce using rule 70 (varcte -> CTEF .)
    DIVIDE          reduce using rule 70 (varcte -> CTEF .)
    PLUS            reduce using rule 70 (varcte -> CTEF .)
    MINUS           reduce using rule 70 (varcte -> CTEF .)
    LT              reduce using rule 70 (varcte -> CTEF .)
    LE              reduce using rule 70 (varcte -> CTEF .)
    GT              reduce using rule 70 (varcte -> CTEF .)
    GE              reduce using rule 70 (varcte -> CTEF .)
    EQ              reduce using rule 70 (varcte -> CTEF .)
    NE              reduce using rule 70 (varcte -> CTEF .)
    AND             reduce using rule 70 (varcte -> CTEF .)
    OR              reduce using rule 70 (varcte -> CTEF .)
    ID              reduce using rule 70 (varcte -> CTEF .)
    LET             reduce using rule 70 (varcte -> CTEF .)
    IF              reduce using rule 70 (varcte -> CTEF .)
    PRINT           reduce using rule 70 (varcte -> CTEF .)
    READ            reduce using rule 70 (varcte -> CTEF .)
    RETURN          reduce using rule 70 (varcte -> CTEF .)
    FOR             reduce using rule 70 (varcte -> CTEF .)
    WHILE           reduce using rule 70 (varcte -> CTEF .)
    MEAN            reduce using rule 70 (varcte -> CTEF .)
    MEDIAN          reduce using rule 70 (varcte -> CTEF .)
    MODE            reduce using rule 70 (varcte -> CTEF .)
    VARIANCE        reduce using rule 70 (varcte -> CTEF .)
    STDEV           reduce using rule 70 (varcte -> CTEF .)
    LPAREN          reduce using rule 70 (varcte -> CTEF .)
    LBRACKET        reduce using rule 70 (varcte -> CTEF .)
    CTEI            reduce using rule 70 (varcte -> CTEF .)
    CTEF            reduce using rule 70 (varcte -> CTEF .)
    CTEC            reduce using rule 70 (varcte -> CTEF .)
    TRUE            reduce using rule 70 (varcte -> CTEF .)
    FALSE           reduce using rule 70 (varcte -> CTEF .)
    RBRACE          reduce using rule 70 (varcte -> CTEF .)
    RBRACKET        reduce using rule 70 (varcte -> CTEF .)
    RPAREN          reduce using rule 70 (varcte -> CTEF .)
    SEMI            reduce using rule 70 (varcte -> CTEF .)
    COMMA           reduce using rule 70 (varcte -> CTEF .)
    TO              reduce using rule 70 (varcte -> CTEF .)
    BY              reduce using rule 70 (varcte -> CTEF .)


state 83

    (71) varcte -> CTEC .

    TIMES           reduce using rule 71 (varcte -> CTEC .)
    DIVIDE          reduce using rule 71 (varcte -> CTEC .)
    PLUS            reduce using rule 71 (varcte -> CTEC .)
    MINUS           reduce using rule 71 (varcte -> CTEC .)
    LT              reduce using rule 71 (varcte -> CTEC .)
    LE              reduce using rule 71 (varcte -> CTEC .)
    GT              reduce using rule 71 (varcte -> CTEC .)
    GE              reduce using rule 71 (varcte -> CTEC .)
    EQ              reduce using rule 71 (varcte -> CTEC .)
    NE              reduce using rule 71 (varcte -> CTEC .)
    AND             reduce using rule 71 (varcte -> CTEC .)
    OR              reduce using rule 71 (varcte -> CTEC .)
    ID              reduce using rule 71 (varcte -> CTEC .)
    LET             reduce using rule 71 (varcte -> CTEC .)
    IF              reduce using rule 71 (varcte -> CTEC .)
    PRINT           reduce using rule 71 (varcte -> CTEC .)
    READ            reduce using rule 71 (varcte -> CTEC .)
    RETURN          reduce using rule 71 (varcte -> CTEC .)
    FOR             reduce using rule 71 (varcte -> CTEC .)
    WHILE           reduce using rule 71 (varcte -> CTEC .)
    MEAN            reduce using rule 71 (varcte -> CTEC .)
    MEDIAN          reduce using rule 71 (varcte -> CTEC .)
    MODE            reduce using rule 71 (varcte -> CTEC .)
    VARIANCE        reduce using rule 71 (varcte -> CTEC .)
    STDEV           reduce using rule 71 (varcte -> CTEC .)
    LPAREN          reduce using rule 71 (varcte -> CTEC .)
    LBRACKET        reduce using rule 71 (varcte -> CTEC .)
    CTEI            reduce using rule 71 (varcte -> CTEC .)
    CTEF            reduce using rule 71 (varcte -> CTEC .)
    CTEC            reduce using rule 71 (varcte -> CTEC .)
    TRUE            reduce using rule 71 (varcte -> CTEC .)
    FALSE           reduce using rule 71 (varcte -> CTEC .)
    RBRACE          reduce using rule 71 (varcte -> CTEC .)
    RBRACKET        reduce using rule 71 (varcte -> CTEC .)
    RPAREN          reduce using rule 71 (varcte -> CTEC .)
    SEMI            reduce using rule 71 (varcte -> CTEC .)
    COMMA           reduce using rule 71 (varcte -> CTEC .)
    TO              reduce using rule 71 (varcte -> CTEC .)
    BY              reduce using rule 71 (varcte -> CTEC .)


state 84

    (72) varcte -> TRUE .

    TIMES           reduce using rule 72 (varcte -> TRUE .)
    DIVIDE          reduce using rule 72 (varcte -> TRUE .)
    PLUS            reduce using rule 72 (varcte -> TRUE .)
    MINUS           reduce using rule 72 (varcte -> TRUE .)
    LT              reduce using rule 72 (varcte -> TRUE .)
    LE              reduce using rule 72 (varcte -> TRUE .)
    GT              reduce using rule 72 (varcte -> TRUE .)
    GE              reduce using rule 72 (varcte -> TRUE .)
    EQ              reduce using rule 72 (varcte -> TRUE .)
    NE              reduce using rule 72 (varcte -> TRUE .)
    AND             reduce using rule 72 (varcte -> TRUE .)
    OR              reduce using rule 72 (varcte -> TRUE .)
    ID              reduce using rule 72 (varcte -> TRUE .)
    LET             reduce using rule 72 (varcte -> TRUE .)
    IF              reduce using rule 72 (varcte -> TRUE .)
    PRINT           reduce using rule 72 (varcte -> TRUE .)
    READ            reduce using rule 72 (varcte -> TRUE .)
    RETURN          reduce using rule 72 (varcte -> TRUE .)
    FOR             reduce using rule 72 (varcte -> TRUE .)
    WHILE           reduce using rule 72 (varcte -> TRUE .)
    MEAN            reduce using rule 72 (varcte -> TRUE .)
    MEDIAN          reduce using rule 72 (varcte -> TRUE .)
    MODE            reduce using rule 72 (varcte -> TRUE .)
    VARIANCE        reduce using rule 72 (varcte -> TRUE .)
    STDEV           reduce using rule 72 (varcte -> TRUE .)
    LPAREN          reduce using rule 72 (varcte -> TRUE .)
    LBRACKET        reduce using rule 72 (varcte -> TRUE .)
    CTEI            reduce using rule 72 (varcte -> TRUE .)
    CTEF            reduce using rule 72 (varcte -> TRUE .)
    CTEC            reduce using rule 72 (varcte -> TRUE .)
    TRUE            reduce using rule 72 (varcte -> TRUE .)
    FALSE           reduce using rule 72 (varcte -> TRUE .)
    RBRACE          reduce using rule 72 (varcte -> TRUE .)
    RBRACKET        reduce using rule 72 (varcte -> TRUE .)
    RPAREN          reduce using rule 72 (varcte -> TRUE .)
    SEMI            reduce using rule 72 (varcte -> TRUE .)
    COMMA           reduce using rule 72 (varcte -> TRUE .)
    TO              reduce using rule 72 (varcte -> TRUE .)
    BY              reduce using rule 72 (varcte -> TRUE .)


state 85

    (73) varcte -> FALSE .

    TIMES           reduce using rule 73 (varcte -> FALSE .)
    DIVIDE          reduce using rule 73 (varcte -> FALSE .)
    PLUS            reduce using rule 73 (varcte -> FALSE .)
    MINUS           reduce using rule 73 (varcte -> FALSE .)
    LT              reduce using rule 73 (varcte -> FALSE .)
    LE              reduce using rule 73 (varcte -> FALSE .)
    GT              reduce using rule 73 (varcte -> FALSE .)
    GE              reduce using rule 73 (varcte -> FALSE .)
    EQ              reduce using rule 73 (varcte -> FALSE .)
    NE              reduce using rule 73 (varcte -> FALSE .)
    AND             reduce using rule 73 (varcte -> FALSE .)
    OR              reduce using rule 73 (varcte -> FALSE .)
    ID              reduce using rule 73 (varcte -> FALSE .)
    LET             reduce using rule 73 (varcte -> FALSE .)
    IF              reduce using rule 73 (varcte -> FALSE .)
    PRINT           reduce using rule 73 (varcte -> FALSE .)
    READ            reduce using rule 73 (varcte -> FALSE .)
    RETURN          reduce using rule 73 (varcte -> FALSE .)
    FOR             reduce using rule 73 (varcte -> FALSE .)
    WHILE           reduce using rule 73 (varcte -> FALSE .)
    MEAN            reduce using rule 73 (varcte -> FALSE .)
    MEDIAN          reduce using rule 73 (varcte -> FALSE .)
    MODE            reduce using rule 73 (varcte -> FALSE .)
    VARIANCE        reduce using rule 73 (varcte -> FALSE .)
    STDEV           reduce using rule 73 (varcte -> FALSE .)
    LPAREN          reduce using rule 73 (varcte -> FALSE .)
    LBRACKET        reduce using rule 73 (varcte -> FALSE .)
    CTEI            reduce using rule 73 (varcte -> FALSE .)
    CTEF            reduce using rule 73 (varcte -> FALSE .)
    CTEC            reduce using rule 73 (varcte -> FALSE .)
    TRUE            reduce using rule 73 (varcte -> FALSE .)
    FALSE           reduce using rule 73 (varcte -> FALSE .)
    RBRACE          reduce using rule 73 (varcte -> FALSE .)
    RBRACKET        reduce using rule 73 (varcte -> FALSE .)
    RPAREN          reduce using rule 73 (varcte -> FALSE .)
    SEMI            reduce using rule 73 (varcte -> FALSE .)
    COMMA           reduce using rule 73 (varcte -> FALSE .)
    TO              reduce using rule 73 (varcte -> FALSE .)
    BY              reduce using rule 73 (varcte -> FALSE .)


state 86

    (12) type_1 -> LBRACKET expression . RBRACKET

    RBRACKET        shift and go to state 138


state 87

    (63) factor -> function_call .

    TIMES           reduce using rule 63 (factor -> function_call .)
    DIVIDE          reduce using rule 63 (factor -> function_call .)
    PLUS            reduce using rule 63 (factor -> function_call .)
    MINUS           reduce using rule 63 (factor -> function_call .)
    LT              reduce using rule 63 (factor -> function_call .)
    LE              reduce using rule 63 (factor -> function_call .)
    GT              reduce using rule 63 (factor -> function_call .)
    GE              reduce using rule 63 (factor -> function_call .)
    EQ              reduce using rule 63 (factor -> function_call .)
    NE              reduce using rule 63 (factor -> function_call .)
    AND             reduce using rule 63 (factor -> function_call .)
    OR              reduce using rule 63 (factor -> function_call .)
    RBRACKET        reduce using rule 63 (factor -> function_call .)
    RPAREN          reduce using rule 63 (factor -> function_call .)
    SEMI            reduce using rule 63 (factor -> function_call .)
    COMMA           reduce using rule 63 (factor -> function_call .)
    ID              reduce using rule 63 (factor -> function_call .)
    LET             reduce using rule 63 (factor -> function_call .)
    IF              reduce using rule 63 (factor -> function_call .)
    PRINT           reduce using rule 63 (factor -> function_call .)
    READ            reduce using rule 63 (factor -> function_call .)
    RETURN          reduce using rule 63 (factor -> function_call .)
    FOR             reduce using rule 63 (factor -> function_call .)
    WHILE           reduce using rule 63 (factor -> function_call .)
    MEAN            reduce using rule 63 (factor -> function_call .)
    MEDIAN          reduce using rule 63 (factor -> function_call .)
    MODE            reduce using rule 63 (factor -> function_call .)
    VARIANCE        reduce using rule 63 (factor -> function_call .)
    STDEV           reduce using rule 63 (factor -> function_call .)
    LPAREN          reduce using rule 63 (factor -> function_call .)
    LBRACKET        reduce using rule 63 (factor -> function_call .)
    CTEI            reduce using rule 63 (factor -> function_call .)
    CTEF            reduce using rule 63 (factor -> function_call .)
    CTEC            reduce using rule 63 (factor -> function_call .)
    TRUE            reduce using rule 63 (factor -> function_call .)
    FALSE           reduce using rule 63 (factor -> function_call .)
    RBRACE          reduce using rule 63 (factor -> function_call .)
    TO              reduce using rule 63 (factor -> function_call .)
    BY              reduce using rule 63 (factor -> function_call .)


state 88

    (89) function_call -> ID . LPAREN RPAREN SEMI
    (90) function_call -> ID . LPAREN function_call_1 RPAREN SEMI
    (91) function_call -> ID . LPAREN function_call_1 RPAREN
    (92) function_call -> ID . LPAREN RPAREN
    (68) varcte -> ID .

  ! shift/reduce conflict for LPAREN resolved as shift
    LPAREN          shift and go to state 107
    TIMES           reduce using rule 68 (varcte -> ID .)
    DIVIDE          reduce using rule 68 (varcte -> ID .)
    PLUS            reduce using rule 68 (varcte -> ID .)
    MINUS           reduce using rule 68 (varcte -> ID .)
    LT              reduce using rule 68 (varcte -> ID .)
    LE              reduce using rule 68 (varcte -> ID .)
    GT              reduce using rule 68 (varcte -> ID .)
    GE              reduce using rule 68 (varcte -> ID .)
    EQ              reduce using rule 68 (varcte -> ID .)
    NE              reduce using rule 68 (varcte -> ID .)
    AND             reduce using rule 68 (varcte -> ID .)
    OR              reduce using rule 68 (varcte -> ID .)
    RBRACKET        reduce using rule 68 (varcte -> ID .)
    RPAREN          reduce using rule 68 (varcte -> ID .)
    SEMI            reduce using rule 68 (varcte -> ID .)
    COMMA           reduce using rule 68 (varcte -> ID .)
    ID              reduce using rule 68 (varcte -> ID .)
    LET             reduce using rule 68 (varcte -> ID .)
    IF              reduce using rule 68 (varcte -> ID .)
    PRINT           reduce using rule 68 (varcte -> ID .)
    READ            reduce using rule 68 (varcte -> ID .)
    RETURN          reduce using rule 68 (varcte -> ID .)
    FOR             reduce using rule 68 (varcte -> ID .)
    WHILE           reduce using rule 68 (varcte -> ID .)
    MEAN            reduce using rule 68 (varcte -> ID .)
    MEDIAN          reduce using rule 68 (varcte -> ID .)
    MODE            reduce using rule 68 (varcte -> ID .)
    VARIANCE        reduce using rule 68 (varcte -> ID .)
    STDEV           reduce using rule 68 (varcte -> ID .)
    LBRACKET        reduce using rule 68 (varcte -> ID .)
    CTEI            reduce using rule 68 (varcte -> ID .)
    CTEF            reduce using rule 68 (varcte -> ID .)
    CTEC            reduce using rule 68 (varcte -> ID .)
    TRUE            reduce using rule 68 (varcte -> ID .)
    FALSE           reduce using rule 68 (varcte -> ID .)
    RBRACE          reduce using rule 68 (varcte -> ID .)
    TO              reduce using rule 68 (varcte -> ID .)
    BY              reduce using rule 68 (varcte -> ID .)

  ! LPAREN          [ reduce using rule 68 (varcte -> ID .) ]


state 89

    (20) params -> ID . COLON type COMMA params
    (21) params -> ID . COLON type

    COLON           shift and go to state 139


state 90

    (14) function -> FUNCTION ID COLON return_type LPAREN params . RPAREN block

    RPAREN          shift and go to state 140


state 91

    (15) function -> FUNCTION ID COLON return_type LPAREN RPAREN . block
    (17) block -> . LBRACE statements RBRACE

    LBRACE          shift and go to state 32

    block                          shift and go to state 141

state 92

    (17) block -> LBRACE statements RBRACE .

    $end            reduce using rule 17 (block -> LBRACE statements RBRACE .)
    LET             reduce using rule 17 (block -> LBRACE statements RBRACE .)
    FUNCTION        reduce using rule 17 (block -> LBRACE statements RBRACE .)
    MAIN            reduce using rule 17 (block -> LBRACE statements RBRACE .)
    ELSE            reduce using rule 17 (block -> LBRACE statements RBRACE .)
    ID              reduce using rule 17 (block -> LBRACE statements RBRACE .)
    IF              reduce using rule 17 (block -> LBRACE statements RBRACE .)
    PRINT           reduce using rule 17 (block -> LBRACE statements RBRACE .)
    READ            reduce using rule 17 (block -> LBRACE statements RBRACE .)
    RETURN          reduce using rule 17 (block -> LBRACE statements RBRACE .)
    FOR             reduce using rule 17 (block -> LBRACE statements RBRACE .)
    WHILE           reduce using rule 17 (block -> LBRACE statements RBRACE .)
    MEAN            reduce using rule 17 (block -> LBRACE statements RBRACE .)
    MEDIAN          reduce using rule 17 (block -> LBRACE statements RBRACE .)
    MODE            reduce using rule 17 (block -> LBRACE statements RBRACE .)
    VARIANCE        reduce using rule 17 (block -> LBRACE statements RBRACE .)
    STDEV           reduce using rule 17 (block -> LBRACE statements RBRACE .)
    LPAREN          reduce using rule 17 (block -> LBRACE statements RBRACE .)
    LBRACKET        reduce using rule 17 (block -> LBRACE statements RBRACE .)
    PLUS            reduce using rule 17 (block -> LBRACE statements RBRACE .)
    MINUS           reduce using rule 17 (block -> LBRACE statements RBRACE .)
    CTEI            reduce using rule 17 (block -> LBRACE statements RBRACE .)
    CTEF            reduce using rule 17 (block -> LBRACE statements RBRACE .)
    CTEC            reduce using rule 17 (block -> LBRACE statements RBRACE .)
    TRUE            reduce using rule 17 (block -> LBRACE statements RBRACE .)
    FALSE           reduce using rule 17 (block -> LBRACE statements RBRACE .)
    RBRACE          reduce using rule 17 (block -> LBRACE statements RBRACE .)


state 93

    (22) statements -> assignment statements1 .

    RBRACE          reduce using rule 22 (statements -> assignment statements1 .)


state 94

    (37) statements1 -> statements .

    RBRACE          reduce using rule 37 (statements1 -> statements .)


state 95

    (38) statements1 -> epsilon .

    RBRACE          reduce using rule 38 (statements1 -> epsilon .)


state 96

    (23) statements -> vars statements1 .

    RBRACE          reduce using rule 23 (statements -> vars statements1 .)


state 97

    (24) statements -> condition statements1 .

    RBRACE          reduce using rule 24 (statements -> condition statements1 .)


state 98

    (25) statements -> writing statements1 .

    RBRACE          reduce using rule 25 (statements -> writing statements1 .)


state 99

    (26) statements -> reading statements1 .

    RBRACE          reduce using rule 26 (statements -> reading statements1 .)


state 100

    (27) statements -> repetition statements1 .

    RBRACE          reduce using rule 27 (statements -> repetition statements1 .)


state 101

    (28) statements -> return statements1 .

    RBRACE          reduce using rule 28 (statements -> return statements1 .)


state 102

    (29) statements -> function_call statements1 .

    RBRACE          reduce using rule 29 (statements -> function_call statements1 .)


state 103

    (30) statements -> expression statements1 .

    RBRACE          reduce using rule 30 (statements -> expression statements1 .)


state 104

    (31) statements -> special_functions statements1 .

    RBRACE          reduce using rule 31 (statements -> special_functions statements1 .)


state 105

    (39) assignment -> ID EQUALS . expression SEMI
    (43) expression -> . exp
    (44) expression -> . expression1
    (53) exp -> . term
    (54) exp -> . term exp_1
    (45) expression1 -> . exp LT exp
    (46) expression1 -> . exp LE exp
    (47) expression1 -> . exp GT exp
    (48) expression1 -> . exp GE exp
    (49) expression1 -> . exp EQ exp
    (50) expression1 -> . exp NE exp
    (51) expression1 -> . exp AND exp
    (52) expression1 -> . exp OR exp
    (57) term -> . factor
    (58) term -> . factor term_2
    (61) factor -> . LPAREN expression RPAREN
    (62) factor -> . LBRACKET expression RBRACKET
    (63) factor -> . function_call
    (64) factor -> . factor_prima_1
    (89) function_call -> . ID LPAREN RPAREN SEMI
    (90) function_call -> . ID LPAREN function_call_1 RPAREN SEMI
    (91) function_call -> . ID LPAREN function_call_1 RPAREN
    (92) function_call -> . ID LPAREN RPAREN
    (65) factor_prima_1 -> . PLUS varcte
    (66) factor_prima_1 -> . MINUS varcte
    (67) factor_prima_1 -> . varcte
    (68) varcte -> . ID
    (69) varcte -> . CTEI
    (70) varcte -> . CTEF
    (71) varcte -> . CTEC
    (72) varcte -> . TRUE
    (73) varcte -> . FALSE

    LPAREN          shift and go to state 55
    LBRACKET        shift and go to state 53
    ID              shift and go to state 88
    PLUS            shift and go to state 78
    MINUS           shift and go to state 80
    CTEI            shift and go to state 81
    CTEF            shift and go to state 82
    CTEC            shift and go to state 83
    TRUE            shift and go to state 84
    FALSE           shift and go to state 85

    expression                     shift and go to state 142
    exp                            shift and go to state 61
    expression1                    shift and go to state 62
    term                           shift and go to state 70
    factor                         shift and go to state 76
    function_call                  shift and go to state 87
    factor_prima_1                 shift and go to state 77
    varcte                         shift and go to state 79

state 106

    (40) assignment -> ID LBRACKET . expression RBRACKET EQUALS expression SEMI
    (43) expression -> . exp
    (44) expression -> . expression1
    (53) exp -> . term
    (54) exp -> . term exp_1
    (45) expression1 -> . exp LT exp
    (46) expression1 -> . exp LE exp
    (47) expression1 -> . exp GT exp
    (48) expression1 -> . exp GE exp
    (49) expression1 -> . exp EQ exp
    (50) expression1 -> . exp NE exp
    (51) expression1 -> . exp AND exp
    (52) expression1 -> . exp OR exp
    (57) term -> . factor
    (58) term -> . factor term_2
    (61) factor -> . LPAREN expression RPAREN
    (62) factor -> . LBRACKET expression RBRACKET
    (63) factor -> . function_call
    (64) factor -> . factor_prima_1
    (89) function_call -> . ID LPAREN RPAREN SEMI
    (90) function_call -> . ID LPAREN function_call_1 RPAREN SEMI
    (91) function_call -> . ID LPAREN function_call_1 RPAREN
    (92) function_call -> . ID LPAREN RPAREN
    (65) factor_prima_1 -> . PLUS varcte
    (66) factor_prima_1 -> . MINUS varcte
    (67) factor_prima_1 -> . varcte
    (68) varcte -> . ID
    (69) varcte -> . CTEI
    (70) varcte -> . CTEF
    (71) varcte -> . CTEC
    (72) varcte -> . TRUE
    (73) varcte -> . FALSE

    LPAREN          shift and go to state 55
    LBRACKET        shift and go to state 53
    ID              shift and go to state 88
    PLUS            shift and go to state 78
    MINUS           shift and go to state 80
    CTEI            shift and go to state 81
    CTEF            shift and go to state 82
    CTEC            shift and go to state 83
    TRUE            shift and go to state 84
    FALSE           shift and go to state 85

    expression                     shift and go to state 143
    exp                            shift and go to state 61
    expression1                    shift and go to state 62
    term                           shift and go to state 70
    factor                         shift and go to state 76
    function_call                  shift and go to state 87
    factor_prima_1                 shift and go to state 77
    varcte                         shift and go to state 79

state 107

    (89) function_call -> ID LPAREN . RPAREN SEMI
    (90) function_call -> ID LPAREN . function_call_1 RPAREN SEMI
    (91) function_call -> ID LPAREN . function_call_1 RPAREN
    (92) function_call -> ID LPAREN . RPAREN
    (93) function_call_1 -> . expression
    (94) function_call_1 -> . expression COMMA function_call_1
    (43) expression -> . exp
    (44) expression -> . expression1
    (53) exp -> . term
    (54) exp -> . term exp_1
    (45) expression1 -> . exp LT exp
    (46) expression1 -> . exp LE exp
    (47) expression1 -> . exp GT exp
    (48) expression1 -> . exp GE exp
    (49) expression1 -> . exp EQ exp
    (50) expression1 -> . exp NE exp
    (51) expression1 -> . exp AND exp
    (52) expression1 -> . exp OR exp
    (57) term -> . factor
    (58) term -> . factor term_2
    (61) factor -> . LPAREN expression RPAREN
    (62) factor -> . LBRACKET expression RBRACKET
    (63) factor -> . function_call
    (64) factor -> . factor_prima_1
    (89) function_call -> . ID LPAREN RPAREN SEMI
    (90) function_call -> . ID LPAREN function_call_1 RPAREN SEMI
    (91) function_call -> . ID LPAREN function_call_1 RPAREN
    (92) function_call -> . ID LPAREN RPAREN
    (65) factor_prima_1 -> . PLUS varcte
    (66) factor_prima_1 -> . MINUS varcte
    (67) factor_prima_1 -> . varcte
    (68) varcte -> . ID
    (69) varcte -> . CTEI
    (70) varcte -> . CTEF
    (71) varcte -> . CTEC
    (72) varcte -> . TRUE
    (73) varcte -> . FALSE

    RPAREN          shift and go to state 144
    LPAREN          shift and go to state 55
    LBRACKET        shift and go to state 53
    ID              shift and go to state 88
    PLUS            shift and go to state 78
    MINUS           shift and go to state 80
    CTEI            shift and go to state 81
    CTEF            shift and go to state 82
    CTEC            shift and go to state 83
    TRUE            shift and go to state 84
    FALSE           shift and go to state 85

    function_call_1                shift and go to state 145
    expression                     shift and go to state 146
    exp                            shift and go to state 61
    expression1                    shift and go to state 62
    term                           shift and go to state 70
    factor                         shift and go to state 76
    function_call                  shift and go to state 87
    factor_prima_1                 shift and go to state 77
    varcte                         shift and go to state 79

state 108

    (62) factor -> LBRACKET expression . RBRACKET

    RBRACKET        shift and go to state 147


state 109

    (41) condition -> IF LPAREN . expression RPAREN block
    (42) condition -> IF LPAREN . expression RPAREN block ELSE block
    (43) expression -> . exp
    (44) expression -> . expression1
    (53) exp -> . term
    (54) exp -> . term exp_1
    (45) expression1 -> . exp LT exp
    (46) expression1 -> . exp LE exp
    (47) expression1 -> . exp GT exp
    (48) expression1 -> . exp GE exp
    (49) expression1 -> . exp EQ exp
    (50) expression1 -> . exp NE exp
    (51) expression1 -> . exp AND exp
    (52) expression1 -> . exp OR exp
    (57) term -> . factor
    (58) term -> . factor term_2
    (61) factor -> . LPAREN expression RPAREN
    (62) factor -> . LBRACKET expression RBRACKET
    (63) factor -> . function_call
    (64) factor -> . factor_prima_1
    (89) function_call -> . ID LPAREN RPAREN SEMI
    (90) function_call -> . ID LPAREN function_call_1 RPAREN SEMI
    (91) function_call -> . ID LPAREN function_call_1 RPAREN
    (92) function_call -> . ID LPAREN RPAREN
    (65) factor_prima_1 -> . PLUS varcte
    (66) factor_prima_1 -> . MINUS varcte
    (67) factor_prima_1 -> . varcte
    (68) varcte -> . ID
    (69) varcte -> . CTEI
    (70) varcte -> . CTEF
    (71) varcte -> . CTEC
    (72) varcte -> . TRUE
    (73) varcte -> . FALSE

    LPAREN          shift and go to state 55
    LBRACKET        shift and go to state 53
    ID              shift and go to state 88
    PLUS            shift and go to state 78
    MINUS           shift and go to state 80
    CTEI            shift and go to state 81
    CTEF            shift and go to state 82
    CTEC            shift and go to state 83
    TRUE            shift and go to state 84
    FALSE           shift and go to state 85

    expression                     shift and go to state 148
    exp                            shift and go to state 61
    expression1                    shift and go to state 62
    term                           shift and go to state 70
    factor                         shift and go to state 76
    function_call                  shift and go to state 87
    factor_prima_1                 shift and go to state 77
    varcte                         shift and go to state 79

state 110

    (61) factor -> LPAREN expression . RPAREN

    RPAREN          shift and go to state 149


state 111

    (74) writing -> PRINT LPAREN . writing_1 RPAREN SEMI
    (75) writing_1 -> . expression COMMA writing_1
    (76) writing_1 -> . expression
    (77) writing_1 -> . CTESTRING
    (78) writing_1 -> . CTESTRING COMMA
    (43) expression -> . exp
    (44) expression -> . expression1
    (53) exp -> . term
    (54) exp -> . term exp_1
    (45) expression1 -> . exp LT exp
    (46) expression1 -> . exp LE exp
    (47) expression1 -> . exp GT exp
    (48) expression1 -> . exp GE exp
    (49) expression1 -> . exp EQ exp
    (50) expression1 -> . exp NE exp
    (51) expression1 -> . exp AND exp
    (52) expression1 -> . exp OR exp
    (57) term -> . factor
    (58) term -> . factor term_2
    (61) factor -> . LPAREN expression RPAREN
    (62) factor -> . LBRACKET expression RBRACKET
    (63) factor -> . function_call
    (64) factor -> . factor_prima_1
    (89) function_call -> . ID LPAREN RPAREN SEMI
    (90) function_call -> . ID LPAREN function_call_1 RPAREN SEMI
    (91) function_call -> . ID LPAREN function_call_1 RPAREN
    (92) function_call -> . ID LPAREN RPAREN
    (65) factor_prima_1 -> . PLUS varcte
    (66) factor_prima_1 -> . MINUS varcte
    (67) factor_prima_1 -> . varcte
    (68) varcte -> . ID
    (69) varcte -> . CTEI
    (70) varcte -> . CTEF
    (71) varcte -> . CTEC
    (72) varcte -> . TRUE
    (73) varcte -> . FALSE

    CTESTRING       shift and go to state 152
    LPAREN          shift and go to state 55
    LBRACKET        shift and go to state 53
    ID              shift and go to state 88
    PLUS            shift and go to state 78
    MINUS           shift and go to state 80
    CTEI            shift and go to state 81
    CTEF            shift and go to state 82
    CTEC            shift and go to state 83
    TRUE            shift and go to state 84
    FALSE           shift and go to state 85

    writing_1                      shift and go to state 150
    expression                     shift and go to state 151
    exp                            shift and go to state 61
    expression1                    shift and go to state 62
    term                           shift and go to state 70
    factor                         shift and go to state 76
    function_call                  shift and go to state 87
    factor_prima_1                 shift and go to state 77
    varcte                         shift and go to state 79

state 112

    (79) reading -> READ LPAREN . reading_1 RPAREN SEMI
    (80) reading_1 -> . ID COMMA reading_1
    (81) reading_1 -> . ID LBRACKET expression RBRACKET COMMA reading_1
    (82) reading_1 -> . ID
    (83) reading_1 -> . ID LBRACKET expression RBRACKET

    ID              shift and go to state 154

    reading_1                      shift and go to state 153

state 113

    (88) return -> RETURN expression . SEMI

    SEMI            shift and go to state 155


state 114

    (45) expression1 -> exp LT . exp
    (53) exp -> . term
    (54) exp -> . term exp_1
    (57) term -> . factor
    (58) term -> . factor term_2
    (61) factor -> . LPAREN expression RPAREN
    (62) factor -> . LBRACKET expression RBRACKET
    (63) factor -> . function_call
    (64) factor -> . factor_prima_1
    (89) function_call -> . ID LPAREN RPAREN SEMI
    (90) function_call -> . ID LPAREN function_call_1 RPAREN SEMI
    (91) function_call -> . ID LPAREN function_call_1 RPAREN
    (92) function_call -> . ID LPAREN RPAREN
    (65) factor_prima_1 -> . PLUS varcte
    (66) factor_prima_1 -> . MINUS varcte
    (67) factor_prima_1 -> . varcte
    (68) varcte -> . ID
    (69) varcte -> . CTEI
    (70) varcte -> . CTEF
    (71) varcte -> . CTEC
    (72) varcte -> . TRUE
    (73) varcte -> . FALSE

    LPAREN          shift and go to state 55
    LBRACKET        shift and go to state 53
    ID              shift and go to state 88
    PLUS            shift and go to state 78
    MINUS           shift and go to state 80
    CTEI            shift and go to state 81
    CTEF            shift and go to state 82
    CTEC            shift and go to state 83
    TRUE            shift and go to state 84
    FALSE           shift and go to state 85

    exp                            shift and go to state 156
    term                           shift and go to state 70
    factor                         shift and go to state 76
    function_call                  shift and go to state 87
    factor_prima_1                 shift and go to state 77
    varcte                         shift and go to state 79

state 115

    (46) expression1 -> exp LE . exp
    (53) exp -> . term
    (54) exp -> . term exp_1
    (57) term -> . factor
    (58) term -> . factor term_2
    (61) factor -> . LPAREN expression RPAREN
    (62) factor -> . LBRACKET expression RBRACKET
    (63) factor -> . function_call
    (64) factor -> . factor_prima_1
    (89) function_call -> . ID LPAREN RPAREN SEMI
    (90) function_call -> . ID LPAREN function_call_1 RPAREN SEMI
    (91) function_call -> . ID LPAREN function_call_1 RPAREN
    (92) function_call -> . ID LPAREN RPAREN
    (65) factor_prima_1 -> . PLUS varcte
    (66) factor_prima_1 -> . MINUS varcte
    (67) factor_prima_1 -> . varcte
    (68) varcte -> . ID
    (69) varcte -> . CTEI
    (70) varcte -> . CTEF
    (71) varcte -> . CTEC
    (72) varcte -> . TRUE
    (73) varcte -> . FALSE

    LPAREN          shift and go to state 55
    LBRACKET        shift and go to state 53
    ID              shift and go to state 88
    PLUS            shift and go to state 78
    MINUS           shift and go to state 80
    CTEI            shift and go to state 81
    CTEF            shift and go to state 82
    CTEC            shift and go to state 83
    TRUE            shift and go to state 84
    FALSE           shift and go to state 85

    exp                            shift and go to state 157
    term                           shift and go to state 70
    factor                         shift and go to state 76
    function_call                  shift and go to state 87
    factor_prima_1                 shift and go to state 77
    varcte                         shift and go to state 79

state 116

    (47) expression1 -> exp GT . exp
    (53) exp -> . term
    (54) exp -> . term exp_1
    (57) term -> . factor
    (58) term -> . factor term_2
    (61) factor -> . LPAREN expression RPAREN
    (62) factor -> . LBRACKET expression RBRACKET
    (63) factor -> . function_call
    (64) factor -> . factor_prima_1
    (89) function_call -> . ID LPAREN RPAREN SEMI
    (90) function_call -> . ID LPAREN function_call_1 RPAREN SEMI
    (91) function_call -> . ID LPAREN function_call_1 RPAREN
    (92) function_call -> . ID LPAREN RPAREN
    (65) factor_prima_1 -> . PLUS varcte
    (66) factor_prima_1 -> . MINUS varcte
    (67) factor_prima_1 -> . varcte
    (68) varcte -> . ID
    (69) varcte -> . CTEI
    (70) varcte -> . CTEF
    (71) varcte -> . CTEC
    (72) varcte -> . TRUE
    (73) varcte -> . FALSE

    LPAREN          shift and go to state 55
    LBRACKET        shift and go to state 53
    ID              shift and go to state 88
    PLUS            shift and go to state 78
    MINUS           shift and go to state 80
    CTEI            shift and go to state 81
    CTEF            shift and go to state 82
    CTEC            shift and go to state 83
    TRUE            shift and go to state 84
    FALSE           shift and go to state 85

    exp                            shift and go to state 158
    term                           shift and go to state 70
    factor                         shift and go to state 76
    function_call                  shift and go to state 87
    factor_prima_1                 shift and go to state 77
    varcte                         shift and go to state 79

state 117

    (48) expression1 -> exp GE . exp
    (53) exp -> . term
    (54) exp -> . term exp_1
    (57) term -> . factor
    (58) term -> . factor term_2
    (61) factor -> . LPAREN expression RPAREN
    (62) factor -> . LBRACKET expression RBRACKET
    (63) factor -> . function_call
    (64) factor -> . factor_prima_1
    (89) function_call -> . ID LPAREN RPAREN SEMI
    (90) function_call -> . ID LPAREN function_call_1 RPAREN SEMI
    (91) function_call -> . ID LPAREN function_call_1 RPAREN
    (92) function_call -> . ID LPAREN RPAREN
    (65) factor_prima_1 -> . PLUS varcte
    (66) factor_prima_1 -> . MINUS varcte
    (67) factor_prima_1 -> . varcte
    (68) varcte -> . ID
    (69) varcte -> . CTEI
    (70) varcte -> . CTEF
    (71) varcte -> . CTEC
    (72) varcte -> . TRUE
    (73) varcte -> . FALSE

    LPAREN          shift and go to state 55
    LBRACKET        shift and go to state 53
    ID              shift and go to state 88
    PLUS            shift and go to state 78
    MINUS           shift and go to state 80
    CTEI            shift and go to state 81
    CTEF            shift and go to state 82
    CTEC            shift and go to state 83
    TRUE            shift and go to state 84
    FALSE           shift and go to state 85

    exp                            shift and go to state 159
    term                           shift and go to state 70
    factor                         shift and go to state 76
    function_call                  shift and go to state 87
    factor_prima_1                 shift and go to state 77
    varcte                         shift and go to state 79

state 118

    (49) expression1 -> exp EQ . exp
    (53) exp -> . term
    (54) exp -> . term exp_1
    (57) term -> . factor
    (58) term -> . factor term_2
    (61) factor -> . LPAREN expression RPAREN
    (62) factor -> . LBRACKET expression RBRACKET
    (63) factor -> . function_call
    (64) factor -> . factor_prima_1
    (89) function_call -> . ID LPAREN RPAREN SEMI
    (90) function_call -> . ID LPAREN function_call_1 RPAREN SEMI
    (91) function_call -> . ID LPAREN function_call_1 RPAREN
    (92) function_call -> . ID LPAREN RPAREN
    (65) factor_prima_1 -> . PLUS varcte
    (66) factor_prima_1 -> . MINUS varcte
    (67) factor_prima_1 -> . varcte
    (68) varcte -> . ID
    (69) varcte -> . CTEI
    (70) varcte -> . CTEF
    (71) varcte -> . CTEC
    (72) varcte -> . TRUE
    (73) varcte -> . FALSE

    LPAREN          shift and go to state 55
    LBRACKET        shift and go to state 53
    ID              shift and go to state 88
    PLUS            shift and go to state 78
    MINUS           shift and go to state 80
    CTEI            shift and go to state 81
    CTEF            shift and go to state 82
    CTEC            shift and go to state 83
    TRUE            shift and go to state 84
    FALSE           shift and go to state 85

    exp                            shift and go to state 160
    term                           shift and go to state 70
    factor                         shift and go to state 76
    function_call                  shift and go to state 87
    factor_prima_1                 shift and go to state 77
    varcte                         shift and go to state 79

state 119

    (50) expression1 -> exp NE . exp
    (53) exp -> . term
    (54) exp -> . term exp_1
    (57) term -> . factor
    (58) term -> . factor term_2
    (61) factor -> . LPAREN expression RPAREN
    (62) factor -> . LBRACKET expression RBRACKET
    (63) factor -> . function_call
    (64) factor -> . factor_prima_1
    (89) function_call -> . ID LPAREN RPAREN SEMI
    (90) function_call -> . ID LPAREN function_call_1 RPAREN SEMI
    (91) function_call -> . ID LPAREN function_call_1 RPAREN
    (92) function_call -> . ID LPAREN RPAREN
    (65) factor_prima_1 -> . PLUS varcte
    (66) factor_prima_1 -> . MINUS varcte
    (67) factor_prima_1 -> . varcte
    (68) varcte -> . ID
    (69) varcte -> . CTEI
    (70) varcte -> . CTEF
    (71) varcte -> . CTEC
    (72) varcte -> . TRUE
    (73) varcte -> . FALSE

    LPAREN          shift and go to state 55
    LBRACKET        shift and go to state 53
    ID              shift and go to state 88
    PLUS            shift and go to state 78
    MINUS           shift and go to state 80
    CTEI            shift and go to state 81
    CTEF            shift and go to state 82
    CTEC            shift and go to state 83
    TRUE            shift and go to state 84
    FALSE           shift and go to state 85

    exp                            shift and go to state 161
    term                           shift and go to state 70
    factor                         shift and go to state 76
    function_call                  shift and go to state 87
    factor_prima_1                 shift and go to state 77
    varcte                         shift and go to state 79

state 120

    (51) expression1 -> exp AND . exp
    (53) exp -> . term
    (54) exp -> . term exp_1
    (57) term -> . factor
    (58) term -> . factor term_2
    (61) factor -> . LPAREN expression RPAREN
    (62) factor -> . LBRACKET expression RBRACKET
    (63) factor -> . function_call
    (64) factor -> . factor_prima_1
    (89) function_call -> . ID LPAREN RPAREN SEMI
    (90) function_call -> . ID LPAREN function_call_1 RPAREN SEMI
    (91) function_call -> . ID LPAREN function_call_1 RPAREN
    (92) function_call -> . ID LPAREN RPAREN
    (65) factor_prima_1 -> . PLUS varcte
    (66) factor_prima_1 -> . MINUS varcte
    (67) factor_prima_1 -> . varcte
    (68) varcte -> . ID
    (69) varcte -> . CTEI
    (70) varcte -> . CTEF
    (71) varcte -> . CTEC
    (72) varcte -> . TRUE
    (73) varcte -> . FALSE

    LPAREN          shift and go to state 55
    LBRACKET        shift and go to state 53
    ID              shift and go to state 88
    PLUS            shift and go to state 78
    MINUS           shift and go to state 80
    CTEI            shift and go to state 81
    CTEF            shift and go to state 82
    CTEC            shift and go to state 83
    TRUE            shift and go to state 84
    FALSE           shift and go to state 85

    exp                            shift and go to state 162
    term                           shift and go to state 70
    factor                         shift and go to state 76
    function_call                  shift and go to state 87
    factor_prima_1                 shift and go to state 77
    varcte                         shift and go to state 79

state 121

    (52) expression1 -> exp OR . exp
    (53) exp -> . term
    (54) exp -> . term exp_1
    (57) term -> . factor
    (58) term -> . factor term_2
    (61) factor -> . LPAREN expression RPAREN
    (62) factor -> . LBRACKET expression RBRACKET
    (63) factor -> . function_call
    (64) factor -> . factor_prima_1
    (89) function_call -> . ID LPAREN RPAREN SEMI
    (90) function_call -> . ID LPAREN function_call_1 RPAREN SEMI
    (91) function_call -> . ID LPAREN function_call_1 RPAREN
    (92) function_call -> . ID LPAREN RPAREN
    (65) factor_prima_1 -> . PLUS varcte
    (66) factor_prima_1 -> . MINUS varcte
    (67) factor_prima_1 -> . varcte
    (68) varcte -> . ID
    (69) varcte -> . CTEI
    (70) varcte -> . CTEF
    (71) varcte -> . CTEC
    (72) varcte -> . TRUE
    (73) varcte -> . FALSE

    LPAREN          shift and go to state 55
    LBRACKET        shift and go to state 53
    ID              shift and go to state 88
    PLUS            shift and go to state 78
    MINUS           shift and go to state 80
    CTEI            shift and go to state 81
    CTEF            shift and go to state 82
    CTEC            shift and go to state 83
    TRUE            shift and go to state 84
    FALSE           shift and go to state 85

    exp                            shift and go to state 163
    term                           shift and go to state 70
    factor                         shift and go to state 76
    function_call                  shift and go to state 87
    factor_prima_1                 shift and go to state 77
    varcte                         shift and go to state 79

state 122

    (87) non_conditional_loop -> FOR LPAREN . ID EQUALS expression TO expression BY expression RPAREN block

    ID              shift and go to state 164


state 123

    (86) conditional_loop -> WHILE LPAREN . expression RPAREN DO block
    (43) expression -> . exp
    (44) expression -> . expression1
    (53) exp -> . term
    (54) exp -> . term exp_1
    (45) expression1 -> . exp LT exp
    (46) expression1 -> . exp LE exp
    (47) expression1 -> . exp GT exp
    (48) expression1 -> . exp GE exp
    (49) expression1 -> . exp EQ exp
    (50) expression1 -> . exp NE exp
    (51) expression1 -> . exp AND exp
    (52) expression1 -> . exp OR exp
    (57) term -> . factor
    (58) term -> . factor term_2
    (61) factor -> . LPAREN expression RPAREN
    (62) factor -> . LBRACKET expression RBRACKET
    (63) factor -> . function_call
    (64) factor -> . factor_prima_1
    (89) function_call -> . ID LPAREN RPAREN SEMI
    (90) function_call -> . ID LPAREN function_call_1 RPAREN SEMI
    (91) function_call -> . ID LPAREN function_call_1 RPAREN
    (92) function_call -> . ID LPAREN RPAREN
    (65) factor_prima_1 -> . PLUS varcte
    (66) factor_prima_1 -> . MINUS varcte
    (67) factor_prima_1 -> . varcte
    (68) varcte -> . ID
    (69) varcte -> . CTEI
    (70) varcte -> . CTEF
    (71) varcte -> . CTEC
    (72) varcte -> . TRUE
    (73) varcte -> . FALSE

    LPAREN          shift and go to state 55
    LBRACKET        shift and go to state 53
    ID              shift and go to state 88
    PLUS            shift and go to state 78
    MINUS           shift and go to state 80
    CTEI            shift and go to state 81
    CTEF            shift and go to state 82
    CTEC            shift and go to state 83
    TRUE            shift and go to state 84
    FALSE           shift and go to state 85

    expression                     shift and go to state 165
    exp                            shift and go to state 61
    expression1                    shift and go to state 62
    term                           shift and go to state 70
    factor                         shift and go to state 76
    function_call                  shift and go to state 87
    factor_prima_1                 shift and go to state 77
    varcte                         shift and go to state 79

state 124

    (54) exp -> term exp_1 .

    LT              reduce using rule 54 (exp -> term exp_1 .)
    LE              reduce using rule 54 (exp -> term exp_1 .)
    GT              reduce using rule 54 (exp -> term exp_1 .)
    GE              reduce using rule 54 (exp -> term exp_1 .)
    EQ              reduce using rule 54 (exp -> term exp_1 .)
    NE              reduce using rule 54 (exp -> term exp_1 .)
    AND             reduce using rule 54 (exp -> term exp_1 .)
    OR              reduce using rule 54 (exp -> term exp_1 .)
    ID              reduce using rule 54 (exp -> term exp_1 .)
    LET             reduce using rule 54 (exp -> term exp_1 .)
    IF              reduce using rule 54 (exp -> term exp_1 .)
    PRINT           reduce using rule 54 (exp -> term exp_1 .)
    READ            reduce using rule 54 (exp -> term exp_1 .)
    RETURN          reduce using rule 54 (exp -> term exp_1 .)
    FOR             reduce using rule 54 (exp -> term exp_1 .)
    WHILE           reduce using rule 54 (exp -> term exp_1 .)
    MEAN            reduce using rule 54 (exp -> term exp_1 .)
    MEDIAN          reduce using rule 54 (exp -> term exp_1 .)
    MODE            reduce using rule 54 (exp -> term exp_1 .)
    VARIANCE        reduce using rule 54 (exp -> term exp_1 .)
    STDEV           reduce using rule 54 (exp -> term exp_1 .)
    LPAREN          reduce using rule 54 (exp -> term exp_1 .)
    LBRACKET        reduce using rule 54 (exp -> term exp_1 .)
    PLUS            reduce using rule 54 (exp -> term exp_1 .)
    MINUS           reduce using rule 54 (exp -> term exp_1 .)
    CTEI            reduce using rule 54 (exp -> term exp_1 .)
    CTEF            reduce using rule 54 (exp -> term exp_1 .)
    CTEC            reduce using rule 54 (exp -> term exp_1 .)
    TRUE            reduce using rule 54 (exp -> term exp_1 .)
    FALSE           reduce using rule 54 (exp -> term exp_1 .)
    RBRACE          reduce using rule 54 (exp -> term exp_1 .)
    RBRACKET        reduce using rule 54 (exp -> term exp_1 .)
    RPAREN          reduce using rule 54 (exp -> term exp_1 .)
    SEMI            reduce using rule 54 (exp -> term exp_1 .)
    COMMA           reduce using rule 54 (exp -> term exp_1 .)
    TO              reduce using rule 54 (exp -> term exp_1 .)
    BY              reduce using rule 54 (exp -> term exp_1 .)


state 125

    (55) exp_1 -> PLUS . exp
    (53) exp -> . term
    (54) exp -> . term exp_1
    (57) term -> . factor
    (58) term -> . factor term_2
    (61) factor -> . LPAREN expression RPAREN
    (62) factor -> . LBRACKET expression RBRACKET
    (63) factor -> . function_call
    (64) factor -> . factor_prima_1
    (89) function_call -> . ID LPAREN RPAREN SEMI
    (90) function_call -> . ID LPAREN function_call_1 RPAREN SEMI
    (91) function_call -> . ID LPAREN function_call_1 RPAREN
    (92) function_call -> . ID LPAREN RPAREN
    (65) factor_prima_1 -> . PLUS varcte
    (66) factor_prima_1 -> . MINUS varcte
    (67) factor_prima_1 -> . varcte
    (68) varcte -> . ID
    (69) varcte -> . CTEI
    (70) varcte -> . CTEF
    (71) varcte -> . CTEC
    (72) varcte -> . TRUE
    (73) varcte -> . FALSE

    LPAREN          shift and go to state 55
    LBRACKET        shift and go to state 53
    ID              shift and go to state 88
    PLUS            shift and go to state 78
    MINUS           shift and go to state 80
    CTEI            shift and go to state 81
    CTEF            shift and go to state 82
    CTEC            shift and go to state 83
    TRUE            shift and go to state 84
    FALSE           shift and go to state 85

    exp                            shift and go to state 166
    term                           shift and go to state 70
    factor                         shift and go to state 76
    function_call                  shift and go to state 87
    factor_prima_1                 shift and go to state 77
    varcte                         shift and go to state 79

state 126

    (56) exp_1 -> MINUS . exp
    (53) exp -> . term
    (54) exp -> . term exp_1
    (57) term -> . factor
    (58) term -> . factor term_2
    (61) factor -> . LPAREN expression RPAREN
    (62) factor -> . LBRACKET expression RBRACKET
    (63) factor -> . function_call
    (64) factor -> . factor_prima_1
    (89) function_call -> . ID LPAREN RPAREN SEMI
    (90) function_call -> . ID LPAREN function_call_1 RPAREN SEMI
    (91) function_call -> . ID LPAREN function_call_1 RPAREN
    (92) function_call -> . ID LPAREN RPAREN
    (65) factor_prima_1 -> . PLUS varcte
    (66) factor_prima_1 -> . MINUS varcte
    (67) factor_prima_1 -> . varcte
    (68) varcte -> . ID
    (69) varcte -> . CTEI
    (70) varcte -> . CTEF
    (71) varcte -> . CTEC
    (72) varcte -> . TRUE
    (73) varcte -> . FALSE

    LPAREN          shift and go to state 55
    LBRACKET        shift and go to state 53
    ID              shift and go to state 88
    PLUS            shift and go to state 78
    MINUS           shift and go to state 80
    CTEI            shift and go to state 81
    CTEF            shift and go to state 82
    CTEC            shift and go to state 83
    TRUE            shift and go to state 84
    FALSE           shift and go to state 85

    exp                            shift and go to state 167
    term                           shift and go to state 70
    factor                         shift and go to state 76
    function_call                  shift and go to state 87
    factor_prima_1                 shift and go to state 77
    varcte                         shift and go to state 79

state 127

    (95) mean -> MEAN LPAREN . expression RPAREN SEMI
    (43) expression -> . exp
    (44) expression -> . expression1
    (53) exp -> . term
    (54) exp -> . term exp_1
    (45) expression1 -> . exp LT exp
    (46) expression1 -> . exp LE exp
    (47) expression1 -> . exp GT exp
    (48) expression1 -> . exp GE exp
    (49) expression1 -> . exp EQ exp
    (50) expression1 -> . exp NE exp
    (51) expression1 -> . exp AND exp
    (52) expression1 -> . exp OR exp
    (57) term -> . factor
    (58) term -> . factor term_2
    (61) factor -> . LPAREN expression RPAREN
    (62) factor -> . LBRACKET expression RBRACKET
    (63) factor -> . function_call
    (64) factor -> . factor_prima_1
    (89) function_call -> . ID LPAREN RPAREN SEMI
    (90) function_call -> . ID LPAREN function_call_1 RPAREN SEMI
    (91) function_call -> . ID LPAREN function_call_1 RPAREN
    (92) function_call -> . ID LPAREN RPAREN
    (65) factor_prima_1 -> . PLUS varcte
    (66) factor_prima_1 -> . MINUS varcte
    (67) factor_prima_1 -> . varcte
    (68) varcte -> . ID
    (69) varcte -> . CTEI
    (70) varcte -> . CTEF
    (71) varcte -> . CTEC
    (72) varcte -> . TRUE
    (73) varcte -> . FALSE

    LPAREN          shift and go to state 55
    LBRACKET        shift and go to state 53
    ID              shift and go to state 88
    PLUS            shift and go to state 78
    MINUS           shift and go to state 80
    CTEI            shift and go to state 81
    CTEF            shift and go to state 82
    CTEC            shift and go to state 83
    TRUE            shift and go to state 84
    FALSE           shift and go to state 85

    expression                     shift and go to state 168
    exp                            shift and go to state 61
    expression1                    shift and go to state 62
    term                           shift and go to state 70
    factor                         shift and go to state 76
    function_call                  shift and go to state 87
    factor_prima_1                 shift and go to state 77
    varcte                         shift and go to state 79

state 128

    (96) median -> MEDIAN LPAREN . expression RPAREN SEMI
    (43) expression -> . exp
    (44) expression -> . expression1
    (53) exp -> . term
    (54) exp -> . term exp_1
    (45) expression1 -> . exp LT exp
    (46) expression1 -> . exp LE exp
    (47) expression1 -> . exp GT exp
    (48) expression1 -> . exp GE exp
    (49) expression1 -> . exp EQ exp
    (50) expression1 -> . exp NE exp
    (51) expression1 -> . exp AND exp
    (52) expression1 -> . exp OR exp
    (57) term -> . factor
    (58) term -> . factor term_2
    (61) factor -> . LPAREN expression RPAREN
    (62) factor -> . LBRACKET expression RBRACKET
    (63) factor -> . function_call
    (64) factor -> . factor_prima_1
    (89) function_call -> . ID LPAREN RPAREN SEMI
    (90) function_call -> . ID LPAREN function_call_1 RPAREN SEMI
    (91) function_call -> . ID LPAREN function_call_1 RPAREN
    (92) function_call -> . ID LPAREN RPAREN
    (65) factor_prima_1 -> . PLUS varcte
    (66) factor_prima_1 -> . MINUS varcte
    (67) factor_prima_1 -> . varcte
    (68) varcte -> . ID
    (69) varcte -> . CTEI
    (70) varcte -> . CTEF
    (71) varcte -> . CTEC
    (72) varcte -> . TRUE
    (73) varcte -> . FALSE

    LPAREN          shift and go to state 55
    LBRACKET        shift and go to state 53
    ID              shift and go to state 88
    PLUS            shift and go to state 78
    MINUS           shift and go to state 80
    CTEI            shift and go to state 81
    CTEF            shift and go to state 82
    CTEC            shift and go to state 83
    TRUE            shift and go to state 84
    FALSE           shift and go to state 85

    expression                     shift and go to state 169
    exp                            shift and go to state 61
    expression1                    shift and go to state 62
    term                           shift and go to state 70
    factor                         shift and go to state 76
    function_call                  shift and go to state 87
    factor_prima_1                 shift and go to state 77
    varcte                         shift and go to state 79

state 129

    (97) mode -> MODE LPAREN . expression RPAREN SEMI
    (43) expression -> . exp
    (44) expression -> . expression1
    (53) exp -> . term
    (54) exp -> . term exp_1
    (45) expression1 -> . exp LT exp
    (46) expression1 -> . exp LE exp
    (47) expression1 -> . exp GT exp
    (48) expression1 -> . exp GE exp
    (49) expression1 -> . exp EQ exp
    (50) expression1 -> . exp NE exp
    (51) expression1 -> . exp AND exp
    (52) expression1 -> . exp OR exp
    (57) term -> . factor
    (58) term -> . factor term_2
    (61) factor -> . LPAREN expression RPAREN
    (62) factor -> . LBRACKET expression RBRACKET
    (63) factor -> . function_call
    (64) factor -> . factor_prima_1
    (89) function_call -> . ID LPAREN RPAREN SEMI
    (90) function_call -> . ID LPAREN function_call_1 RPAREN SEMI
    (91) function_call -> . ID LPAREN function_call_1 RPAREN
    (92) function_call -> . ID LPAREN RPAREN
    (65) factor_prima_1 -> . PLUS varcte
    (66) factor_prima_1 -> . MINUS varcte
    (67) factor_prima_1 -> . varcte
    (68) varcte -> . ID
    (69) varcte -> . CTEI
    (70) varcte -> . CTEF
    (71) varcte -> . CTEC
    (72) varcte -> . TRUE
    (73) varcte -> . FALSE

    LPAREN          shift and go to state 55
    LBRACKET        shift and go to state 53
    ID              shift and go to state 88
    PLUS            shift and go to state 78
    MINUS           shift and go to state 80
    CTEI            shift and go to state 81
    CTEF            shift and go to state 82
    CTEC            shift and go to state 83
    TRUE            shift and go to state 84
    FALSE           shift and go to state 85

    expression                     shift and go to state 170
    exp                            shift and go to state 61
    expression1                    shift and go to state 62
    term                           shift and go to state 70
    factor                         shift and go to state 76
    function_call                  shift and go to state 87
    factor_prima_1                 shift and go to state 77
    varcte                         shift and go to state 79

state 130

    (98) variance -> VARIANCE LPAREN . expression RPAREN SEMI
    (43) expression -> . exp
    (44) expression -> . expression1
    (53) exp -> . term
    (54) exp -> . term exp_1
    (45) expression1 -> . exp LT exp
    (46) expression1 -> . exp LE exp
    (47) expression1 -> . exp GT exp
    (48) expression1 -> . exp GE exp
    (49) expression1 -> . exp EQ exp
    (50) expression1 -> . exp NE exp
    (51) expression1 -> . exp AND exp
    (52) expression1 -> . exp OR exp
    (57) term -> . factor
    (58) term -> . factor term_2
    (61) factor -> . LPAREN expression RPAREN
    (62) factor -> . LBRACKET expression RBRACKET
    (63) factor -> . function_call
    (64) factor -> . factor_prima_1
    (89) function_call -> . ID LPAREN RPAREN SEMI
    (90) function_call -> . ID LPAREN function_call_1 RPAREN SEMI
    (91) function_call -> . ID LPAREN function_call_1 RPAREN
    (92) function_call -> . ID LPAREN RPAREN
    (65) factor_prima_1 -> . PLUS varcte
    (66) factor_prima_1 -> . MINUS varcte
    (67) factor_prima_1 -> . varcte
    (68) varcte -> . ID
    (69) varcte -> . CTEI
    (70) varcte -> . CTEF
    (71) varcte -> . CTEC
    (72) varcte -> . TRUE
    (73) varcte -> . FALSE

    LPAREN          shift and go to state 55
    LBRACKET        shift and go to state 53
    ID              shift and go to state 88
    PLUS            shift and go to state 78
    MINUS           shift and go to state 80
    CTEI            shift and go to state 81
    CTEF            shift and go to state 82
    CTEC            shift and go to state 83
    TRUE            shift and go to state 84
    FALSE           shift and go to state 85

    expression                     shift and go to state 171
    exp                            shift and go to state 61
    expression1                    shift and go to state 62
    term                           shift and go to state 70
    factor                         shift and go to state 76
    function_call                  shift and go to state 87
    factor_prima_1                 shift and go to state 77
    varcte                         shift and go to state 79

state 131

    (99) standard_deviation -> STDEV LPAREN . expression RPAREN SEMI
    (43) expression -> . exp
    (44) expression -> . expression1
    (53) exp -> . term
    (54) exp -> . term exp_1
    (45) expression1 -> . exp LT exp
    (46) expression1 -> . exp LE exp
    (47) expression1 -> . exp GT exp
    (48) expression1 -> . exp GE exp
    (49) expression1 -> . exp EQ exp
    (50) expression1 -> . exp NE exp
    (51) expression1 -> . exp AND exp
    (52) expression1 -> . exp OR exp
    (57) term -> . factor
    (58) term -> . factor term_2
    (61) factor -> . LPAREN expression RPAREN
    (62) factor -> . LBRACKET expression RBRACKET
    (63) factor -> . function_call
    (64) factor -> . factor_prima_1
    (89) function_call -> . ID LPAREN RPAREN SEMI
    (90) function_call -> . ID LPAREN function_call_1 RPAREN SEMI
    (91) function_call -> . ID LPAREN function_call_1 RPAREN
    (92) function_call -> . ID LPAREN RPAREN
    (65) factor_prima_1 -> . PLUS varcte
    (66) factor_prima_1 -> . MINUS varcte
    (67) factor_prima_1 -> . varcte
    (68) varcte -> . ID
    (69) varcte -> . CTEI
    (70) varcte -> . CTEF
    (71) varcte -> . CTEC
    (72) varcte -> . TRUE
    (73) varcte -> . FALSE

    LPAREN          shift and go to state 55
    LBRACKET        shift and go to state 53
    ID              shift and go to state 88
    PLUS            shift and go to state 78
    MINUS           shift and go to state 80
    CTEI            shift and go to state 81
    CTEF            shift and go to state 82
    CTEC            shift and go to state 83
    TRUE            shift and go to state 84
    FALSE           shift and go to state 85

    expression                     shift and go to state 172
    exp                            shift and go to state 61
    expression1                    shift and go to state 62
    term                           shift and go to state 70
    factor                         shift and go to state 76
    function_call                  shift and go to state 87
    factor_prima_1                 shift and go to state 77
    varcte                         shift and go to state 79

state 132

    (58) term -> factor term_2 .

    PLUS            reduce using rule 58 (term -> factor term_2 .)
    MINUS           reduce using rule 58 (term -> factor term_2 .)
    LT              reduce using rule 58 (term -> factor term_2 .)
    LE              reduce using rule 58 (term -> factor term_2 .)
    GT              reduce using rule 58 (term -> factor term_2 .)
    GE              reduce using rule 58 (term -> factor term_2 .)
    EQ              reduce using rule 58 (term -> factor term_2 .)
    NE              reduce using rule 58 (term -> factor term_2 .)
    AND             reduce using rule 58 (term -> factor term_2 .)
    OR              reduce using rule 58 (term -> factor term_2 .)
    ID              reduce using rule 58 (term -> factor term_2 .)
    LET             reduce using rule 58 (term -> factor term_2 .)
    IF              reduce using rule 58 (term -> factor term_2 .)
    PRINT           reduce using rule 58 (term -> factor term_2 .)
    READ            reduce using rule 58 (term -> factor term_2 .)
    RETURN          reduce using rule 58 (term -> factor term_2 .)
    FOR             reduce using rule 58 (term -> factor term_2 .)
    WHILE           reduce using rule 58 (term -> factor term_2 .)
    MEAN            reduce using rule 58 (term -> factor term_2 .)
    MEDIAN          reduce using rule 58 (term -> factor term_2 .)
    MODE            reduce using rule 58 (term -> factor term_2 .)
    VARIANCE        reduce using rule 58 (term -> factor term_2 .)
    STDEV           reduce using rule 58 (term -> factor term_2 .)
    LPAREN          reduce using rule 58 (term -> factor term_2 .)
    LBRACKET        reduce using rule 58 (term -> factor term_2 .)
    CTEI            reduce using rule 58 (term -> factor term_2 .)
    CTEF            reduce using rule 58 (term -> factor term_2 .)
    CTEC            reduce using rule 58 (term -> factor term_2 .)
    TRUE            reduce using rule 58 (term -> factor term_2 .)
    FALSE           reduce using rule 58 (term -> factor term_2 .)
    RBRACE          reduce using rule 58 (term -> factor term_2 .)
    RBRACKET        reduce using rule 58 (term -> factor term_2 .)
    RPAREN          reduce using rule 58 (term -> factor term_2 .)
    SEMI            reduce using rule 58 (term -> factor term_2 .)
    COMMA           reduce using rule 58 (term -> factor term_2 .)
    TO              reduce using rule 58 (term -> factor term_2 .)
    BY              reduce using rule 58 (term -> factor term_2 .)


state 133

    (59) term_2 -> TIMES . term
    (57) term -> . factor
    (58) term -> . factor term_2
    (61) factor -> . LPAREN expression RPAREN
    (62) factor -> . LBRACKET expression RBRACKET
    (63) factor -> . function_call
    (64) factor -> . factor_prima_1
    (89) function_call -> . ID LPAREN RPAREN SEMI
    (90) function_call -> . ID LPAREN function_call_1 RPAREN SEMI
    (91) function_call -> . ID LPAREN function_call_1 RPAREN
    (92) function_call -> . ID LPAREN RPAREN
    (65) factor_prima_1 -> . PLUS varcte
    (66) factor_prima_1 -> . MINUS varcte
    (67) factor_prima_1 -> . varcte
    (68) varcte -> . ID
    (69) varcte -> . CTEI
    (70) varcte -> . CTEF
    (71) varcte -> . CTEC
    (72) varcte -> . TRUE
    (73) varcte -> . FALSE

    LPAREN          shift and go to state 55
    LBRACKET        shift and go to state 53
    ID              shift and go to state 88
    PLUS            shift and go to state 78
    MINUS           shift and go to state 80
    CTEI            shift and go to state 81
    CTEF            shift and go to state 82
    CTEC            shift and go to state 83
    TRUE            shift and go to state 84
    FALSE           shift and go to state 85

    term                           shift and go to state 173
    factor                         shift and go to state 76
    function_call                  shift and go to state 87
    factor_prima_1                 shift and go to state 77
    varcte                         shift and go to state 79

state 134

    (60) term_2 -> DIVIDE . term
    (57) term -> . factor
    (58) term -> . factor term_2
    (61) factor -> . LPAREN expression RPAREN
    (62) factor -> . LBRACKET expression RBRACKET
    (63) factor -> . function_call
    (64) factor -> . factor_prima_1
    (89) function_call -> . ID LPAREN RPAREN SEMI
    (90) function_call -> . ID LPAREN function_call_1 RPAREN SEMI
    (91) function_call -> . ID LPAREN function_call_1 RPAREN
    (92) function_call -> . ID LPAREN RPAREN
    (65) factor_prima_1 -> . PLUS varcte
    (66) factor_prima_1 -> . MINUS varcte
    (67) factor_prima_1 -> . varcte
    (68) varcte -> . ID
    (69) varcte -> . CTEI
    (70) varcte -> . CTEF
    (71) varcte -> . CTEC
    (72) varcte -> . TRUE
    (73) varcte -> . FALSE

    LPAREN          shift and go to state 55
    LBRACKET        shift and go to state 53
    ID              shift and go to state 88
    PLUS            shift and go to state 78
    MINUS           shift and go to state 80
    CTEI            shift and go to state 81
    CTEF            shift and go to state 82
    CTEC            shift and go to state 83
    TRUE            shift and go to state 84
    FALSE           shift and go to state 85

    term                           shift and go to state 174
    factor                         shift and go to state 76
    function_call                  shift and go to state 87
    factor_prima_1                 shift and go to state 77
    varcte                         shift and go to state 79

state 135

    (65) factor_prima_1 -> PLUS varcte .

    TIMES           reduce using rule 65 (factor_prima_1 -> PLUS varcte .)
    DIVIDE          reduce using rule 65 (factor_prima_1 -> PLUS varcte .)
    PLUS            reduce using rule 65 (factor_prima_1 -> PLUS varcte .)
    MINUS           reduce using rule 65 (factor_prima_1 -> PLUS varcte .)
    LT              reduce using rule 65 (factor_prima_1 -> PLUS varcte .)
    LE              reduce using rule 65 (factor_prima_1 -> PLUS varcte .)
    GT              reduce using rule 65 (factor_prima_1 -> PLUS varcte .)
    GE              reduce using rule 65 (factor_prima_1 -> PLUS varcte .)
    EQ              reduce using rule 65 (factor_prima_1 -> PLUS varcte .)
    NE              reduce using rule 65 (factor_prima_1 -> PLUS varcte .)
    AND             reduce using rule 65 (factor_prima_1 -> PLUS varcte .)
    OR              reduce using rule 65 (factor_prima_1 -> PLUS varcte .)
    ID              reduce using rule 65 (factor_prima_1 -> PLUS varcte .)
    LET             reduce using rule 65 (factor_prima_1 -> PLUS varcte .)
    IF              reduce using rule 65 (factor_prima_1 -> PLUS varcte .)
    PRINT           reduce using rule 65 (factor_prima_1 -> PLUS varcte .)
    READ            reduce using rule 65 (factor_prima_1 -> PLUS varcte .)
    RETURN          reduce using rule 65 (factor_prima_1 -> PLUS varcte .)
    FOR             reduce using rule 65 (factor_prima_1 -> PLUS varcte .)
    WHILE           reduce using rule 65 (factor_prima_1 -> PLUS varcte .)
    MEAN            reduce using rule 65 (factor_prima_1 -> PLUS varcte .)
    MEDIAN          reduce using rule 65 (factor_prima_1 -> PLUS varcte .)
    MODE            reduce using rule 65 (factor_prima_1 -> PLUS varcte .)
    VARIANCE        reduce using rule 65 (factor_prima_1 -> PLUS varcte .)
    STDEV           reduce using rule 65 (factor_prima_1 -> PLUS varcte .)
    LPAREN          reduce using rule 65 (factor_prima_1 -> PLUS varcte .)
    LBRACKET        reduce using rule 65 (factor_prima_1 -> PLUS varcte .)
    CTEI            reduce using rule 65 (factor_prima_1 -> PLUS varcte .)
    CTEF            reduce using rule 65 (factor_prima_1 -> PLUS varcte .)
    CTEC            reduce using rule 65 (factor_prima_1 -> PLUS varcte .)
    TRUE            reduce using rule 65 (factor_prima_1 -> PLUS varcte .)
    FALSE           reduce using rule 65 (factor_prima_1 -> PLUS varcte .)
    RBRACE          reduce using rule 65 (factor_prima_1 -> PLUS varcte .)
    RBRACKET        reduce using rule 65 (factor_prima_1 -> PLUS varcte .)
    RPAREN          reduce using rule 65 (factor_prima_1 -> PLUS varcte .)
    SEMI            reduce using rule 65 (factor_prima_1 -> PLUS varcte .)
    COMMA           reduce using rule 65 (factor_prima_1 -> PLUS varcte .)
    TO              reduce using rule 65 (factor_prima_1 -> PLUS varcte .)
    BY              reduce using rule 65 (factor_prima_1 -> PLUS varcte .)


state 136

    (68) varcte -> ID .

    TIMES           reduce using rule 68 (varcte -> ID .)
    DIVIDE          reduce using rule 68 (varcte -> ID .)
    PLUS            reduce using rule 68 (varcte -> ID .)
    MINUS           reduce using rule 68 (varcte -> ID .)
    LT              reduce using rule 68 (varcte -> ID .)
    LE              reduce using rule 68 (varcte -> ID .)
    GT              reduce using rule 68 (varcte -> ID .)
    GE              reduce using rule 68 (varcte -> ID .)
    EQ              reduce using rule 68 (varcte -> ID .)
    NE              reduce using rule 68 (varcte -> ID .)
    AND             reduce using rule 68 (varcte -> ID .)
    OR              reduce using rule 68 (varcte -> ID .)
    ID              reduce using rule 68 (varcte -> ID .)
    LET             reduce using rule 68 (varcte -> ID .)
    IF              reduce using rule 68 (varcte -> ID .)
    PRINT           reduce using rule 68 (varcte -> ID .)
    READ            reduce using rule 68 (varcte -> ID .)
    RETURN          reduce using rule 68 (varcte -> ID .)
    FOR             reduce using rule 68 (varcte -> ID .)
    WHILE           reduce using rule 68 (varcte -> ID .)
    MEAN            reduce using rule 68 (varcte -> ID .)
    MEDIAN          reduce using rule 68 (varcte -> ID .)
    MODE            reduce using rule 68 (varcte -> ID .)
    VARIANCE        reduce using rule 68 (varcte -> ID .)
    STDEV           reduce using rule 68 (varcte -> ID .)
    LPAREN          reduce using rule 68 (varcte -> ID .)
    LBRACKET        reduce using rule 68 (varcte -> ID .)
    CTEI            reduce using rule 68 (varcte -> ID .)
    CTEF            reduce using rule 68 (varcte -> ID .)
    CTEC            reduce using rule 68 (varcte -> ID .)
    TRUE            reduce using rule 68 (varcte -> ID .)
    FALSE           reduce using rule 68 (varcte -> ID .)
    RBRACE          reduce using rule 68 (varcte -> ID .)
    RBRACKET        reduce using rule 68 (varcte -> ID .)
    RPAREN          reduce using rule 68 (varcte -> ID .)
    SEMI            reduce using rule 68 (varcte -> ID .)
    COMMA           reduce using rule 68 (varcte -> ID .)
    TO              reduce using rule 68 (varcte -> ID .)
    BY              reduce using rule 68 (varcte -> ID .)


state 137

    (66) factor_prima_1 -> MINUS varcte .

    TIMES           reduce using rule 66 (factor_prima_1 -> MINUS varcte .)
    DIVIDE          reduce using rule 66 (factor_prima_1 -> MINUS varcte .)
    PLUS            reduce using rule 66 (factor_prima_1 -> MINUS varcte .)
    MINUS           reduce using rule 66 (factor_prima_1 -> MINUS varcte .)
    LT              reduce using rule 66 (factor_prima_1 -> MINUS varcte .)
    LE              reduce using rule 66 (factor_prima_1 -> MINUS varcte .)
    GT              reduce using rule 66 (factor_prima_1 -> MINUS varcte .)
    GE              reduce using rule 66 (factor_prima_1 -> MINUS varcte .)
    EQ              reduce using rule 66 (factor_prima_1 -> MINUS varcte .)
    NE              reduce using rule 66 (factor_prima_1 -> MINUS varcte .)
    AND             reduce using rule 66 (factor_prima_1 -> MINUS varcte .)
    OR              reduce using rule 66 (factor_prima_1 -> MINUS varcte .)
    ID              reduce using rule 66 (factor_prima_1 -> MINUS varcte .)
    LET             reduce using rule 66 (factor_prima_1 -> MINUS varcte .)
    IF              reduce using rule 66 (factor_prima_1 -> MINUS varcte .)
    PRINT           reduce using rule 66 (factor_prima_1 -> MINUS varcte .)
    READ            reduce using rule 66 (factor_prima_1 -> MINUS varcte .)
    RETURN          reduce using rule 66 (factor_prima_1 -> MINUS varcte .)
    FOR             reduce using rule 66 (factor_prima_1 -> MINUS varcte .)
    WHILE           reduce using rule 66 (factor_prima_1 -> MINUS varcte .)
    MEAN            reduce using rule 66 (factor_prima_1 -> MINUS varcte .)
    MEDIAN          reduce using rule 66 (factor_prima_1 -> MINUS varcte .)
    MODE            reduce using rule 66 (factor_prima_1 -> MINUS varcte .)
    VARIANCE        reduce using rule 66 (factor_prima_1 -> MINUS varcte .)
    STDEV           reduce using rule 66 (factor_prima_1 -> MINUS varcte .)
    LPAREN          reduce using rule 66 (factor_prima_1 -> MINUS varcte .)
    LBRACKET        reduce using rule 66 (factor_prima_1 -> MINUS varcte .)
    CTEI            reduce using rule 66 (factor_prima_1 -> MINUS varcte .)
    CTEF            reduce using rule 66 (factor_prima_1 -> MINUS varcte .)
    CTEC            reduce using rule 66 (factor_prima_1 -> MINUS varcte .)
    TRUE            reduce using rule 66 (factor_prima_1 -> MINUS varcte .)
    FALSE           reduce using rule 66 (factor_prima_1 -> MINUS varcte .)
    RBRACE          reduce using rule 66 (factor_prima_1 -> MINUS varcte .)
    RBRACKET        reduce using rule 66 (factor_prima_1 -> MINUS varcte .)
    RPAREN          reduce using rule 66 (factor_prima_1 -> MINUS varcte .)
    SEMI            reduce using rule 66 (factor_prima_1 -> MINUS varcte .)
    COMMA           reduce using rule 66 (factor_prima_1 -> MINUS varcte .)
    TO              reduce using rule 66 (factor_prima_1 -> MINUS varcte .)
    BY              reduce using rule 66 (factor_prima_1 -> MINUS varcte .)


state 138

    (12) type_1 -> LBRACKET expression RBRACKET .

    SEMI            reduce using rule 12 (type_1 -> LBRACKET expression RBRACKET .)
    LPAREN          reduce using rule 12 (type_1 -> LBRACKET expression RBRACKET .)
    COMMA           reduce using rule 12 (type_1 -> LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 12 (type_1 -> LBRACKET expression RBRACKET .)


state 139

    (20) params -> ID COLON . type COMMA params
    (21) params -> ID COLON . type
    (8) type -> . INT type_1
    (9) type -> . FLOAT type_1
    (10) type -> . CHAR type_1
    (11) type -> . BOOL type_1

    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    CHAR            shift and go to state 25
    BOOL            shift and go to state 26

    type                           shift and go to state 175

state 140

    (14) function -> FUNCTION ID COLON return_type LPAREN params RPAREN . block
    (17) block -> . LBRACE statements RBRACE

    LBRACE          shift and go to state 32

    block                          shift and go to state 176

state 141

    (15) function -> FUNCTION ID COLON return_type LPAREN RPAREN block .

    LET             reduce using rule 15 (function -> FUNCTION ID COLON return_type LPAREN RPAREN block .)
    FUNCTION        reduce using rule 15 (function -> FUNCTION ID COLON return_type LPAREN RPAREN block .)
    MAIN            reduce using rule 15 (function -> FUNCTION ID COLON return_type LPAREN RPAREN block .)


state 142

    (39) assignment -> ID EQUALS expression . SEMI

    SEMI            shift and go to state 177


state 143

    (40) assignment -> ID LBRACKET expression . RBRACKET EQUALS expression SEMI

    RBRACKET        shift and go to state 178


state 144

    (89) function_call -> ID LPAREN RPAREN . SEMI
    (92) function_call -> ID LPAREN RPAREN .

  ! shift/reduce conflict for SEMI resolved as shift
    SEMI            shift and go to state 179
    ID              reduce using rule 92 (function_call -> ID LPAREN RPAREN .)
    LET             reduce using rule 92 (function_call -> ID LPAREN RPAREN .)
    IF              reduce using rule 92 (function_call -> ID LPAREN RPAREN .)
    PRINT           reduce using rule 92 (function_call -> ID LPAREN RPAREN .)
    READ            reduce using rule 92 (function_call -> ID LPAREN RPAREN .)
    RETURN          reduce using rule 92 (function_call -> ID LPAREN RPAREN .)
    FOR             reduce using rule 92 (function_call -> ID LPAREN RPAREN .)
    WHILE           reduce using rule 92 (function_call -> ID LPAREN RPAREN .)
    MEAN            reduce using rule 92 (function_call -> ID LPAREN RPAREN .)
    MEDIAN          reduce using rule 92 (function_call -> ID LPAREN RPAREN .)
    MODE            reduce using rule 92 (function_call -> ID LPAREN RPAREN .)
    VARIANCE        reduce using rule 92 (function_call -> ID LPAREN RPAREN .)
    STDEV           reduce using rule 92 (function_call -> ID LPAREN RPAREN .)
    LPAREN          reduce using rule 92 (function_call -> ID LPAREN RPAREN .)
    LBRACKET        reduce using rule 92 (function_call -> ID LPAREN RPAREN .)
    PLUS            reduce using rule 92 (function_call -> ID LPAREN RPAREN .)
    MINUS           reduce using rule 92 (function_call -> ID LPAREN RPAREN .)
    CTEI            reduce using rule 92 (function_call -> ID LPAREN RPAREN .)
    CTEF            reduce using rule 92 (function_call -> ID LPAREN RPAREN .)
    CTEC            reduce using rule 92 (function_call -> ID LPAREN RPAREN .)
    TRUE            reduce using rule 92 (function_call -> ID LPAREN RPAREN .)
    FALSE           reduce using rule 92 (function_call -> ID LPAREN RPAREN .)
    RBRACE          reduce using rule 92 (function_call -> ID LPAREN RPAREN .)
    TIMES           reduce using rule 92 (function_call -> ID LPAREN RPAREN .)
    DIVIDE          reduce using rule 92 (function_call -> ID LPAREN RPAREN .)
    LT              reduce using rule 92 (function_call -> ID LPAREN RPAREN .)
    LE              reduce using rule 92 (function_call -> ID LPAREN RPAREN .)
    GT              reduce using rule 92 (function_call -> ID LPAREN RPAREN .)
    GE              reduce using rule 92 (function_call -> ID LPAREN RPAREN .)
    EQ              reduce using rule 92 (function_call -> ID LPAREN RPAREN .)
    NE              reduce using rule 92 (function_call -> ID LPAREN RPAREN .)
    AND             reduce using rule 92 (function_call -> ID LPAREN RPAREN .)
    OR              reduce using rule 92 (function_call -> ID LPAREN RPAREN .)
    RBRACKET        reduce using rule 92 (function_call -> ID LPAREN RPAREN .)
    RPAREN          reduce using rule 92 (function_call -> ID LPAREN RPAREN .)
    COMMA           reduce using rule 92 (function_call -> ID LPAREN RPAREN .)
    TO              reduce using rule 92 (function_call -> ID LPAREN RPAREN .)
    BY              reduce using rule 92 (function_call -> ID LPAREN RPAREN .)

  ! SEMI            [ reduce using rule 92 (function_call -> ID LPAREN RPAREN .) ]


state 145

    (90) function_call -> ID LPAREN function_call_1 . RPAREN SEMI
    (91) function_call -> ID LPAREN function_call_1 . RPAREN

    RPAREN          shift and go to state 180


state 146

    (93) function_call_1 -> expression .
    (94) function_call_1 -> expression . COMMA function_call_1

    RPAREN          reduce using rule 93 (function_call_1 -> expression .)
    COMMA           shift and go to state 181


state 147

    (62) factor -> LBRACKET expression RBRACKET .

    TIMES           reduce using rule 62 (factor -> LBRACKET expression RBRACKET .)
    DIVIDE          reduce using rule 62 (factor -> LBRACKET expression RBRACKET .)
    PLUS            reduce using rule 62 (factor -> LBRACKET expression RBRACKET .)
    MINUS           reduce using rule 62 (factor -> LBRACKET expression RBRACKET .)
    LT              reduce using rule 62 (factor -> LBRACKET expression RBRACKET .)
    LE              reduce using rule 62 (factor -> LBRACKET expression RBRACKET .)
    GT              reduce using rule 62 (factor -> LBRACKET expression RBRACKET .)
    GE              reduce using rule 62 (factor -> LBRACKET expression RBRACKET .)
    EQ              reduce using rule 62 (factor -> LBRACKET expression RBRACKET .)
    NE              reduce using rule 62 (factor -> LBRACKET expression RBRACKET .)
    AND             reduce using rule 62 (factor -> LBRACKET expression RBRACKET .)
    OR              reduce using rule 62 (factor -> LBRACKET expression RBRACKET .)
    ID              reduce using rule 62 (factor -> LBRACKET expression RBRACKET .)
    LET             reduce using rule 62 (factor -> LBRACKET expression RBRACKET .)
    IF              reduce using rule 62 (factor -> LBRACKET expression RBRACKET .)
    PRINT           reduce using rule 62 (factor -> LBRACKET expression RBRACKET .)
    READ            reduce using rule 62 (factor -> LBRACKET expression RBRACKET .)
    RETURN          reduce using rule 62 (factor -> LBRACKET expression RBRACKET .)
    FOR             reduce using rule 62 (factor -> LBRACKET expression RBRACKET .)
    WHILE           reduce using rule 62 (factor -> LBRACKET expression RBRACKET .)
    MEAN            reduce using rule 62 (factor -> LBRACKET expression RBRACKET .)
    MEDIAN          reduce using rule 62 (factor -> LBRACKET expression RBRACKET .)
    MODE            reduce using rule 62 (factor -> LBRACKET expression RBRACKET .)
    VARIANCE        reduce using rule 62 (factor -> LBRACKET expression RBRACKET .)
    STDEV           reduce using rule 62 (factor -> LBRACKET expression RBRACKET .)
    LPAREN          reduce using rule 62 (factor -> LBRACKET expression RBRACKET .)
    LBRACKET        reduce using rule 62 (factor -> LBRACKET expression RBRACKET .)
    CTEI            reduce using rule 62 (factor -> LBRACKET expression RBRACKET .)
    CTEF            reduce using rule 62 (factor -> LBRACKET expression RBRACKET .)
    CTEC            reduce using rule 62 (factor -> LBRACKET expression RBRACKET .)
    TRUE            reduce using rule 62 (factor -> LBRACKET expression RBRACKET .)
    FALSE           reduce using rule 62 (factor -> LBRACKET expression RBRACKET .)
    RBRACE          reduce using rule 62 (factor -> LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 62 (factor -> LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 62 (factor -> LBRACKET expression RBRACKET .)
    SEMI            reduce using rule 62 (factor -> LBRACKET expression RBRACKET .)
    COMMA           reduce using rule 62 (factor -> LBRACKET expression RBRACKET .)
    TO              reduce using rule 62 (factor -> LBRACKET expression RBRACKET .)
    BY              reduce using rule 62 (factor -> LBRACKET expression RBRACKET .)


state 148

    (41) condition -> IF LPAREN expression . RPAREN block
    (42) condition -> IF LPAREN expression . RPAREN block ELSE block

    RPAREN          shift and go to state 182


state 149

    (61) factor -> LPAREN expression RPAREN .

    TIMES           reduce using rule 61 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 61 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 61 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 61 (factor -> LPAREN expression RPAREN .)
    LT              reduce using rule 61 (factor -> LPAREN expression RPAREN .)
    LE              reduce using rule 61 (factor -> LPAREN expression RPAREN .)
    GT              reduce using rule 61 (factor -> LPAREN expression RPAREN .)
    GE              reduce using rule 61 (factor -> LPAREN expression RPAREN .)
    EQ              reduce using rule 61 (factor -> LPAREN expression RPAREN .)
    NE              reduce using rule 61 (factor -> LPAREN expression RPAREN .)
    AND             reduce using rule 61 (factor -> LPAREN expression RPAREN .)
    OR              reduce using rule 61 (factor -> LPAREN expression RPAREN .)
    ID              reduce using rule 61 (factor -> LPAREN expression RPAREN .)
    LET             reduce using rule 61 (factor -> LPAREN expression RPAREN .)
    IF              reduce using rule 61 (factor -> LPAREN expression RPAREN .)
    PRINT           reduce using rule 61 (factor -> LPAREN expression RPAREN .)
    READ            reduce using rule 61 (factor -> LPAREN expression RPAREN .)
    RETURN          reduce using rule 61 (factor -> LPAREN expression RPAREN .)
    FOR             reduce using rule 61 (factor -> LPAREN expression RPAREN .)
    WHILE           reduce using rule 61 (factor -> LPAREN expression RPAREN .)
    MEAN            reduce using rule 61 (factor -> LPAREN expression RPAREN .)
    MEDIAN          reduce using rule 61 (factor -> LPAREN expression RPAREN .)
    MODE            reduce using rule 61 (factor -> LPAREN expression RPAREN .)
    VARIANCE        reduce using rule 61 (factor -> LPAREN expression RPAREN .)
    STDEV           reduce using rule 61 (factor -> LPAREN expression RPAREN .)
    LPAREN          reduce using rule 61 (factor -> LPAREN expression RPAREN .)
    LBRACKET        reduce using rule 61 (factor -> LPAREN expression RPAREN .)
    CTEI            reduce using rule 61 (factor -> LPAREN expression RPAREN .)
    CTEF            reduce using rule 61 (factor -> LPAREN expression RPAREN .)
    CTEC            reduce using rule 61 (factor -> LPAREN expression RPAREN .)
    TRUE            reduce using rule 61 (factor -> LPAREN expression RPAREN .)
    FALSE           reduce using rule 61 (factor -> LPAREN expression RPAREN .)
    RBRACE          reduce using rule 61 (factor -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 61 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 61 (factor -> LPAREN expression RPAREN .)
    SEMI            reduce using rule 61 (factor -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 61 (factor -> LPAREN expression RPAREN .)
    TO              reduce using rule 61 (factor -> LPAREN expression RPAREN .)
    BY              reduce using rule 61 (factor -> LPAREN expression RPAREN .)


state 150

    (74) writing -> PRINT LPAREN writing_1 . RPAREN SEMI

    RPAREN          shift and go to state 183


state 151

    (75) writing_1 -> expression . COMMA writing_1
    (76) writing_1 -> expression .

    COMMA           shift and go to state 184
    RPAREN          reduce using rule 76 (writing_1 -> expression .)


state 152

    (77) writing_1 -> CTESTRING .
    (78) writing_1 -> CTESTRING . COMMA

    RPAREN          reduce using rule 77 (writing_1 -> CTESTRING .)
    COMMA           shift and go to state 185


state 153

    (79) reading -> READ LPAREN reading_1 . RPAREN SEMI

    RPAREN          shift and go to state 186


state 154

    (80) reading_1 -> ID . COMMA reading_1
    (81) reading_1 -> ID . LBRACKET expression RBRACKET COMMA reading_1
    (82) reading_1 -> ID .
    (83) reading_1 -> ID . LBRACKET expression RBRACKET

    COMMA           shift and go to state 187
    LBRACKET        shift and go to state 188
    RPAREN          reduce using rule 82 (reading_1 -> ID .)


state 155

    (88) return -> RETURN expression SEMI .

    ID              reduce using rule 88 (return -> RETURN expression SEMI .)
    LET             reduce using rule 88 (return -> RETURN expression SEMI .)
    IF              reduce using rule 88 (return -> RETURN expression SEMI .)
    PRINT           reduce using rule 88 (return -> RETURN expression SEMI .)
    READ            reduce using rule 88 (return -> RETURN expression SEMI .)
    RETURN          reduce using rule 88 (return -> RETURN expression SEMI .)
    FOR             reduce using rule 88 (return -> RETURN expression SEMI .)
    WHILE           reduce using rule 88 (return -> RETURN expression SEMI .)
    MEAN            reduce using rule 88 (return -> RETURN expression SEMI .)
    MEDIAN          reduce using rule 88 (return -> RETURN expression SEMI .)
    MODE            reduce using rule 88 (return -> RETURN expression SEMI .)
    VARIANCE        reduce using rule 88 (return -> RETURN expression SEMI .)
    STDEV           reduce using rule 88 (return -> RETURN expression SEMI .)
    LPAREN          reduce using rule 88 (return -> RETURN expression SEMI .)
    LBRACKET        reduce using rule 88 (return -> RETURN expression SEMI .)
    PLUS            reduce using rule 88 (return -> RETURN expression SEMI .)
    MINUS           reduce using rule 88 (return -> RETURN expression SEMI .)
    CTEI            reduce using rule 88 (return -> RETURN expression SEMI .)
    CTEF            reduce using rule 88 (return -> RETURN expression SEMI .)
    CTEC            reduce using rule 88 (return -> RETURN expression SEMI .)
    TRUE            reduce using rule 88 (return -> RETURN expression SEMI .)
    FALSE           reduce using rule 88 (return -> RETURN expression SEMI .)
    RBRACE          reduce using rule 88 (return -> RETURN expression SEMI .)


state 156

    (45) expression1 -> exp LT exp .

    ID              reduce using rule 45 (expression1 -> exp LT exp .)
    LET             reduce using rule 45 (expression1 -> exp LT exp .)
    IF              reduce using rule 45 (expression1 -> exp LT exp .)
    PRINT           reduce using rule 45 (expression1 -> exp LT exp .)
    READ            reduce using rule 45 (expression1 -> exp LT exp .)
    RETURN          reduce using rule 45 (expression1 -> exp LT exp .)
    FOR             reduce using rule 45 (expression1 -> exp LT exp .)
    WHILE           reduce using rule 45 (expression1 -> exp LT exp .)
    MEAN            reduce using rule 45 (expression1 -> exp LT exp .)
    MEDIAN          reduce using rule 45 (expression1 -> exp LT exp .)
    MODE            reduce using rule 45 (expression1 -> exp LT exp .)
    VARIANCE        reduce using rule 45 (expression1 -> exp LT exp .)
    STDEV           reduce using rule 45 (expression1 -> exp LT exp .)
    LPAREN          reduce using rule 45 (expression1 -> exp LT exp .)
    LBRACKET        reduce using rule 45 (expression1 -> exp LT exp .)
    PLUS            reduce using rule 45 (expression1 -> exp LT exp .)
    MINUS           reduce using rule 45 (expression1 -> exp LT exp .)
    CTEI            reduce using rule 45 (expression1 -> exp LT exp .)
    CTEF            reduce using rule 45 (expression1 -> exp LT exp .)
    CTEC            reduce using rule 45 (expression1 -> exp LT exp .)
    TRUE            reduce using rule 45 (expression1 -> exp LT exp .)
    FALSE           reduce using rule 45 (expression1 -> exp LT exp .)
    RBRACE          reduce using rule 45 (expression1 -> exp LT exp .)
    RBRACKET        reduce using rule 45 (expression1 -> exp LT exp .)
    RPAREN          reduce using rule 45 (expression1 -> exp LT exp .)
    SEMI            reduce using rule 45 (expression1 -> exp LT exp .)
    COMMA           reduce using rule 45 (expression1 -> exp LT exp .)
    TO              reduce using rule 45 (expression1 -> exp LT exp .)
    BY              reduce using rule 45 (expression1 -> exp LT exp .)


state 157

    (46) expression1 -> exp LE exp .

    ID              reduce using rule 46 (expression1 -> exp LE exp .)
    LET             reduce using rule 46 (expression1 -> exp LE exp .)
    IF              reduce using rule 46 (expression1 -> exp LE exp .)
    PRINT           reduce using rule 46 (expression1 -> exp LE exp .)
    READ            reduce using rule 46 (expression1 -> exp LE exp .)
    RETURN          reduce using rule 46 (expression1 -> exp LE exp .)
    FOR             reduce using rule 46 (expression1 -> exp LE exp .)
    WHILE           reduce using rule 46 (expression1 -> exp LE exp .)
    MEAN            reduce using rule 46 (expression1 -> exp LE exp .)
    MEDIAN          reduce using rule 46 (expression1 -> exp LE exp .)
    MODE            reduce using rule 46 (expression1 -> exp LE exp .)
    VARIANCE        reduce using rule 46 (expression1 -> exp LE exp .)
    STDEV           reduce using rule 46 (expression1 -> exp LE exp .)
    LPAREN          reduce using rule 46 (expression1 -> exp LE exp .)
    LBRACKET        reduce using rule 46 (expression1 -> exp LE exp .)
    PLUS            reduce using rule 46 (expression1 -> exp LE exp .)
    MINUS           reduce using rule 46 (expression1 -> exp LE exp .)
    CTEI            reduce using rule 46 (expression1 -> exp LE exp .)
    CTEF            reduce using rule 46 (expression1 -> exp LE exp .)
    CTEC            reduce using rule 46 (expression1 -> exp LE exp .)
    TRUE            reduce using rule 46 (expression1 -> exp LE exp .)
    FALSE           reduce using rule 46 (expression1 -> exp LE exp .)
    RBRACE          reduce using rule 46 (expression1 -> exp LE exp .)
    RBRACKET        reduce using rule 46 (expression1 -> exp LE exp .)
    RPAREN          reduce using rule 46 (expression1 -> exp LE exp .)
    SEMI            reduce using rule 46 (expression1 -> exp LE exp .)
    COMMA           reduce using rule 46 (expression1 -> exp LE exp .)
    TO              reduce using rule 46 (expression1 -> exp LE exp .)
    BY              reduce using rule 46 (expression1 -> exp LE exp .)


state 158

    (47) expression1 -> exp GT exp .

    ID              reduce using rule 47 (expression1 -> exp GT exp .)
    LET             reduce using rule 47 (expression1 -> exp GT exp .)
    IF              reduce using rule 47 (expression1 -> exp GT exp .)
    PRINT           reduce using rule 47 (expression1 -> exp GT exp .)
    READ            reduce using rule 47 (expression1 -> exp GT exp .)
    RETURN          reduce using rule 47 (expression1 -> exp GT exp .)
    FOR             reduce using rule 47 (expression1 -> exp GT exp .)
    WHILE           reduce using rule 47 (expression1 -> exp GT exp .)
    MEAN            reduce using rule 47 (expression1 -> exp GT exp .)
    MEDIAN          reduce using rule 47 (expression1 -> exp GT exp .)
    MODE            reduce using rule 47 (expression1 -> exp GT exp .)
    VARIANCE        reduce using rule 47 (expression1 -> exp GT exp .)
    STDEV           reduce using rule 47 (expression1 -> exp GT exp .)
    LPAREN          reduce using rule 47 (expression1 -> exp GT exp .)
    LBRACKET        reduce using rule 47 (expression1 -> exp GT exp .)
    PLUS            reduce using rule 47 (expression1 -> exp GT exp .)
    MINUS           reduce using rule 47 (expression1 -> exp GT exp .)
    CTEI            reduce using rule 47 (expression1 -> exp GT exp .)
    CTEF            reduce using rule 47 (expression1 -> exp GT exp .)
    CTEC            reduce using rule 47 (expression1 -> exp GT exp .)
    TRUE            reduce using rule 47 (expression1 -> exp GT exp .)
    FALSE           reduce using rule 47 (expression1 -> exp GT exp .)
    RBRACE          reduce using rule 47 (expression1 -> exp GT exp .)
    RBRACKET        reduce using rule 47 (expression1 -> exp GT exp .)
    RPAREN          reduce using rule 47 (expression1 -> exp GT exp .)
    SEMI            reduce using rule 47 (expression1 -> exp GT exp .)
    COMMA           reduce using rule 47 (expression1 -> exp GT exp .)
    TO              reduce using rule 47 (expression1 -> exp GT exp .)
    BY              reduce using rule 47 (expression1 -> exp GT exp .)


state 159

    (48) expression1 -> exp GE exp .

    ID              reduce using rule 48 (expression1 -> exp GE exp .)
    LET             reduce using rule 48 (expression1 -> exp GE exp .)
    IF              reduce using rule 48 (expression1 -> exp GE exp .)
    PRINT           reduce using rule 48 (expression1 -> exp GE exp .)
    READ            reduce using rule 48 (expression1 -> exp GE exp .)
    RETURN          reduce using rule 48 (expression1 -> exp GE exp .)
    FOR             reduce using rule 48 (expression1 -> exp GE exp .)
    WHILE           reduce using rule 48 (expression1 -> exp GE exp .)
    MEAN            reduce using rule 48 (expression1 -> exp GE exp .)
    MEDIAN          reduce using rule 48 (expression1 -> exp GE exp .)
    MODE            reduce using rule 48 (expression1 -> exp GE exp .)
    VARIANCE        reduce using rule 48 (expression1 -> exp GE exp .)
    STDEV           reduce using rule 48 (expression1 -> exp GE exp .)
    LPAREN          reduce using rule 48 (expression1 -> exp GE exp .)
    LBRACKET        reduce using rule 48 (expression1 -> exp GE exp .)
    PLUS            reduce using rule 48 (expression1 -> exp GE exp .)
    MINUS           reduce using rule 48 (expression1 -> exp GE exp .)
    CTEI            reduce using rule 48 (expression1 -> exp GE exp .)
    CTEF            reduce using rule 48 (expression1 -> exp GE exp .)
    CTEC            reduce using rule 48 (expression1 -> exp GE exp .)
    TRUE            reduce using rule 48 (expression1 -> exp GE exp .)
    FALSE           reduce using rule 48 (expression1 -> exp GE exp .)
    RBRACE          reduce using rule 48 (expression1 -> exp GE exp .)
    RBRACKET        reduce using rule 48 (expression1 -> exp GE exp .)
    RPAREN          reduce using rule 48 (expression1 -> exp GE exp .)
    SEMI            reduce using rule 48 (expression1 -> exp GE exp .)
    COMMA           reduce using rule 48 (expression1 -> exp GE exp .)
    TO              reduce using rule 48 (expression1 -> exp GE exp .)
    BY              reduce using rule 48 (expression1 -> exp GE exp .)


state 160

    (49) expression1 -> exp EQ exp .

    ID              reduce using rule 49 (expression1 -> exp EQ exp .)
    LET             reduce using rule 49 (expression1 -> exp EQ exp .)
    IF              reduce using rule 49 (expression1 -> exp EQ exp .)
    PRINT           reduce using rule 49 (expression1 -> exp EQ exp .)
    READ            reduce using rule 49 (expression1 -> exp EQ exp .)
    RETURN          reduce using rule 49 (expression1 -> exp EQ exp .)
    FOR             reduce using rule 49 (expression1 -> exp EQ exp .)
    WHILE           reduce using rule 49 (expression1 -> exp EQ exp .)
    MEAN            reduce using rule 49 (expression1 -> exp EQ exp .)
    MEDIAN          reduce using rule 49 (expression1 -> exp EQ exp .)
    MODE            reduce using rule 49 (expression1 -> exp EQ exp .)
    VARIANCE        reduce using rule 49 (expression1 -> exp EQ exp .)
    STDEV           reduce using rule 49 (expression1 -> exp EQ exp .)
    LPAREN          reduce using rule 49 (expression1 -> exp EQ exp .)
    LBRACKET        reduce using rule 49 (expression1 -> exp EQ exp .)
    PLUS            reduce using rule 49 (expression1 -> exp EQ exp .)
    MINUS           reduce using rule 49 (expression1 -> exp EQ exp .)
    CTEI            reduce using rule 49 (expression1 -> exp EQ exp .)
    CTEF            reduce using rule 49 (expression1 -> exp EQ exp .)
    CTEC            reduce using rule 49 (expression1 -> exp EQ exp .)
    TRUE            reduce using rule 49 (expression1 -> exp EQ exp .)
    FALSE           reduce using rule 49 (expression1 -> exp EQ exp .)
    RBRACE          reduce using rule 49 (expression1 -> exp EQ exp .)
    RBRACKET        reduce using rule 49 (expression1 -> exp EQ exp .)
    RPAREN          reduce using rule 49 (expression1 -> exp EQ exp .)
    SEMI            reduce using rule 49 (expression1 -> exp EQ exp .)
    COMMA           reduce using rule 49 (expression1 -> exp EQ exp .)
    TO              reduce using rule 49 (expression1 -> exp EQ exp .)
    BY              reduce using rule 49 (expression1 -> exp EQ exp .)


state 161

    (50) expression1 -> exp NE exp .

    ID              reduce using rule 50 (expression1 -> exp NE exp .)
    LET             reduce using rule 50 (expression1 -> exp NE exp .)
    IF              reduce using rule 50 (expression1 -> exp NE exp .)
    PRINT           reduce using rule 50 (expression1 -> exp NE exp .)
    READ            reduce using rule 50 (expression1 -> exp NE exp .)
    RETURN          reduce using rule 50 (expression1 -> exp NE exp .)
    FOR             reduce using rule 50 (expression1 -> exp NE exp .)
    WHILE           reduce using rule 50 (expression1 -> exp NE exp .)
    MEAN            reduce using rule 50 (expression1 -> exp NE exp .)
    MEDIAN          reduce using rule 50 (expression1 -> exp NE exp .)
    MODE            reduce using rule 50 (expression1 -> exp NE exp .)
    VARIANCE        reduce using rule 50 (expression1 -> exp NE exp .)
    STDEV           reduce using rule 50 (expression1 -> exp NE exp .)
    LPAREN          reduce using rule 50 (expression1 -> exp NE exp .)
    LBRACKET        reduce using rule 50 (expression1 -> exp NE exp .)
    PLUS            reduce using rule 50 (expression1 -> exp NE exp .)
    MINUS           reduce using rule 50 (expression1 -> exp NE exp .)
    CTEI            reduce using rule 50 (expression1 -> exp NE exp .)
    CTEF            reduce using rule 50 (expression1 -> exp NE exp .)
    CTEC            reduce using rule 50 (expression1 -> exp NE exp .)
    TRUE            reduce using rule 50 (expression1 -> exp NE exp .)
    FALSE           reduce using rule 50 (expression1 -> exp NE exp .)
    RBRACE          reduce using rule 50 (expression1 -> exp NE exp .)
    RBRACKET        reduce using rule 50 (expression1 -> exp NE exp .)
    RPAREN          reduce using rule 50 (expression1 -> exp NE exp .)
    SEMI            reduce using rule 50 (expression1 -> exp NE exp .)
    COMMA           reduce using rule 50 (expression1 -> exp NE exp .)
    TO              reduce using rule 50 (expression1 -> exp NE exp .)
    BY              reduce using rule 50 (expression1 -> exp NE exp .)


state 162

    (51) expression1 -> exp AND exp .

    ID              reduce using rule 51 (expression1 -> exp AND exp .)
    LET             reduce using rule 51 (expression1 -> exp AND exp .)
    IF              reduce using rule 51 (expression1 -> exp AND exp .)
    PRINT           reduce using rule 51 (expression1 -> exp AND exp .)
    READ            reduce using rule 51 (expression1 -> exp AND exp .)
    RETURN          reduce using rule 51 (expression1 -> exp AND exp .)
    FOR             reduce using rule 51 (expression1 -> exp AND exp .)
    WHILE           reduce using rule 51 (expression1 -> exp AND exp .)
    MEAN            reduce using rule 51 (expression1 -> exp AND exp .)
    MEDIAN          reduce using rule 51 (expression1 -> exp AND exp .)
    MODE            reduce using rule 51 (expression1 -> exp AND exp .)
    VARIANCE        reduce using rule 51 (expression1 -> exp AND exp .)
    STDEV           reduce using rule 51 (expression1 -> exp AND exp .)
    LPAREN          reduce using rule 51 (expression1 -> exp AND exp .)
    LBRACKET        reduce using rule 51 (expression1 -> exp AND exp .)
    PLUS            reduce using rule 51 (expression1 -> exp AND exp .)
    MINUS           reduce using rule 51 (expression1 -> exp AND exp .)
    CTEI            reduce using rule 51 (expression1 -> exp AND exp .)
    CTEF            reduce using rule 51 (expression1 -> exp AND exp .)
    CTEC            reduce using rule 51 (expression1 -> exp AND exp .)
    TRUE            reduce using rule 51 (expression1 -> exp AND exp .)
    FALSE           reduce using rule 51 (expression1 -> exp AND exp .)
    RBRACE          reduce using rule 51 (expression1 -> exp AND exp .)
    RBRACKET        reduce using rule 51 (expression1 -> exp AND exp .)
    RPAREN          reduce using rule 51 (expression1 -> exp AND exp .)
    SEMI            reduce using rule 51 (expression1 -> exp AND exp .)
    COMMA           reduce using rule 51 (expression1 -> exp AND exp .)
    TO              reduce using rule 51 (expression1 -> exp AND exp .)
    BY              reduce using rule 51 (expression1 -> exp AND exp .)


state 163

    (52) expression1 -> exp OR exp .

    ID              reduce using rule 52 (expression1 -> exp OR exp .)
    LET             reduce using rule 52 (expression1 -> exp OR exp .)
    IF              reduce using rule 52 (expression1 -> exp OR exp .)
    PRINT           reduce using rule 52 (expression1 -> exp OR exp .)
    READ            reduce using rule 52 (expression1 -> exp OR exp .)
    RETURN          reduce using rule 52 (expression1 -> exp OR exp .)
    FOR             reduce using rule 52 (expression1 -> exp OR exp .)
    WHILE           reduce using rule 52 (expression1 -> exp OR exp .)
    MEAN            reduce using rule 52 (expression1 -> exp OR exp .)
    MEDIAN          reduce using rule 52 (expression1 -> exp OR exp .)
    MODE            reduce using rule 52 (expression1 -> exp OR exp .)
    VARIANCE        reduce using rule 52 (expression1 -> exp OR exp .)
    STDEV           reduce using rule 52 (expression1 -> exp OR exp .)
    LPAREN          reduce using rule 52 (expression1 -> exp OR exp .)
    LBRACKET        reduce using rule 52 (expression1 -> exp OR exp .)
    PLUS            reduce using rule 52 (expression1 -> exp OR exp .)
    MINUS           reduce using rule 52 (expression1 -> exp OR exp .)
    CTEI            reduce using rule 52 (expression1 -> exp OR exp .)
    CTEF            reduce using rule 52 (expression1 -> exp OR exp .)
    CTEC            reduce using rule 52 (expression1 -> exp OR exp .)
    TRUE            reduce using rule 52 (expression1 -> exp OR exp .)
    FALSE           reduce using rule 52 (expression1 -> exp OR exp .)
    RBRACE          reduce using rule 52 (expression1 -> exp OR exp .)
    RBRACKET        reduce using rule 52 (expression1 -> exp OR exp .)
    RPAREN          reduce using rule 52 (expression1 -> exp OR exp .)
    SEMI            reduce using rule 52 (expression1 -> exp OR exp .)
    COMMA           reduce using rule 52 (expression1 -> exp OR exp .)
    TO              reduce using rule 52 (expression1 -> exp OR exp .)
    BY              reduce using rule 52 (expression1 -> exp OR exp .)


state 164

    (87) non_conditional_loop -> FOR LPAREN ID . EQUALS expression TO expression BY expression RPAREN block

    EQUALS          shift and go to state 189


state 165

    (86) conditional_loop -> WHILE LPAREN expression . RPAREN DO block

    RPAREN          shift and go to state 190


state 166

    (55) exp_1 -> PLUS exp .

    LT              reduce using rule 55 (exp_1 -> PLUS exp .)
    LE              reduce using rule 55 (exp_1 -> PLUS exp .)
    GT              reduce using rule 55 (exp_1 -> PLUS exp .)
    GE              reduce using rule 55 (exp_1 -> PLUS exp .)
    EQ              reduce using rule 55 (exp_1 -> PLUS exp .)
    NE              reduce using rule 55 (exp_1 -> PLUS exp .)
    AND             reduce using rule 55 (exp_1 -> PLUS exp .)
    OR              reduce using rule 55 (exp_1 -> PLUS exp .)
    ID              reduce using rule 55 (exp_1 -> PLUS exp .)
    LET             reduce using rule 55 (exp_1 -> PLUS exp .)
    IF              reduce using rule 55 (exp_1 -> PLUS exp .)
    PRINT           reduce using rule 55 (exp_1 -> PLUS exp .)
    READ            reduce using rule 55 (exp_1 -> PLUS exp .)
    RETURN          reduce using rule 55 (exp_1 -> PLUS exp .)
    FOR             reduce using rule 55 (exp_1 -> PLUS exp .)
    WHILE           reduce using rule 55 (exp_1 -> PLUS exp .)
    MEAN            reduce using rule 55 (exp_1 -> PLUS exp .)
    MEDIAN          reduce using rule 55 (exp_1 -> PLUS exp .)
    MODE            reduce using rule 55 (exp_1 -> PLUS exp .)
    VARIANCE        reduce using rule 55 (exp_1 -> PLUS exp .)
    STDEV           reduce using rule 55 (exp_1 -> PLUS exp .)
    LPAREN          reduce using rule 55 (exp_1 -> PLUS exp .)
    LBRACKET        reduce using rule 55 (exp_1 -> PLUS exp .)
    PLUS            reduce using rule 55 (exp_1 -> PLUS exp .)
    MINUS           reduce using rule 55 (exp_1 -> PLUS exp .)
    CTEI            reduce using rule 55 (exp_1 -> PLUS exp .)
    CTEF            reduce using rule 55 (exp_1 -> PLUS exp .)
    CTEC            reduce using rule 55 (exp_1 -> PLUS exp .)
    TRUE            reduce using rule 55 (exp_1 -> PLUS exp .)
    FALSE           reduce using rule 55 (exp_1 -> PLUS exp .)
    RBRACE          reduce using rule 55 (exp_1 -> PLUS exp .)
    RBRACKET        reduce using rule 55 (exp_1 -> PLUS exp .)
    RPAREN          reduce using rule 55 (exp_1 -> PLUS exp .)
    SEMI            reduce using rule 55 (exp_1 -> PLUS exp .)
    COMMA           reduce using rule 55 (exp_1 -> PLUS exp .)
    TO              reduce using rule 55 (exp_1 -> PLUS exp .)
    BY              reduce using rule 55 (exp_1 -> PLUS exp .)


state 167

    (56) exp_1 -> MINUS exp .

    LT              reduce using rule 56 (exp_1 -> MINUS exp .)
    LE              reduce using rule 56 (exp_1 -> MINUS exp .)
    GT              reduce using rule 56 (exp_1 -> MINUS exp .)
    GE              reduce using rule 56 (exp_1 -> MINUS exp .)
    EQ              reduce using rule 56 (exp_1 -> MINUS exp .)
    NE              reduce using rule 56 (exp_1 -> MINUS exp .)
    AND             reduce using rule 56 (exp_1 -> MINUS exp .)
    OR              reduce using rule 56 (exp_1 -> MINUS exp .)
    ID              reduce using rule 56 (exp_1 -> MINUS exp .)
    LET             reduce using rule 56 (exp_1 -> MINUS exp .)
    IF              reduce using rule 56 (exp_1 -> MINUS exp .)
    PRINT           reduce using rule 56 (exp_1 -> MINUS exp .)
    READ            reduce using rule 56 (exp_1 -> MINUS exp .)
    RETURN          reduce using rule 56 (exp_1 -> MINUS exp .)
    FOR             reduce using rule 56 (exp_1 -> MINUS exp .)
    WHILE           reduce using rule 56 (exp_1 -> MINUS exp .)
    MEAN            reduce using rule 56 (exp_1 -> MINUS exp .)
    MEDIAN          reduce using rule 56 (exp_1 -> MINUS exp .)
    MODE            reduce using rule 56 (exp_1 -> MINUS exp .)
    VARIANCE        reduce using rule 56 (exp_1 -> MINUS exp .)
    STDEV           reduce using rule 56 (exp_1 -> MINUS exp .)
    LPAREN          reduce using rule 56 (exp_1 -> MINUS exp .)
    LBRACKET        reduce using rule 56 (exp_1 -> MINUS exp .)
    PLUS            reduce using rule 56 (exp_1 -> MINUS exp .)
    MINUS           reduce using rule 56 (exp_1 -> MINUS exp .)
    CTEI            reduce using rule 56 (exp_1 -> MINUS exp .)
    CTEF            reduce using rule 56 (exp_1 -> MINUS exp .)
    CTEC            reduce using rule 56 (exp_1 -> MINUS exp .)
    TRUE            reduce using rule 56 (exp_1 -> MINUS exp .)
    FALSE           reduce using rule 56 (exp_1 -> MINUS exp .)
    RBRACE          reduce using rule 56 (exp_1 -> MINUS exp .)
    RBRACKET        reduce using rule 56 (exp_1 -> MINUS exp .)
    RPAREN          reduce using rule 56 (exp_1 -> MINUS exp .)
    SEMI            reduce using rule 56 (exp_1 -> MINUS exp .)
    COMMA           reduce using rule 56 (exp_1 -> MINUS exp .)
    TO              reduce using rule 56 (exp_1 -> MINUS exp .)
    BY              reduce using rule 56 (exp_1 -> MINUS exp .)


state 168

    (95) mean -> MEAN LPAREN expression . RPAREN SEMI

    RPAREN          shift and go to state 191


state 169

    (96) median -> MEDIAN LPAREN expression . RPAREN SEMI

    RPAREN          shift and go to state 192


state 170

    (97) mode -> MODE LPAREN expression . RPAREN SEMI

    RPAREN          shift and go to state 193


state 171

    (98) variance -> VARIANCE LPAREN expression . RPAREN SEMI

    RPAREN          shift and go to state 194


state 172

    (99) standard_deviation -> STDEV LPAREN expression . RPAREN SEMI

    RPAREN          shift and go to state 195


state 173

    (59) term_2 -> TIMES term .

    PLUS            reduce using rule 59 (term_2 -> TIMES term .)
    MINUS           reduce using rule 59 (term_2 -> TIMES term .)
    LT              reduce using rule 59 (term_2 -> TIMES term .)
    LE              reduce using rule 59 (term_2 -> TIMES term .)
    GT              reduce using rule 59 (term_2 -> TIMES term .)
    GE              reduce using rule 59 (term_2 -> TIMES term .)
    EQ              reduce using rule 59 (term_2 -> TIMES term .)
    NE              reduce using rule 59 (term_2 -> TIMES term .)
    AND             reduce using rule 59 (term_2 -> TIMES term .)
    OR              reduce using rule 59 (term_2 -> TIMES term .)
    ID              reduce using rule 59 (term_2 -> TIMES term .)
    LET             reduce using rule 59 (term_2 -> TIMES term .)
    IF              reduce using rule 59 (term_2 -> TIMES term .)
    PRINT           reduce using rule 59 (term_2 -> TIMES term .)
    READ            reduce using rule 59 (term_2 -> TIMES term .)
    RETURN          reduce using rule 59 (term_2 -> TIMES term .)
    FOR             reduce using rule 59 (term_2 -> TIMES term .)
    WHILE           reduce using rule 59 (term_2 -> TIMES term .)
    MEAN            reduce using rule 59 (term_2 -> TIMES term .)
    MEDIAN          reduce using rule 59 (term_2 -> TIMES term .)
    MODE            reduce using rule 59 (term_2 -> TIMES term .)
    VARIANCE        reduce using rule 59 (term_2 -> TIMES term .)
    STDEV           reduce using rule 59 (term_2 -> TIMES term .)
    LPAREN          reduce using rule 59 (term_2 -> TIMES term .)
    LBRACKET        reduce using rule 59 (term_2 -> TIMES term .)
    CTEI            reduce using rule 59 (term_2 -> TIMES term .)
    CTEF            reduce using rule 59 (term_2 -> TIMES term .)
    CTEC            reduce using rule 59 (term_2 -> TIMES term .)
    TRUE            reduce using rule 59 (term_2 -> TIMES term .)
    FALSE           reduce using rule 59 (term_2 -> TIMES term .)
    RBRACE          reduce using rule 59 (term_2 -> TIMES term .)
    RBRACKET        reduce using rule 59 (term_2 -> TIMES term .)
    RPAREN          reduce using rule 59 (term_2 -> TIMES term .)
    SEMI            reduce using rule 59 (term_2 -> TIMES term .)
    COMMA           reduce using rule 59 (term_2 -> TIMES term .)
    TO              reduce using rule 59 (term_2 -> TIMES term .)
    BY              reduce using rule 59 (term_2 -> TIMES term .)


state 174

    (60) term_2 -> DIVIDE term .

    PLUS            reduce using rule 60 (term_2 -> DIVIDE term .)
    MINUS           reduce using rule 60 (term_2 -> DIVIDE term .)
    LT              reduce using rule 60 (term_2 -> DIVIDE term .)
    LE              reduce using rule 60 (term_2 -> DIVIDE term .)
    GT              reduce using rule 60 (term_2 -> DIVIDE term .)
    GE              reduce using rule 60 (term_2 -> DIVIDE term .)
    EQ              reduce using rule 60 (term_2 -> DIVIDE term .)
    NE              reduce using rule 60 (term_2 -> DIVIDE term .)
    AND             reduce using rule 60 (term_2 -> DIVIDE term .)
    OR              reduce using rule 60 (term_2 -> DIVIDE term .)
    ID              reduce using rule 60 (term_2 -> DIVIDE term .)
    LET             reduce using rule 60 (term_2 -> DIVIDE term .)
    IF              reduce using rule 60 (term_2 -> DIVIDE term .)
    PRINT           reduce using rule 60 (term_2 -> DIVIDE term .)
    READ            reduce using rule 60 (term_2 -> DIVIDE term .)
    RETURN          reduce using rule 60 (term_2 -> DIVIDE term .)
    FOR             reduce using rule 60 (term_2 -> DIVIDE term .)
    WHILE           reduce using rule 60 (term_2 -> DIVIDE term .)
    MEAN            reduce using rule 60 (term_2 -> DIVIDE term .)
    MEDIAN          reduce using rule 60 (term_2 -> DIVIDE term .)
    MODE            reduce using rule 60 (term_2 -> DIVIDE term .)
    VARIANCE        reduce using rule 60 (term_2 -> DIVIDE term .)
    STDEV           reduce using rule 60 (term_2 -> DIVIDE term .)
    LPAREN          reduce using rule 60 (term_2 -> DIVIDE term .)
    LBRACKET        reduce using rule 60 (term_2 -> DIVIDE term .)
    CTEI            reduce using rule 60 (term_2 -> DIVIDE term .)
    CTEF            reduce using rule 60 (term_2 -> DIVIDE term .)
    CTEC            reduce using rule 60 (term_2 -> DIVIDE term .)
    TRUE            reduce using rule 60 (term_2 -> DIVIDE term .)
    FALSE           reduce using rule 60 (term_2 -> DIVIDE term .)
    RBRACE          reduce using rule 60 (term_2 -> DIVIDE term .)
    RBRACKET        reduce using rule 60 (term_2 -> DIVIDE term .)
    RPAREN          reduce using rule 60 (term_2 -> DIVIDE term .)
    SEMI            reduce using rule 60 (term_2 -> DIVIDE term .)
    COMMA           reduce using rule 60 (term_2 -> DIVIDE term .)
    TO              reduce using rule 60 (term_2 -> DIVIDE term .)
    BY              reduce using rule 60 (term_2 -> DIVIDE term .)


state 175

    (20) params -> ID COLON type . COMMA params
    (21) params -> ID COLON type .

    COMMA           shift and go to state 196
    RPAREN          reduce using rule 21 (params -> ID COLON type .)


state 176

    (14) function -> FUNCTION ID COLON return_type LPAREN params RPAREN block .

    LET             reduce using rule 14 (function -> FUNCTION ID COLON return_type LPAREN params RPAREN block .)
    FUNCTION        reduce using rule 14 (function -> FUNCTION ID COLON return_type LPAREN params RPAREN block .)
    MAIN            reduce using rule 14 (function -> FUNCTION ID COLON return_type LPAREN params RPAREN block .)


state 177

    (39) assignment -> ID EQUALS expression SEMI .

    ID              reduce using rule 39 (assignment -> ID EQUALS expression SEMI .)
    LET             reduce using rule 39 (assignment -> ID EQUALS expression SEMI .)
    IF              reduce using rule 39 (assignment -> ID EQUALS expression SEMI .)
    PRINT           reduce using rule 39 (assignment -> ID EQUALS expression SEMI .)
    READ            reduce using rule 39 (assignment -> ID EQUALS expression SEMI .)
    RETURN          reduce using rule 39 (assignment -> ID EQUALS expression SEMI .)
    FOR             reduce using rule 39 (assignment -> ID EQUALS expression SEMI .)
    WHILE           reduce using rule 39 (assignment -> ID EQUALS expression SEMI .)
    MEAN            reduce using rule 39 (assignment -> ID EQUALS expression SEMI .)
    MEDIAN          reduce using rule 39 (assignment -> ID EQUALS expression SEMI .)
    MODE            reduce using rule 39 (assignment -> ID EQUALS expression SEMI .)
    VARIANCE        reduce using rule 39 (assignment -> ID EQUALS expression SEMI .)
    STDEV           reduce using rule 39 (assignment -> ID EQUALS expression SEMI .)
    LPAREN          reduce using rule 39 (assignment -> ID EQUALS expression SEMI .)
    LBRACKET        reduce using rule 39 (assignment -> ID EQUALS expression SEMI .)
    PLUS            reduce using rule 39 (assignment -> ID EQUALS expression SEMI .)
    MINUS           reduce using rule 39 (assignment -> ID EQUALS expression SEMI .)
    CTEI            reduce using rule 39 (assignment -> ID EQUALS expression SEMI .)
    CTEF            reduce using rule 39 (assignment -> ID EQUALS expression SEMI .)
    CTEC            reduce using rule 39 (assignment -> ID EQUALS expression SEMI .)
    TRUE            reduce using rule 39 (assignment -> ID EQUALS expression SEMI .)
    FALSE           reduce using rule 39 (assignment -> ID EQUALS expression SEMI .)
    RBRACE          reduce using rule 39 (assignment -> ID EQUALS expression SEMI .)


state 178

    (40) assignment -> ID LBRACKET expression RBRACKET . EQUALS expression SEMI

    EQUALS          shift and go to state 197


state 179

    (89) function_call -> ID LPAREN RPAREN SEMI .

    ID              reduce using rule 89 (function_call -> ID LPAREN RPAREN SEMI .)
    LET             reduce using rule 89 (function_call -> ID LPAREN RPAREN SEMI .)
    IF              reduce using rule 89 (function_call -> ID LPAREN RPAREN SEMI .)
    PRINT           reduce using rule 89 (function_call -> ID LPAREN RPAREN SEMI .)
    READ            reduce using rule 89 (function_call -> ID LPAREN RPAREN SEMI .)
    RETURN          reduce using rule 89 (function_call -> ID LPAREN RPAREN SEMI .)
    FOR             reduce using rule 89 (function_call -> ID LPAREN RPAREN SEMI .)
    WHILE           reduce using rule 89 (function_call -> ID LPAREN RPAREN SEMI .)
    MEAN            reduce using rule 89 (function_call -> ID LPAREN RPAREN SEMI .)
    MEDIAN          reduce using rule 89 (function_call -> ID LPAREN RPAREN SEMI .)
    MODE            reduce using rule 89 (function_call -> ID LPAREN RPAREN SEMI .)
    VARIANCE        reduce using rule 89 (function_call -> ID LPAREN RPAREN SEMI .)
    STDEV           reduce using rule 89 (function_call -> ID LPAREN RPAREN SEMI .)
    LPAREN          reduce using rule 89 (function_call -> ID LPAREN RPAREN SEMI .)
    LBRACKET        reduce using rule 89 (function_call -> ID LPAREN RPAREN SEMI .)
    PLUS            reduce using rule 89 (function_call -> ID LPAREN RPAREN SEMI .)
    MINUS           reduce using rule 89 (function_call -> ID LPAREN RPAREN SEMI .)
    CTEI            reduce using rule 89 (function_call -> ID LPAREN RPAREN SEMI .)
    CTEF            reduce using rule 89 (function_call -> ID LPAREN RPAREN SEMI .)
    CTEC            reduce using rule 89 (function_call -> ID LPAREN RPAREN SEMI .)
    TRUE            reduce using rule 89 (function_call -> ID LPAREN RPAREN SEMI .)
    FALSE           reduce using rule 89 (function_call -> ID LPAREN RPAREN SEMI .)
    RBRACE          reduce using rule 89 (function_call -> ID LPAREN RPAREN SEMI .)
    TIMES           reduce using rule 89 (function_call -> ID LPAREN RPAREN SEMI .)
    DIVIDE          reduce using rule 89 (function_call -> ID LPAREN RPAREN SEMI .)
    LT              reduce using rule 89 (function_call -> ID LPAREN RPAREN SEMI .)
    LE              reduce using rule 89 (function_call -> ID LPAREN RPAREN SEMI .)
    GT              reduce using rule 89 (function_call -> ID LPAREN RPAREN SEMI .)
    GE              reduce using rule 89 (function_call -> ID LPAREN RPAREN SEMI .)
    EQ              reduce using rule 89 (function_call -> ID LPAREN RPAREN SEMI .)
    NE              reduce using rule 89 (function_call -> ID LPAREN RPAREN SEMI .)
    AND             reduce using rule 89 (function_call -> ID LPAREN RPAREN SEMI .)
    OR              reduce using rule 89 (function_call -> ID LPAREN RPAREN SEMI .)
    RBRACKET        reduce using rule 89 (function_call -> ID LPAREN RPAREN SEMI .)
    RPAREN          reduce using rule 89 (function_call -> ID LPAREN RPAREN SEMI .)
    SEMI            reduce using rule 89 (function_call -> ID LPAREN RPAREN SEMI .)
    COMMA           reduce using rule 89 (function_call -> ID LPAREN RPAREN SEMI .)
    TO              reduce using rule 89 (function_call -> ID LPAREN RPAREN SEMI .)
    BY              reduce using rule 89 (function_call -> ID LPAREN RPAREN SEMI .)


state 180

    (90) function_call -> ID LPAREN function_call_1 RPAREN . SEMI
    (91) function_call -> ID LPAREN function_call_1 RPAREN .

  ! shift/reduce conflict for SEMI resolved as shift
    SEMI            shift and go to state 198
    ID              reduce using rule 91 (function_call -> ID LPAREN function_call_1 RPAREN .)
    LET             reduce using rule 91 (function_call -> ID LPAREN function_call_1 RPAREN .)
    IF              reduce using rule 91 (function_call -> ID LPAREN function_call_1 RPAREN .)
    PRINT           reduce using rule 91 (function_call -> ID LPAREN function_call_1 RPAREN .)
    READ            reduce using rule 91 (function_call -> ID LPAREN function_call_1 RPAREN .)
    RETURN          reduce using rule 91 (function_call -> ID LPAREN function_call_1 RPAREN .)
    FOR             reduce using rule 91 (function_call -> ID LPAREN function_call_1 RPAREN .)
    WHILE           reduce using rule 91 (function_call -> ID LPAREN function_call_1 RPAREN .)
    MEAN            reduce using rule 91 (function_call -> ID LPAREN function_call_1 RPAREN .)
    MEDIAN          reduce using rule 91 (function_call -> ID LPAREN function_call_1 RPAREN .)
    MODE            reduce using rule 91 (function_call -> ID LPAREN function_call_1 RPAREN .)
    VARIANCE        reduce using rule 91 (function_call -> ID LPAREN function_call_1 RPAREN .)
    STDEV           reduce using rule 91 (function_call -> ID LPAREN function_call_1 RPAREN .)
    LPAREN          reduce using rule 91 (function_call -> ID LPAREN function_call_1 RPAREN .)
    LBRACKET        reduce using rule 91 (function_call -> ID LPAREN function_call_1 RPAREN .)
    PLUS            reduce using rule 91 (function_call -> ID LPAREN function_call_1 RPAREN .)
    MINUS           reduce using rule 91 (function_call -> ID LPAREN function_call_1 RPAREN .)
    CTEI            reduce using rule 91 (function_call -> ID LPAREN function_call_1 RPAREN .)
    CTEF            reduce using rule 91 (function_call -> ID LPAREN function_call_1 RPAREN .)
    CTEC            reduce using rule 91 (function_call -> ID LPAREN function_call_1 RPAREN .)
    TRUE            reduce using rule 91 (function_call -> ID LPAREN function_call_1 RPAREN .)
    FALSE           reduce using rule 91 (function_call -> ID LPAREN function_call_1 RPAREN .)
    RBRACE          reduce using rule 91 (function_call -> ID LPAREN function_call_1 RPAREN .)
    TIMES           reduce using rule 91 (function_call -> ID LPAREN function_call_1 RPAREN .)
    DIVIDE          reduce using rule 91 (function_call -> ID LPAREN function_call_1 RPAREN .)
    LT              reduce using rule 91 (function_call -> ID LPAREN function_call_1 RPAREN .)
    LE              reduce using rule 91 (function_call -> ID LPAREN function_call_1 RPAREN .)
    GT              reduce using rule 91 (function_call -> ID LPAREN function_call_1 RPAREN .)
    GE              reduce using rule 91 (function_call -> ID LPAREN function_call_1 RPAREN .)
    EQ              reduce using rule 91 (function_call -> ID LPAREN function_call_1 RPAREN .)
    NE              reduce using rule 91 (function_call -> ID LPAREN function_call_1 RPAREN .)
    AND             reduce using rule 91 (function_call -> ID LPAREN function_call_1 RPAREN .)
    OR              reduce using rule 91 (function_call -> ID LPAREN function_call_1 RPAREN .)
    RBRACKET        reduce using rule 91 (function_call -> ID LPAREN function_call_1 RPAREN .)
    RPAREN          reduce using rule 91 (function_call -> ID LPAREN function_call_1 RPAREN .)
    COMMA           reduce using rule 91 (function_call -> ID LPAREN function_call_1 RPAREN .)
    TO              reduce using rule 91 (function_call -> ID LPAREN function_call_1 RPAREN .)
    BY              reduce using rule 91 (function_call -> ID LPAREN function_call_1 RPAREN .)

  ! SEMI            [ reduce using rule 91 (function_call -> ID LPAREN function_call_1 RPAREN .) ]


state 181

    (94) function_call_1 -> expression COMMA . function_call_1
    (93) function_call_1 -> . expression
    (94) function_call_1 -> . expression COMMA function_call_1
    (43) expression -> . exp
    (44) expression -> . expression1
    (53) exp -> . term
    (54) exp -> . term exp_1
    (45) expression1 -> . exp LT exp
    (46) expression1 -> . exp LE exp
    (47) expression1 -> . exp GT exp
    (48) expression1 -> . exp GE exp
    (49) expression1 -> . exp EQ exp
    (50) expression1 -> . exp NE exp
    (51) expression1 -> . exp AND exp
    (52) expression1 -> . exp OR exp
    (57) term -> . factor
    (58) term -> . factor term_2
    (61) factor -> . LPAREN expression RPAREN
    (62) factor -> . LBRACKET expression RBRACKET
    (63) factor -> . function_call
    (64) factor -> . factor_prima_1
    (89) function_call -> . ID LPAREN RPAREN SEMI
    (90) function_call -> . ID LPAREN function_call_1 RPAREN SEMI
    (91) function_call -> . ID LPAREN function_call_1 RPAREN
    (92) function_call -> . ID LPAREN RPAREN
    (65) factor_prima_1 -> . PLUS varcte
    (66) factor_prima_1 -> . MINUS varcte
    (67) factor_prima_1 -> . varcte
    (68) varcte -> . ID
    (69) varcte -> . CTEI
    (70) varcte -> . CTEF
    (71) varcte -> . CTEC
    (72) varcte -> . TRUE
    (73) varcte -> . FALSE

    LPAREN          shift and go to state 55
    LBRACKET        shift and go to state 53
    ID              shift and go to state 88
    PLUS            shift and go to state 78
    MINUS           shift and go to state 80
    CTEI            shift and go to state 81
    CTEF            shift and go to state 82
    CTEC            shift and go to state 83
    TRUE            shift and go to state 84
    FALSE           shift and go to state 85

    expression                     shift and go to state 146
    function_call_1                shift and go to state 199
    exp                            shift and go to state 61
    expression1                    shift and go to state 62
    term                           shift and go to state 70
    factor                         shift and go to state 76
    function_call                  shift and go to state 87
    factor_prima_1                 shift and go to state 77
    varcte                         shift and go to state 79

state 182

    (41) condition -> IF LPAREN expression RPAREN . block
    (42) condition -> IF LPAREN expression RPAREN . block ELSE block
    (17) block -> . LBRACE statements RBRACE

    LBRACE          shift and go to state 32

    block                          shift and go to state 200

state 183

    (74) writing -> PRINT LPAREN writing_1 RPAREN . SEMI

    SEMI            shift and go to state 201


state 184

    (75) writing_1 -> expression COMMA . writing_1
    (75) writing_1 -> . expression COMMA writing_1
    (76) writing_1 -> . expression
    (77) writing_1 -> . CTESTRING
    (78) writing_1 -> . CTESTRING COMMA
    (43) expression -> . exp
    (44) expression -> . expression1
    (53) exp -> . term
    (54) exp -> . term exp_1
    (45) expression1 -> . exp LT exp
    (46) expression1 -> . exp LE exp
    (47) expression1 -> . exp GT exp
    (48) expression1 -> . exp GE exp
    (49) expression1 -> . exp EQ exp
    (50) expression1 -> . exp NE exp
    (51) expression1 -> . exp AND exp
    (52) expression1 -> . exp OR exp
    (57) term -> . factor
    (58) term -> . factor term_2
    (61) factor -> . LPAREN expression RPAREN
    (62) factor -> . LBRACKET expression RBRACKET
    (63) factor -> . function_call
    (64) factor -> . factor_prima_1
    (89) function_call -> . ID LPAREN RPAREN SEMI
    (90) function_call -> . ID LPAREN function_call_1 RPAREN SEMI
    (91) function_call -> . ID LPAREN function_call_1 RPAREN
    (92) function_call -> . ID LPAREN RPAREN
    (65) factor_prima_1 -> . PLUS varcte
    (66) factor_prima_1 -> . MINUS varcte
    (67) factor_prima_1 -> . varcte
    (68) varcte -> . ID
    (69) varcte -> . CTEI
    (70) varcte -> . CTEF
    (71) varcte -> . CTEC
    (72) varcte -> . TRUE
    (73) varcte -> . FALSE

    CTESTRING       shift and go to state 152
    LPAREN          shift and go to state 55
    LBRACKET        shift and go to state 53
    ID              shift and go to state 88
    PLUS            shift and go to state 78
    MINUS           shift and go to state 80
    CTEI            shift and go to state 81
    CTEF            shift and go to state 82
    CTEC            shift and go to state 83
    TRUE            shift and go to state 84
    FALSE           shift and go to state 85

    expression                     shift and go to state 151
    writing_1                      shift and go to state 202
    exp                            shift and go to state 61
    expression1                    shift and go to state 62
    term                           shift and go to state 70
    factor                         shift and go to state 76
    function_call                  shift and go to state 87
    factor_prima_1                 shift and go to state 77
    varcte                         shift and go to state 79

state 185

    (78) writing_1 -> CTESTRING COMMA .

    RPAREN          reduce using rule 78 (writing_1 -> CTESTRING COMMA .)


state 186

    (79) reading -> READ LPAREN reading_1 RPAREN . SEMI

    SEMI            shift and go to state 203


state 187

    (80) reading_1 -> ID COMMA . reading_1
    (80) reading_1 -> . ID COMMA reading_1
    (81) reading_1 -> . ID LBRACKET expression RBRACKET COMMA reading_1
    (82) reading_1 -> . ID
    (83) reading_1 -> . ID LBRACKET expression RBRACKET

    ID              shift and go to state 154

    reading_1                      shift and go to state 204

state 188

    (81) reading_1 -> ID LBRACKET . expression RBRACKET COMMA reading_1
    (83) reading_1 -> ID LBRACKET . expression RBRACKET
    (43) expression -> . exp
    (44) expression -> . expression1
    (53) exp -> . term
    (54) exp -> . term exp_1
    (45) expression1 -> . exp LT exp
    (46) expression1 -> . exp LE exp
    (47) expression1 -> . exp GT exp
    (48) expression1 -> . exp GE exp
    (49) expression1 -> . exp EQ exp
    (50) expression1 -> . exp NE exp
    (51) expression1 -> . exp AND exp
    (52) expression1 -> . exp OR exp
    (57) term -> . factor
    (58) term -> . factor term_2
    (61) factor -> . LPAREN expression RPAREN
    (62) factor -> . LBRACKET expression RBRACKET
    (63) factor -> . function_call
    (64) factor -> . factor_prima_1
    (89) function_call -> . ID LPAREN RPAREN SEMI
    (90) function_call -> . ID LPAREN function_call_1 RPAREN SEMI
    (91) function_call -> . ID LPAREN function_call_1 RPAREN
    (92) function_call -> . ID LPAREN RPAREN
    (65) factor_prima_1 -> . PLUS varcte
    (66) factor_prima_1 -> . MINUS varcte
    (67) factor_prima_1 -> . varcte
    (68) varcte -> . ID
    (69) varcte -> . CTEI
    (70) varcte -> . CTEF
    (71) varcte -> . CTEC
    (72) varcte -> . TRUE
    (73) varcte -> . FALSE

    LPAREN          shift and go to state 55
    LBRACKET        shift and go to state 53
    ID              shift and go to state 88
    PLUS            shift and go to state 78
    MINUS           shift and go to state 80
    CTEI            shift and go to state 81
    CTEF            shift and go to state 82
    CTEC            shift and go to state 83
    TRUE            shift and go to state 84
    FALSE           shift and go to state 85

    expression                     shift and go to state 205
    exp                            shift and go to state 61
    expression1                    shift and go to state 62
    term                           shift and go to state 70
    factor                         shift and go to state 76
    function_call                  shift and go to state 87
    factor_prima_1                 shift and go to state 77
    varcte                         shift and go to state 79

state 189

    (87) non_conditional_loop -> FOR LPAREN ID EQUALS . expression TO expression BY expression RPAREN block
    (43) expression -> . exp
    (44) expression -> . expression1
    (53) exp -> . term
    (54) exp -> . term exp_1
    (45) expression1 -> . exp LT exp
    (46) expression1 -> . exp LE exp
    (47) expression1 -> . exp GT exp
    (48) expression1 -> . exp GE exp
    (49) expression1 -> . exp EQ exp
    (50) expression1 -> . exp NE exp
    (51) expression1 -> . exp AND exp
    (52) expression1 -> . exp OR exp
    (57) term -> . factor
    (58) term -> . factor term_2
    (61) factor -> . LPAREN expression RPAREN
    (62) factor -> . LBRACKET expression RBRACKET
    (63) factor -> . function_call
    (64) factor -> . factor_prima_1
    (89) function_call -> . ID LPAREN RPAREN SEMI
    (90) function_call -> . ID LPAREN function_call_1 RPAREN SEMI
    (91) function_call -> . ID LPAREN function_call_1 RPAREN
    (92) function_call -> . ID LPAREN RPAREN
    (65) factor_prima_1 -> . PLUS varcte
    (66) factor_prima_1 -> . MINUS varcte
    (67) factor_prima_1 -> . varcte
    (68) varcte -> . ID
    (69) varcte -> . CTEI
    (70) varcte -> . CTEF
    (71) varcte -> . CTEC
    (72) varcte -> . TRUE
    (73) varcte -> . FALSE

    LPAREN          shift and go to state 55
    LBRACKET        shift and go to state 53
    ID              shift and go to state 88
    PLUS            shift and go to state 78
    MINUS           shift and go to state 80
    CTEI            shift and go to state 81
    CTEF            shift and go to state 82
    CTEC            shift and go to state 83
    TRUE            shift and go to state 84
    FALSE           shift and go to state 85

    expression                     shift and go to state 206
    exp                            shift and go to state 61
    expression1                    shift and go to state 62
    term                           shift and go to state 70
    factor                         shift and go to state 76
    function_call                  shift and go to state 87
    factor_prima_1                 shift and go to state 77
    varcte                         shift and go to state 79

state 190

    (86) conditional_loop -> WHILE LPAREN expression RPAREN . DO block

    DO              shift and go to state 207


state 191

    (95) mean -> MEAN LPAREN expression RPAREN . SEMI

    SEMI            shift and go to state 208


state 192

    (96) median -> MEDIAN LPAREN expression RPAREN . SEMI

    SEMI            shift and go to state 209


state 193

    (97) mode -> MODE LPAREN expression RPAREN . SEMI

    SEMI            shift and go to state 210


state 194

    (98) variance -> VARIANCE LPAREN expression RPAREN . SEMI

    SEMI            shift and go to state 211


state 195

    (99) standard_deviation -> STDEV LPAREN expression RPAREN . SEMI

    SEMI            shift and go to state 212


state 196

    (20) params -> ID COLON type COMMA . params
    (20) params -> . ID COLON type COMMA params
    (21) params -> . ID COLON type

    ID              shift and go to state 89

    params                         shift and go to state 213

state 197

    (40) assignment -> ID LBRACKET expression RBRACKET EQUALS . expression SEMI
    (43) expression -> . exp
    (44) expression -> . expression1
    (53) exp -> . term
    (54) exp -> . term exp_1
    (45) expression1 -> . exp LT exp
    (46) expression1 -> . exp LE exp
    (47) expression1 -> . exp GT exp
    (48) expression1 -> . exp GE exp
    (49) expression1 -> . exp EQ exp
    (50) expression1 -> . exp NE exp
    (51) expression1 -> . exp AND exp
    (52) expression1 -> . exp OR exp
    (57) term -> . factor
    (58) term -> . factor term_2
    (61) factor -> . LPAREN expression RPAREN
    (62) factor -> . LBRACKET expression RBRACKET
    (63) factor -> . function_call
    (64) factor -> . factor_prima_1
    (89) function_call -> . ID LPAREN RPAREN SEMI
    (90) function_call -> . ID LPAREN function_call_1 RPAREN SEMI
    (91) function_call -> . ID LPAREN function_call_1 RPAREN
    (92) function_call -> . ID LPAREN RPAREN
    (65) factor_prima_1 -> . PLUS varcte
    (66) factor_prima_1 -> . MINUS varcte
    (67) factor_prima_1 -> . varcte
    (68) varcte -> . ID
    (69) varcte -> . CTEI
    (70) varcte -> . CTEF
    (71) varcte -> . CTEC
    (72) varcte -> . TRUE
    (73) varcte -> . FALSE

    LPAREN          shift and go to state 55
    LBRACKET        shift and go to state 53
    ID              shift and go to state 88
    PLUS            shift and go to state 78
    MINUS           shift and go to state 80
    CTEI            shift and go to state 81
    CTEF            shift and go to state 82
    CTEC            shift and go to state 83
    TRUE            shift and go to state 84
    FALSE           shift and go to state 85

    expression                     shift and go to state 214
    exp                            shift and go to state 61
    expression1                    shift and go to state 62
    term                           shift and go to state 70
    factor                         shift and go to state 76
    function_call                  shift and go to state 87
    factor_prima_1                 shift and go to state 77
    varcte                         shift and go to state 79

state 198

    (90) function_call -> ID LPAREN function_call_1 RPAREN SEMI .

    ID              reduce using rule 90 (function_call -> ID LPAREN function_call_1 RPAREN SEMI .)
    LET             reduce using rule 90 (function_call -> ID LPAREN function_call_1 RPAREN SEMI .)
    IF              reduce using rule 90 (function_call -> ID LPAREN function_call_1 RPAREN SEMI .)
    PRINT           reduce using rule 90 (function_call -> ID LPAREN function_call_1 RPAREN SEMI .)
    READ            reduce using rule 90 (function_call -> ID LPAREN function_call_1 RPAREN SEMI .)
    RETURN          reduce using rule 90 (function_call -> ID LPAREN function_call_1 RPAREN SEMI .)
    FOR             reduce using rule 90 (function_call -> ID LPAREN function_call_1 RPAREN SEMI .)
    WHILE           reduce using rule 90 (function_call -> ID LPAREN function_call_1 RPAREN SEMI .)
    MEAN            reduce using rule 90 (function_call -> ID LPAREN function_call_1 RPAREN SEMI .)
    MEDIAN          reduce using rule 90 (function_call -> ID LPAREN function_call_1 RPAREN SEMI .)
    MODE            reduce using rule 90 (function_call -> ID LPAREN function_call_1 RPAREN SEMI .)
    VARIANCE        reduce using rule 90 (function_call -> ID LPAREN function_call_1 RPAREN SEMI .)
    STDEV           reduce using rule 90 (function_call -> ID LPAREN function_call_1 RPAREN SEMI .)
    LPAREN          reduce using rule 90 (function_call -> ID LPAREN function_call_1 RPAREN SEMI .)
    LBRACKET        reduce using rule 90 (function_call -> ID LPAREN function_call_1 RPAREN SEMI .)
    PLUS            reduce using rule 90 (function_call -> ID LPAREN function_call_1 RPAREN SEMI .)
    MINUS           reduce using rule 90 (function_call -> ID LPAREN function_call_1 RPAREN SEMI .)
    CTEI            reduce using rule 90 (function_call -> ID LPAREN function_call_1 RPAREN SEMI .)
    CTEF            reduce using rule 90 (function_call -> ID LPAREN function_call_1 RPAREN SEMI .)
    CTEC            reduce using rule 90 (function_call -> ID LPAREN function_call_1 RPAREN SEMI .)
    TRUE            reduce using rule 90 (function_call -> ID LPAREN function_call_1 RPAREN SEMI .)
    FALSE           reduce using rule 90 (function_call -> ID LPAREN function_call_1 RPAREN SEMI .)
    RBRACE          reduce using rule 90 (function_call -> ID LPAREN function_call_1 RPAREN SEMI .)
    TIMES           reduce using rule 90 (function_call -> ID LPAREN function_call_1 RPAREN SEMI .)
    DIVIDE          reduce using rule 90 (function_call -> ID LPAREN function_call_1 RPAREN SEMI .)
    LT              reduce using rule 90 (function_call -> ID LPAREN function_call_1 RPAREN SEMI .)
    LE              reduce using rule 90 (function_call -> ID LPAREN function_call_1 RPAREN SEMI .)
    GT              reduce using rule 90 (function_call -> ID LPAREN function_call_1 RPAREN SEMI .)
    GE              reduce using rule 90 (function_call -> ID LPAREN function_call_1 RPAREN SEMI .)
    EQ              reduce using rule 90 (function_call -> ID LPAREN function_call_1 RPAREN SEMI .)
    NE              reduce using rule 90 (function_call -> ID LPAREN function_call_1 RPAREN SEMI .)
    AND             reduce using rule 90 (function_call -> ID LPAREN function_call_1 RPAREN SEMI .)
    OR              reduce using rule 90 (function_call -> ID LPAREN function_call_1 RPAREN SEMI .)
    RBRACKET        reduce using rule 90 (function_call -> ID LPAREN function_call_1 RPAREN SEMI .)
    RPAREN          reduce using rule 90 (function_call -> ID LPAREN function_call_1 RPAREN SEMI .)
    SEMI            reduce using rule 90 (function_call -> ID LPAREN function_call_1 RPAREN SEMI .)
    COMMA           reduce using rule 90 (function_call -> ID LPAREN function_call_1 RPAREN SEMI .)
    TO              reduce using rule 90 (function_call -> ID LPAREN function_call_1 RPAREN SEMI .)
    BY              reduce using rule 90 (function_call -> ID LPAREN function_call_1 RPAREN SEMI .)


state 199

    (94) function_call_1 -> expression COMMA function_call_1 .

    RPAREN          reduce using rule 94 (function_call_1 -> expression COMMA function_call_1 .)


state 200

    (41) condition -> IF LPAREN expression RPAREN block .
    (42) condition -> IF LPAREN expression RPAREN block . ELSE block

    ID              reduce using rule 41 (condition -> IF LPAREN expression RPAREN block .)
    LET             reduce using rule 41 (condition -> IF LPAREN expression RPAREN block .)
    IF              reduce using rule 41 (condition -> IF LPAREN expression RPAREN block .)
    PRINT           reduce using rule 41 (condition -> IF LPAREN expression RPAREN block .)
    READ            reduce using rule 41 (condition -> IF LPAREN expression RPAREN block .)
    RETURN          reduce using rule 41 (condition -> IF LPAREN expression RPAREN block .)
    FOR             reduce using rule 41 (condition -> IF LPAREN expression RPAREN block .)
    WHILE           reduce using rule 41 (condition -> IF LPAREN expression RPAREN block .)
    MEAN            reduce using rule 41 (condition -> IF LPAREN expression RPAREN block .)
    MEDIAN          reduce using rule 41 (condition -> IF LPAREN expression RPAREN block .)
    MODE            reduce using rule 41 (condition -> IF LPAREN expression RPAREN block .)
    VARIANCE        reduce using rule 41 (condition -> IF LPAREN expression RPAREN block .)
    STDEV           reduce using rule 41 (condition -> IF LPAREN expression RPAREN block .)
    LPAREN          reduce using rule 41 (condition -> IF LPAREN expression RPAREN block .)
    LBRACKET        reduce using rule 41 (condition -> IF LPAREN expression RPAREN block .)
    PLUS            reduce using rule 41 (condition -> IF LPAREN expression RPAREN block .)
    MINUS           reduce using rule 41 (condition -> IF LPAREN expression RPAREN block .)
    CTEI            reduce using rule 41 (condition -> IF LPAREN expression RPAREN block .)
    CTEF            reduce using rule 41 (condition -> IF LPAREN expression RPAREN block .)
    CTEC            reduce using rule 41 (condition -> IF LPAREN expression RPAREN block .)
    TRUE            reduce using rule 41 (condition -> IF LPAREN expression RPAREN block .)
    FALSE           reduce using rule 41 (condition -> IF LPAREN expression RPAREN block .)
    RBRACE          reduce using rule 41 (condition -> IF LPAREN expression RPAREN block .)
    ELSE            shift and go to state 215


state 201

    (74) writing -> PRINT LPAREN writing_1 RPAREN SEMI .

    ID              reduce using rule 74 (writing -> PRINT LPAREN writing_1 RPAREN SEMI .)
    LET             reduce using rule 74 (writing -> PRINT LPAREN writing_1 RPAREN SEMI .)
    IF              reduce using rule 74 (writing -> PRINT LPAREN writing_1 RPAREN SEMI .)
    PRINT           reduce using rule 74 (writing -> PRINT LPAREN writing_1 RPAREN SEMI .)
    READ            reduce using rule 74 (writing -> PRINT LPAREN writing_1 RPAREN SEMI .)
    RETURN          reduce using rule 74 (writing -> PRINT LPAREN writing_1 RPAREN SEMI .)
    FOR             reduce using rule 74 (writing -> PRINT LPAREN writing_1 RPAREN SEMI .)
    WHILE           reduce using rule 74 (writing -> PRINT LPAREN writing_1 RPAREN SEMI .)
    MEAN            reduce using rule 74 (writing -> PRINT LPAREN writing_1 RPAREN SEMI .)
    MEDIAN          reduce using rule 74 (writing -> PRINT LPAREN writing_1 RPAREN SEMI .)
    MODE            reduce using rule 74 (writing -> PRINT LPAREN writing_1 RPAREN SEMI .)
    VARIANCE        reduce using rule 74 (writing -> PRINT LPAREN writing_1 RPAREN SEMI .)
    STDEV           reduce using rule 74 (writing -> PRINT LPAREN writing_1 RPAREN SEMI .)
    LPAREN          reduce using rule 74 (writing -> PRINT LPAREN writing_1 RPAREN SEMI .)
    LBRACKET        reduce using rule 74 (writing -> PRINT LPAREN writing_1 RPAREN SEMI .)
    PLUS            reduce using rule 74 (writing -> PRINT LPAREN writing_1 RPAREN SEMI .)
    MINUS           reduce using rule 74 (writing -> PRINT LPAREN writing_1 RPAREN SEMI .)
    CTEI            reduce using rule 74 (writing -> PRINT LPAREN writing_1 RPAREN SEMI .)
    CTEF            reduce using rule 74 (writing -> PRINT LPAREN writing_1 RPAREN SEMI .)
    CTEC            reduce using rule 74 (writing -> PRINT LPAREN writing_1 RPAREN SEMI .)
    TRUE            reduce using rule 74 (writing -> PRINT LPAREN writing_1 RPAREN SEMI .)
    FALSE           reduce using rule 74 (writing -> PRINT LPAREN writing_1 RPAREN SEMI .)
    RBRACE          reduce using rule 74 (writing -> PRINT LPAREN writing_1 RPAREN SEMI .)


state 202

    (75) writing_1 -> expression COMMA writing_1 .

    RPAREN          reduce using rule 75 (writing_1 -> expression COMMA writing_1 .)


state 203

    (79) reading -> READ LPAREN reading_1 RPAREN SEMI .

    ID              reduce using rule 79 (reading -> READ LPAREN reading_1 RPAREN SEMI .)
    LET             reduce using rule 79 (reading -> READ LPAREN reading_1 RPAREN SEMI .)
    IF              reduce using rule 79 (reading -> READ LPAREN reading_1 RPAREN SEMI .)
    PRINT           reduce using rule 79 (reading -> READ LPAREN reading_1 RPAREN SEMI .)
    READ            reduce using rule 79 (reading -> READ LPAREN reading_1 RPAREN SEMI .)
    RETURN          reduce using rule 79 (reading -> READ LPAREN reading_1 RPAREN SEMI .)
    FOR             reduce using rule 79 (reading -> READ LPAREN reading_1 RPAREN SEMI .)
    WHILE           reduce using rule 79 (reading -> READ LPAREN reading_1 RPAREN SEMI .)
    MEAN            reduce using rule 79 (reading -> READ LPAREN reading_1 RPAREN SEMI .)
    MEDIAN          reduce using rule 79 (reading -> READ LPAREN reading_1 RPAREN SEMI .)
    MODE            reduce using rule 79 (reading -> READ LPAREN reading_1 RPAREN SEMI .)
    VARIANCE        reduce using rule 79 (reading -> READ LPAREN reading_1 RPAREN SEMI .)
    STDEV           reduce using rule 79 (reading -> READ LPAREN reading_1 RPAREN SEMI .)
    LPAREN          reduce using rule 79 (reading -> READ LPAREN reading_1 RPAREN SEMI .)
    LBRACKET        reduce using rule 79 (reading -> READ LPAREN reading_1 RPAREN SEMI .)
    PLUS            reduce using rule 79 (reading -> READ LPAREN reading_1 RPAREN SEMI .)
    MINUS           reduce using rule 79 (reading -> READ LPAREN reading_1 RPAREN SEMI .)
    CTEI            reduce using rule 79 (reading -> READ LPAREN reading_1 RPAREN SEMI .)
    CTEF            reduce using rule 79 (reading -> READ LPAREN reading_1 RPAREN SEMI .)
    CTEC            reduce using rule 79 (reading -> READ LPAREN reading_1 RPAREN SEMI .)
    TRUE            reduce using rule 79 (reading -> READ LPAREN reading_1 RPAREN SEMI .)
    FALSE           reduce using rule 79 (reading -> READ LPAREN reading_1 RPAREN SEMI .)
    RBRACE          reduce using rule 79 (reading -> READ LPAREN reading_1 RPAREN SEMI .)


state 204

    (80) reading_1 -> ID COMMA reading_1 .

    RPAREN          reduce using rule 80 (reading_1 -> ID COMMA reading_1 .)


state 205

    (81) reading_1 -> ID LBRACKET expression . RBRACKET COMMA reading_1
    (83) reading_1 -> ID LBRACKET expression . RBRACKET

    RBRACKET        shift and go to state 216


state 206

    (87) non_conditional_loop -> FOR LPAREN ID EQUALS expression . TO expression BY expression RPAREN block

    TO              shift and go to state 217


state 207

    (86) conditional_loop -> WHILE LPAREN expression RPAREN DO . block
    (17) block -> . LBRACE statements RBRACE

    LBRACE          shift and go to state 32

    block                          shift and go to state 218

state 208

    (95) mean -> MEAN LPAREN expression RPAREN SEMI .

    ID              reduce using rule 95 (mean -> MEAN LPAREN expression RPAREN SEMI .)
    LET             reduce using rule 95 (mean -> MEAN LPAREN expression RPAREN SEMI .)
    IF              reduce using rule 95 (mean -> MEAN LPAREN expression RPAREN SEMI .)
    PRINT           reduce using rule 95 (mean -> MEAN LPAREN expression RPAREN SEMI .)
    READ            reduce using rule 95 (mean -> MEAN LPAREN expression RPAREN SEMI .)
    RETURN          reduce using rule 95 (mean -> MEAN LPAREN expression RPAREN SEMI .)
    FOR             reduce using rule 95 (mean -> MEAN LPAREN expression RPAREN SEMI .)
    WHILE           reduce using rule 95 (mean -> MEAN LPAREN expression RPAREN SEMI .)
    MEAN            reduce using rule 95 (mean -> MEAN LPAREN expression RPAREN SEMI .)
    MEDIAN          reduce using rule 95 (mean -> MEAN LPAREN expression RPAREN SEMI .)
    MODE            reduce using rule 95 (mean -> MEAN LPAREN expression RPAREN SEMI .)
    VARIANCE        reduce using rule 95 (mean -> MEAN LPAREN expression RPAREN SEMI .)
    STDEV           reduce using rule 95 (mean -> MEAN LPAREN expression RPAREN SEMI .)
    LPAREN          reduce using rule 95 (mean -> MEAN LPAREN expression RPAREN SEMI .)
    LBRACKET        reduce using rule 95 (mean -> MEAN LPAREN expression RPAREN SEMI .)
    PLUS            reduce using rule 95 (mean -> MEAN LPAREN expression RPAREN SEMI .)
    MINUS           reduce using rule 95 (mean -> MEAN LPAREN expression RPAREN SEMI .)
    CTEI            reduce using rule 95 (mean -> MEAN LPAREN expression RPAREN SEMI .)
    CTEF            reduce using rule 95 (mean -> MEAN LPAREN expression RPAREN SEMI .)
    CTEC            reduce using rule 95 (mean -> MEAN LPAREN expression RPAREN SEMI .)
    TRUE            reduce using rule 95 (mean -> MEAN LPAREN expression RPAREN SEMI .)
    FALSE           reduce using rule 95 (mean -> MEAN LPAREN expression RPAREN SEMI .)
    RBRACE          reduce using rule 95 (mean -> MEAN LPAREN expression RPAREN SEMI .)


state 209

    (96) median -> MEDIAN LPAREN expression RPAREN SEMI .

    ID              reduce using rule 96 (median -> MEDIAN LPAREN expression RPAREN SEMI .)
    LET             reduce using rule 96 (median -> MEDIAN LPAREN expression RPAREN SEMI .)
    IF              reduce using rule 96 (median -> MEDIAN LPAREN expression RPAREN SEMI .)
    PRINT           reduce using rule 96 (median -> MEDIAN LPAREN expression RPAREN SEMI .)
    READ            reduce using rule 96 (median -> MEDIAN LPAREN expression RPAREN SEMI .)
    RETURN          reduce using rule 96 (median -> MEDIAN LPAREN expression RPAREN SEMI .)
    FOR             reduce using rule 96 (median -> MEDIAN LPAREN expression RPAREN SEMI .)
    WHILE           reduce using rule 96 (median -> MEDIAN LPAREN expression RPAREN SEMI .)
    MEAN            reduce using rule 96 (median -> MEDIAN LPAREN expression RPAREN SEMI .)
    MEDIAN          reduce using rule 96 (median -> MEDIAN LPAREN expression RPAREN SEMI .)
    MODE            reduce using rule 96 (median -> MEDIAN LPAREN expression RPAREN SEMI .)
    VARIANCE        reduce using rule 96 (median -> MEDIAN LPAREN expression RPAREN SEMI .)
    STDEV           reduce using rule 96 (median -> MEDIAN LPAREN expression RPAREN SEMI .)
    LPAREN          reduce using rule 96 (median -> MEDIAN LPAREN expression RPAREN SEMI .)
    LBRACKET        reduce using rule 96 (median -> MEDIAN LPAREN expression RPAREN SEMI .)
    PLUS            reduce using rule 96 (median -> MEDIAN LPAREN expression RPAREN SEMI .)
    MINUS           reduce using rule 96 (median -> MEDIAN LPAREN expression RPAREN SEMI .)
    CTEI            reduce using rule 96 (median -> MEDIAN LPAREN expression RPAREN SEMI .)
    CTEF            reduce using rule 96 (median -> MEDIAN LPAREN expression RPAREN SEMI .)
    CTEC            reduce using rule 96 (median -> MEDIAN LPAREN expression RPAREN SEMI .)
    TRUE            reduce using rule 96 (median -> MEDIAN LPAREN expression RPAREN SEMI .)
    FALSE           reduce using rule 96 (median -> MEDIAN LPAREN expression RPAREN SEMI .)
    RBRACE          reduce using rule 96 (median -> MEDIAN LPAREN expression RPAREN SEMI .)


state 210

    (97) mode -> MODE LPAREN expression RPAREN SEMI .

    ID              reduce using rule 97 (mode -> MODE LPAREN expression RPAREN SEMI .)
    LET             reduce using rule 97 (mode -> MODE LPAREN expression RPAREN SEMI .)
    IF              reduce using rule 97 (mode -> MODE LPAREN expression RPAREN SEMI .)
    PRINT           reduce using rule 97 (mode -> MODE LPAREN expression RPAREN SEMI .)
    READ            reduce using rule 97 (mode -> MODE LPAREN expression RPAREN SEMI .)
    RETURN          reduce using rule 97 (mode -> MODE LPAREN expression RPAREN SEMI .)
    FOR             reduce using rule 97 (mode -> MODE LPAREN expression RPAREN SEMI .)
    WHILE           reduce using rule 97 (mode -> MODE LPAREN expression RPAREN SEMI .)
    MEAN            reduce using rule 97 (mode -> MODE LPAREN expression RPAREN SEMI .)
    MEDIAN          reduce using rule 97 (mode -> MODE LPAREN expression RPAREN SEMI .)
    MODE            reduce using rule 97 (mode -> MODE LPAREN expression RPAREN SEMI .)
    VARIANCE        reduce using rule 97 (mode -> MODE LPAREN expression RPAREN SEMI .)
    STDEV           reduce using rule 97 (mode -> MODE LPAREN expression RPAREN SEMI .)
    LPAREN          reduce using rule 97 (mode -> MODE LPAREN expression RPAREN SEMI .)
    LBRACKET        reduce using rule 97 (mode -> MODE LPAREN expression RPAREN SEMI .)
    PLUS            reduce using rule 97 (mode -> MODE LPAREN expression RPAREN SEMI .)
    MINUS           reduce using rule 97 (mode -> MODE LPAREN expression RPAREN SEMI .)
    CTEI            reduce using rule 97 (mode -> MODE LPAREN expression RPAREN SEMI .)
    CTEF            reduce using rule 97 (mode -> MODE LPAREN expression RPAREN SEMI .)
    CTEC            reduce using rule 97 (mode -> MODE LPAREN expression RPAREN SEMI .)
    TRUE            reduce using rule 97 (mode -> MODE LPAREN expression RPAREN SEMI .)
    FALSE           reduce using rule 97 (mode -> MODE LPAREN expression RPAREN SEMI .)
    RBRACE          reduce using rule 97 (mode -> MODE LPAREN expression RPAREN SEMI .)


state 211

    (98) variance -> VARIANCE LPAREN expression RPAREN SEMI .

    ID              reduce using rule 98 (variance -> VARIANCE LPAREN expression RPAREN SEMI .)
    LET             reduce using rule 98 (variance -> VARIANCE LPAREN expression RPAREN SEMI .)
    IF              reduce using rule 98 (variance -> VARIANCE LPAREN expression RPAREN SEMI .)
    PRINT           reduce using rule 98 (variance -> VARIANCE LPAREN expression RPAREN SEMI .)
    READ            reduce using rule 98 (variance -> VARIANCE LPAREN expression RPAREN SEMI .)
    RETURN          reduce using rule 98 (variance -> VARIANCE LPAREN expression RPAREN SEMI .)
    FOR             reduce using rule 98 (variance -> VARIANCE LPAREN expression RPAREN SEMI .)
    WHILE           reduce using rule 98 (variance -> VARIANCE LPAREN expression RPAREN SEMI .)
    MEAN            reduce using rule 98 (variance -> VARIANCE LPAREN expression RPAREN SEMI .)
    MEDIAN          reduce using rule 98 (variance -> VARIANCE LPAREN expression RPAREN SEMI .)
    MODE            reduce using rule 98 (variance -> VARIANCE LPAREN expression RPAREN SEMI .)
    VARIANCE        reduce using rule 98 (variance -> VARIANCE LPAREN expression RPAREN SEMI .)
    STDEV           reduce using rule 98 (variance -> VARIANCE LPAREN expression RPAREN SEMI .)
    LPAREN          reduce using rule 98 (variance -> VARIANCE LPAREN expression RPAREN SEMI .)
    LBRACKET        reduce using rule 98 (variance -> VARIANCE LPAREN expression RPAREN SEMI .)
    PLUS            reduce using rule 98 (variance -> VARIANCE LPAREN expression RPAREN SEMI .)
    MINUS           reduce using rule 98 (variance -> VARIANCE LPAREN expression RPAREN SEMI .)
    CTEI            reduce using rule 98 (variance -> VARIANCE LPAREN expression RPAREN SEMI .)
    CTEF            reduce using rule 98 (variance -> VARIANCE LPAREN expression RPAREN SEMI .)
    CTEC            reduce using rule 98 (variance -> VARIANCE LPAREN expression RPAREN SEMI .)
    TRUE            reduce using rule 98 (variance -> VARIANCE LPAREN expression RPAREN SEMI .)
    FALSE           reduce using rule 98 (variance -> VARIANCE LPAREN expression RPAREN SEMI .)
    RBRACE          reduce using rule 98 (variance -> VARIANCE LPAREN expression RPAREN SEMI .)


state 212

    (99) standard_deviation -> STDEV LPAREN expression RPAREN SEMI .

    ID              reduce using rule 99 (standard_deviation -> STDEV LPAREN expression RPAREN SEMI .)
    LET             reduce using rule 99 (standard_deviation -> STDEV LPAREN expression RPAREN SEMI .)
    IF              reduce using rule 99 (standard_deviation -> STDEV LPAREN expression RPAREN SEMI .)
    PRINT           reduce using rule 99 (standard_deviation -> STDEV LPAREN expression RPAREN SEMI .)
    READ            reduce using rule 99 (standard_deviation -> STDEV LPAREN expression RPAREN SEMI .)
    RETURN          reduce using rule 99 (standard_deviation -> STDEV LPAREN expression RPAREN SEMI .)
    FOR             reduce using rule 99 (standard_deviation -> STDEV LPAREN expression RPAREN SEMI .)
    WHILE           reduce using rule 99 (standard_deviation -> STDEV LPAREN expression RPAREN SEMI .)
    MEAN            reduce using rule 99 (standard_deviation -> STDEV LPAREN expression RPAREN SEMI .)
    MEDIAN          reduce using rule 99 (standard_deviation -> STDEV LPAREN expression RPAREN SEMI .)
    MODE            reduce using rule 99 (standard_deviation -> STDEV LPAREN expression RPAREN SEMI .)
    VARIANCE        reduce using rule 99 (standard_deviation -> STDEV LPAREN expression RPAREN SEMI .)
    STDEV           reduce using rule 99 (standard_deviation -> STDEV LPAREN expression RPAREN SEMI .)
    LPAREN          reduce using rule 99 (standard_deviation -> STDEV LPAREN expression RPAREN SEMI .)
    LBRACKET        reduce using rule 99 (standard_deviation -> STDEV LPAREN expression RPAREN SEMI .)
    PLUS            reduce using rule 99 (standard_deviation -> STDEV LPAREN expression RPAREN SEMI .)
    MINUS           reduce using rule 99 (standard_deviation -> STDEV LPAREN expression RPAREN SEMI .)
    CTEI            reduce using rule 99 (standard_deviation -> STDEV LPAREN expression RPAREN SEMI .)
    CTEF            reduce using rule 99 (standard_deviation -> STDEV LPAREN expression RPAREN SEMI .)
    CTEC            reduce using rule 99 (standard_deviation -> STDEV LPAREN expression RPAREN SEMI .)
    TRUE            reduce using rule 99 (standard_deviation -> STDEV LPAREN expression RPAREN SEMI .)
    FALSE           reduce using rule 99 (standard_deviation -> STDEV LPAREN expression RPAREN SEMI .)
    RBRACE          reduce using rule 99 (standard_deviation -> STDEV LPAREN expression RPAREN SEMI .)


state 213

    (20) params -> ID COLON type COMMA params .

    RPAREN          reduce using rule 20 (params -> ID COLON type COMMA params .)


state 214

    (40) assignment -> ID LBRACKET expression RBRACKET EQUALS expression . SEMI

    SEMI            shift and go to state 219


state 215

    (42) condition -> IF LPAREN expression RPAREN block ELSE . block
    (17) block -> . LBRACE statements RBRACE

    LBRACE          shift and go to state 32

    block                          shift and go to state 220

state 216

    (81) reading_1 -> ID LBRACKET expression RBRACKET . COMMA reading_1
    (83) reading_1 -> ID LBRACKET expression RBRACKET .

    COMMA           shift and go to state 221
    RPAREN          reduce using rule 83 (reading_1 -> ID LBRACKET expression RBRACKET .)


state 217

    (87) non_conditional_loop -> FOR LPAREN ID EQUALS expression TO . expression BY expression RPAREN block
    (43) expression -> . exp
    (44) expression -> . expression1
    (53) exp -> . term
    (54) exp -> . term exp_1
    (45) expression1 -> . exp LT exp
    (46) expression1 -> . exp LE exp
    (47) expression1 -> . exp GT exp
    (48) expression1 -> . exp GE exp
    (49) expression1 -> . exp EQ exp
    (50) expression1 -> . exp NE exp
    (51) expression1 -> . exp AND exp
    (52) expression1 -> . exp OR exp
    (57) term -> . factor
    (58) term -> . factor term_2
    (61) factor -> . LPAREN expression RPAREN
    (62) factor -> . LBRACKET expression RBRACKET
    (63) factor -> . function_call
    (64) factor -> . factor_prima_1
    (89) function_call -> . ID LPAREN RPAREN SEMI
    (90) function_call -> . ID LPAREN function_call_1 RPAREN SEMI
    (91) function_call -> . ID LPAREN function_call_1 RPAREN
    (92) function_call -> . ID LPAREN RPAREN
    (65) factor_prima_1 -> . PLUS varcte
    (66) factor_prima_1 -> . MINUS varcte
    (67) factor_prima_1 -> . varcte
    (68) varcte -> . ID
    (69) varcte -> . CTEI
    (70) varcte -> . CTEF
    (71) varcte -> . CTEC
    (72) varcte -> . TRUE
    (73) varcte -> . FALSE

    LPAREN          shift and go to state 55
    LBRACKET        shift and go to state 53
    ID              shift and go to state 88
    PLUS            shift and go to state 78
    MINUS           shift and go to state 80
    CTEI            shift and go to state 81
    CTEF            shift and go to state 82
    CTEC            shift and go to state 83
    TRUE            shift and go to state 84
    FALSE           shift and go to state 85

    expression                     shift and go to state 222
    exp                            shift and go to state 61
    expression1                    shift and go to state 62
    term                           shift and go to state 70
    factor                         shift and go to state 76
    function_call                  shift and go to state 87
    factor_prima_1                 shift and go to state 77
    varcte                         shift and go to state 79

state 218

    (86) conditional_loop -> WHILE LPAREN expression RPAREN DO block .

    ID              reduce using rule 86 (conditional_loop -> WHILE LPAREN expression RPAREN DO block .)
    LET             reduce using rule 86 (conditional_loop -> WHILE LPAREN expression RPAREN DO block .)
    IF              reduce using rule 86 (conditional_loop -> WHILE LPAREN expression RPAREN DO block .)
    PRINT           reduce using rule 86 (conditional_loop -> WHILE LPAREN expression RPAREN DO block .)
    READ            reduce using rule 86 (conditional_loop -> WHILE LPAREN expression RPAREN DO block .)
    RETURN          reduce using rule 86 (conditional_loop -> WHILE LPAREN expression RPAREN DO block .)
    FOR             reduce using rule 86 (conditional_loop -> WHILE LPAREN expression RPAREN DO block .)
    WHILE           reduce using rule 86 (conditional_loop -> WHILE LPAREN expression RPAREN DO block .)
    MEAN            reduce using rule 86 (conditional_loop -> WHILE LPAREN expression RPAREN DO block .)
    MEDIAN          reduce using rule 86 (conditional_loop -> WHILE LPAREN expression RPAREN DO block .)
    MODE            reduce using rule 86 (conditional_loop -> WHILE LPAREN expression RPAREN DO block .)
    VARIANCE        reduce using rule 86 (conditional_loop -> WHILE LPAREN expression RPAREN DO block .)
    STDEV           reduce using rule 86 (conditional_loop -> WHILE LPAREN expression RPAREN DO block .)
    LPAREN          reduce using rule 86 (conditional_loop -> WHILE LPAREN expression RPAREN DO block .)
    LBRACKET        reduce using rule 86 (conditional_loop -> WHILE LPAREN expression RPAREN DO block .)
    PLUS            reduce using rule 86 (conditional_loop -> WHILE LPAREN expression RPAREN DO block .)
    MINUS           reduce using rule 86 (conditional_loop -> WHILE LPAREN expression RPAREN DO block .)
    CTEI            reduce using rule 86 (conditional_loop -> WHILE LPAREN expression RPAREN DO block .)
    CTEF            reduce using rule 86 (conditional_loop -> WHILE LPAREN expression RPAREN DO block .)
    CTEC            reduce using rule 86 (conditional_loop -> WHILE LPAREN expression RPAREN DO block .)
    TRUE            reduce using rule 86 (conditional_loop -> WHILE LPAREN expression RPAREN DO block .)
    FALSE           reduce using rule 86 (conditional_loop -> WHILE LPAREN expression RPAREN DO block .)
    RBRACE          reduce using rule 86 (conditional_loop -> WHILE LPAREN expression RPAREN DO block .)


state 219

    (40) assignment -> ID LBRACKET expression RBRACKET EQUALS expression SEMI .

    ID              reduce using rule 40 (assignment -> ID LBRACKET expression RBRACKET EQUALS expression SEMI .)
    LET             reduce using rule 40 (assignment -> ID LBRACKET expression RBRACKET EQUALS expression SEMI .)
    IF              reduce using rule 40 (assignment -> ID LBRACKET expression RBRACKET EQUALS expression SEMI .)
    PRINT           reduce using rule 40 (assignment -> ID LBRACKET expression RBRACKET EQUALS expression SEMI .)
    READ            reduce using rule 40 (assignment -> ID LBRACKET expression RBRACKET EQUALS expression SEMI .)
    RETURN          reduce using rule 40 (assignment -> ID LBRACKET expression RBRACKET EQUALS expression SEMI .)
    FOR             reduce using rule 40 (assignment -> ID LBRACKET expression RBRACKET EQUALS expression SEMI .)
    WHILE           reduce using rule 40 (assignment -> ID LBRACKET expression RBRACKET EQUALS expression SEMI .)
    MEAN            reduce using rule 40 (assignment -> ID LBRACKET expression RBRACKET EQUALS expression SEMI .)
    MEDIAN          reduce using rule 40 (assignment -> ID LBRACKET expression RBRACKET EQUALS expression SEMI .)
    MODE            reduce using rule 40 (assignment -> ID LBRACKET expression RBRACKET EQUALS expression SEMI .)
    VARIANCE        reduce using rule 40 (assignment -> ID LBRACKET expression RBRACKET EQUALS expression SEMI .)
    STDEV           reduce using rule 40 (assignment -> ID LBRACKET expression RBRACKET EQUALS expression SEMI .)
    LPAREN          reduce using rule 40 (assignment -> ID LBRACKET expression RBRACKET EQUALS expression SEMI .)
    LBRACKET        reduce using rule 40 (assignment -> ID LBRACKET expression RBRACKET EQUALS expression SEMI .)
    PLUS            reduce using rule 40 (assignment -> ID LBRACKET expression RBRACKET EQUALS expression SEMI .)
    MINUS           reduce using rule 40 (assignment -> ID LBRACKET expression RBRACKET EQUALS expression SEMI .)
    CTEI            reduce using rule 40 (assignment -> ID LBRACKET expression RBRACKET EQUALS expression SEMI .)
    CTEF            reduce using rule 40 (assignment -> ID LBRACKET expression RBRACKET EQUALS expression SEMI .)
    CTEC            reduce using rule 40 (assignment -> ID LBRACKET expression RBRACKET EQUALS expression SEMI .)
    TRUE            reduce using rule 40 (assignment -> ID LBRACKET expression RBRACKET EQUALS expression SEMI .)
    FALSE           reduce using rule 40 (assignment -> ID LBRACKET expression RBRACKET EQUALS expression SEMI .)
    RBRACE          reduce using rule 40 (assignment -> ID LBRACKET expression RBRACKET EQUALS expression SEMI .)


state 220

    (42) condition -> IF LPAREN expression RPAREN block ELSE block .

    ID              reduce using rule 42 (condition -> IF LPAREN expression RPAREN block ELSE block .)
    LET             reduce using rule 42 (condition -> IF LPAREN expression RPAREN block ELSE block .)
    IF              reduce using rule 42 (condition -> IF LPAREN expression RPAREN block ELSE block .)
    PRINT           reduce using rule 42 (condition -> IF LPAREN expression RPAREN block ELSE block .)
    READ            reduce using rule 42 (condition -> IF LPAREN expression RPAREN block ELSE block .)
    RETURN          reduce using rule 42 (condition -> IF LPAREN expression RPAREN block ELSE block .)
    FOR             reduce using rule 42 (condition -> IF LPAREN expression RPAREN block ELSE block .)
    WHILE           reduce using rule 42 (condition -> IF LPAREN expression RPAREN block ELSE block .)
    MEAN            reduce using rule 42 (condition -> IF LPAREN expression RPAREN block ELSE block .)
    MEDIAN          reduce using rule 42 (condition -> IF LPAREN expression RPAREN block ELSE block .)
    MODE            reduce using rule 42 (condition -> IF LPAREN expression RPAREN block ELSE block .)
    VARIANCE        reduce using rule 42 (condition -> IF LPAREN expression RPAREN block ELSE block .)
    STDEV           reduce using rule 42 (condition -> IF LPAREN expression RPAREN block ELSE block .)
    LPAREN          reduce using rule 42 (condition -> IF LPAREN expression RPAREN block ELSE block .)
    LBRACKET        reduce using rule 42 (condition -> IF LPAREN expression RPAREN block ELSE block .)
    PLUS            reduce using rule 42 (condition -> IF LPAREN expression RPAREN block ELSE block .)
    MINUS           reduce using rule 42 (condition -> IF LPAREN expression RPAREN block ELSE block .)
    CTEI            reduce using rule 42 (condition -> IF LPAREN expression RPAREN block ELSE block .)
    CTEF            reduce using rule 42 (condition -> IF LPAREN expression RPAREN block ELSE block .)
    CTEC            reduce using rule 42 (condition -> IF LPAREN expression RPAREN block ELSE block .)
    TRUE            reduce using rule 42 (condition -> IF LPAREN expression RPAREN block ELSE block .)
    FALSE           reduce using rule 42 (condition -> IF LPAREN expression RPAREN block ELSE block .)
    RBRACE          reduce using rule 42 (condition -> IF LPAREN expression RPAREN block ELSE block .)


state 221

    (81) reading_1 -> ID LBRACKET expression RBRACKET COMMA . reading_1
    (80) reading_1 -> . ID COMMA reading_1
    (81) reading_1 -> . ID LBRACKET expression RBRACKET COMMA reading_1
    (82) reading_1 -> . ID
    (83) reading_1 -> . ID LBRACKET expression RBRACKET

    ID              shift and go to state 154

    reading_1                      shift and go to state 223

state 222

    (87) non_conditional_loop -> FOR LPAREN ID EQUALS expression TO expression . BY expression RPAREN block

    BY              shift and go to state 224


state 223

    (81) reading_1 -> ID LBRACKET expression RBRACKET COMMA reading_1 .

    RPAREN          reduce using rule 81 (reading_1 -> ID LBRACKET expression RBRACKET COMMA reading_1 .)


state 224

    (87) non_conditional_loop -> FOR LPAREN ID EQUALS expression TO expression BY . expression RPAREN block
    (43) expression -> . exp
    (44) expression -> . expression1
    (53) exp -> . term
    (54) exp -> . term exp_1
    (45) expression1 -> . exp LT exp
    (46) expression1 -> . exp LE exp
    (47) expression1 -> . exp GT exp
    (48) expression1 -> . exp GE exp
    (49) expression1 -> . exp EQ exp
    (50) expression1 -> . exp NE exp
    (51) expression1 -> . exp AND exp
    (52) expression1 -> . exp OR exp
    (57) term -> . factor
    (58) term -> . factor term_2
    (61) factor -> . LPAREN expression RPAREN
    (62) factor -> . LBRACKET expression RBRACKET
    (63) factor -> . function_call
    (64) factor -> . factor_prima_1
    (89) function_call -> . ID LPAREN RPAREN SEMI
    (90) function_call -> . ID LPAREN function_call_1 RPAREN SEMI
    (91) function_call -> . ID LPAREN function_call_1 RPAREN
    (92) function_call -> . ID LPAREN RPAREN
    (65) factor_prima_1 -> . PLUS varcte
    (66) factor_prima_1 -> . MINUS varcte
    (67) factor_prima_1 -> . varcte
    (68) varcte -> . ID
    (69) varcte -> . CTEI
    (70) varcte -> . CTEF
    (71) varcte -> . CTEC
    (72) varcte -> . TRUE
    (73) varcte -> . FALSE

    LPAREN          shift and go to state 55
    LBRACKET        shift and go to state 53
    ID              shift and go to state 88
    PLUS            shift and go to state 78
    MINUS           shift and go to state 80
    CTEI            shift and go to state 81
    CTEF            shift and go to state 82
    CTEC            shift and go to state 83
    TRUE            shift and go to state 84
    FALSE           shift and go to state 85

    expression                     shift and go to state 225
    exp                            shift and go to state 61
    expression1                    shift and go to state 62
    term                           shift and go to state 70
    factor                         shift and go to state 76
    function_call                  shift and go to state 87
    factor_prima_1                 shift and go to state 77
    varcte                         shift and go to state 79

state 225

    (87) non_conditional_loop -> FOR LPAREN ID EQUALS expression TO expression BY expression . RPAREN block

    RPAREN          shift and go to state 226


state 226

    (87) non_conditional_loop -> FOR LPAREN ID EQUALS expression TO expression BY expression RPAREN . block
    (17) block -> . LBRACE statements RBRACE

    LBRACE          shift and go to state 32

    block                          shift and go to state 227

state 227

    (87) non_conditional_loop -> FOR LPAREN ID EQUALS expression TO expression BY expression RPAREN block .

    ID              reduce using rule 87 (non_conditional_loop -> FOR LPAREN ID EQUALS expression TO expression BY expression RPAREN block .)
    LET             reduce using rule 87 (non_conditional_loop -> FOR LPAREN ID EQUALS expression TO expression BY expression RPAREN block .)
    IF              reduce using rule 87 (non_conditional_loop -> FOR LPAREN ID EQUALS expression TO expression BY expression RPAREN block .)
    PRINT           reduce using rule 87 (non_conditional_loop -> FOR LPAREN ID EQUALS expression TO expression BY expression RPAREN block .)
    READ            reduce using rule 87 (non_conditional_loop -> FOR LPAREN ID EQUALS expression TO expression BY expression RPAREN block .)
    RETURN          reduce using rule 87 (non_conditional_loop -> FOR LPAREN ID EQUALS expression TO expression BY expression RPAREN block .)
    FOR             reduce using rule 87 (non_conditional_loop -> FOR LPAREN ID EQUALS expression TO expression BY expression RPAREN block .)
    WHILE           reduce using rule 87 (non_conditional_loop -> FOR LPAREN ID EQUALS expression TO expression BY expression RPAREN block .)
    MEAN            reduce using rule 87 (non_conditional_loop -> FOR LPAREN ID EQUALS expression TO expression BY expression RPAREN block .)
    MEDIAN          reduce using rule 87 (non_conditional_loop -> FOR LPAREN ID EQUALS expression TO expression BY expression RPAREN block .)
    MODE            reduce using rule 87 (non_conditional_loop -> FOR LPAREN ID EQUALS expression TO expression BY expression RPAREN block .)
    VARIANCE        reduce using rule 87 (non_conditional_loop -> FOR LPAREN ID EQUALS expression TO expression BY expression RPAREN block .)
    STDEV           reduce using rule 87 (non_conditional_loop -> FOR LPAREN ID EQUALS expression TO expression BY expression RPAREN block .)
    LPAREN          reduce using rule 87 (non_conditional_loop -> FOR LPAREN ID EQUALS expression TO expression BY expression RPAREN block .)
    LBRACKET        reduce using rule 87 (non_conditional_loop -> FOR LPAREN ID EQUALS expression TO expression BY expression RPAREN block .)
    PLUS            reduce using rule 87 (non_conditional_loop -> FOR LPAREN ID EQUALS expression TO expression BY expression RPAREN block .)
    MINUS           reduce using rule 87 (non_conditional_loop -> FOR LPAREN ID EQUALS expression TO expression BY expression RPAREN block .)
    CTEI            reduce using rule 87 (non_conditional_loop -> FOR LPAREN ID EQUALS expression TO expression BY expression RPAREN block .)
    CTEF            reduce using rule 87 (non_conditional_loop -> FOR LPAREN ID EQUALS expression TO expression BY expression RPAREN block .)
    CTEC            reduce using rule 87 (non_conditional_loop -> FOR LPAREN ID EQUALS expression TO expression BY expression RPAREN block .)
    TRUE            reduce using rule 87 (non_conditional_loop -> FOR LPAREN ID EQUALS expression TO expression BY expression RPAREN block .)
    FALSE           reduce using rule 87 (non_conditional_loop -> FOR LPAREN ID EQUALS expression TO expression BY expression RPAREN block .)
    RBRACE          reduce using rule 87 (non_conditional_loop -> FOR LPAREN ID EQUALS expression TO expression BY expression RPAREN block .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ID in state 49 resolved as shift
WARNING: shift/reduce conflict for LET in state 49 resolved as shift
WARNING: shift/reduce conflict for IF in state 49 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 49 resolved as shift
WARNING: shift/reduce conflict for READ in state 49 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 49 resolved as shift
WARNING: shift/reduce conflict for FOR in state 49 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 49 resolved as shift
WARNING: shift/reduce conflict for MEAN in state 49 resolved as shift
WARNING: shift/reduce conflict for MEDIAN in state 49 resolved as shift
WARNING: shift/reduce conflict for MODE in state 49 resolved as shift
WARNING: shift/reduce conflict for VARIANCE in state 49 resolved as shift
WARNING: shift/reduce conflict for STDEV in state 49 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 49 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 49 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 49 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 49 resolved as shift
WARNING: shift/reduce conflict for CTEI in state 49 resolved as shift
WARNING: shift/reduce conflict for CTEF in state 49 resolved as shift
WARNING: shift/reduce conflict for CTEC in state 49 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 49 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 49 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 52 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 52 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 70 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 70 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 88 resolved as shift
WARNING: shift/reduce conflict for SEMI in state 144 resolved as shift
WARNING: shift/reduce conflict for SEMI in state 180 resolved as shift
WARNING: reduce/reduce conflict in state 49 resolved using rule (factor -> function_call)
WARNING: rejected rule (epsilon -> <empty>) in state 49
