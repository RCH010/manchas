
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND BOOL BY CHAR COLON COMMA CTEC CTEF CTEI CTESTRING DIVIDE DO ELSE EQ EQUALS FALSE FLOAT FOR FUNCTION GE GT ID IF INT LBRACE LBRACKET LE LET LPAREN LT MAIN MEAN MEDIAN MINUS MODE NE OR PLUS PRINT PROGRAM RBRACE RBRACKET READ RETURN RPAREN SEMI STDEV TIMES TO TRUE VARIANCE VOID WHILEprogram : PROGRAM ID SEMI program_1program_1 : vars program_1\n        | function program_1\n        | main_blockvars : LET vars_prima_1vars_prima_1 : ID COLON type SEMI\n        | ID COMMA vars_prima_1type : INT type_1\n        | FLOAT type_1\n        | CHAR type_1\n        | BOOL type_1type_1 : LBRACKET expression RBRACKET\n        | epsilonfunction : FUNCTION ID COLON return_type LPAREN params RPAREN block\n        | FUNCTION ID COLON return_type LPAREN RPAREN blockmain_block : MAIN LPAREN RPAREN blockblock : LBRACE statements RBRACEreturn_type : VOID\n        | typeparams : ID COLON type COMMA params\n        | ID COLON typestatements : assignment statements1\n        | vars statements1\n        | condition statements1\n        | writing statements1\n        | reading statements1\n        | repetition statements1\n        | return statements1\n        | function_call statements1\n        | expression statements1\n        | special_functions statements1special_functions : mean\n        | median\n        | mode\n        | variance\n        | standard_deviationstatements1 : statements\n        | epsilonassignment : ID EQUALS expression SEMI\n        | ID LBRACKET expression RBRACKET EQUALS expression SEMIcondition : IF LPAREN expression RPAREN block\n        |  IF LPAREN expression RPAREN block ELSE blockexpression : exp\n        | expression1\n    expression1 : exp LT exp\n        | exp LE exp\n        | exp GT exp\n        | exp GE exp\n        | exp EQ exp\n        | exp NE exp\n        | exp AND exp\n        | exp OR expexp : term\n        | term exp_1exp_1 : PLUS exp\n        | MINUS expterm : factor\n        | factor term_2term_2 : TIMES term\n        | DIVIDE termfactor : LPAREN expression RPAREN\n        | LBRACKET expression RBRACKET\n        | function_call\n        | factor_prima_1factor_prima_1 : PLUS varcte\n        | MINUS varcte\n        | varctevarcte : ID\n        | CTEI\n        | CTEF\n        | CTEC\n        | TRUE\n        | FALSEwriting : PRINT LPAREN writing_1 RPAREN SEMIwriting_1 : expression COMMA writing_1\n        | expression\n        | CTESTRING\n        | CTESTRING COMMAreading : READ LPAREN reading_1 RPAREN SEMIreading_1 : ID COMMA reading_1\n        | ID LBRACKET expression RBRACKET COMMA reading_1\n        | ID\n        | ID LBRACKET expression RBRACKETrepetition : non_conditional_loop\n        | conditional_loopconditional_loop : WHILE LPAREN expression RPAREN DO blocknon_conditional_loop : FOR LPAREN ID EQUALS expression TO expression BY expression RPAREN blockreturn : RETURN expression SEMIfunction_call : ID LPAREN RPAREN SEMI\n        | ID LPAREN function_call_1 RPAREN SEMI\n        | ID LPAREN function_call_1 RPAREN\n        | ID LPAREN RPARENfunction_call_1 : expression\n        | expression COMMA function_call_1mean : MEAN LPAREN expression RPAREN SEMImedian : MEDIAN LPAREN expression RPAREN SEMImode : MODE LPAREN expression RPAREN SEMIvariance : VARIANCE LPAREN expression RPAREN SEMIstandard_deviation : STDEV LPAREN expression RPAREN SEMIepsilon : '
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'program_1':([4,6,7,],[5,12,13,]),'vars':([4,6,7,32,42,43,44,45,46,47,48,49,50,51,],[6,6,6,43,43,43,43,43,43,43,43,43,43,43,]),'function':([4,6,7,],[7,7,7,]),'main_block':([4,6,7,],[8,8,8,]),'vars_prima_1':([9,19,],[14,27,]),'type':([18,20,139,],[22,30,175,]),'return_type':([20,],[28,]),'block':([21,91,140,182,207,215,226,],[31,141,176,200,218,220,227,]),'type_1':([23,24,25,26,],[34,37,38,39,]),'epsilon':([23,24,25,26,42,43,44,45,46,47,48,49,50,51,],[36,36,36,36,95,95,95,95,95,95,95,95,95,95,]),'statements':([32,42,43,44,45,46,47,48,49,50,51,],[41,94,94,94,94,94,94,94,94,94,94,]),'assignment':([32,42,43,44,45,46,47,48,49,50,51,],[42,42,42,42,42,42,42,42,42,42,42,]),'condition':([32,42,43,44,45,46,47,48,49,50,51,],[44,44,44,44,44,44,44,44,44,44,44,]),'writing':([32,42,43,44,45,46,47,48,49,50,51,],[45,45,45,45,45,45,45,45,45,45,45,]),'reading':([32,42,43,44,45,46,47,48,49,50,51,],[46,46,46,46,46,46,46,46,46,46,46,]),'repetition':([32,42,43,44,45,46,47,48,49,50,51,],[47,47,47,47,47,47,47,47,47,47,47,]),'return':([32,42,43,44,45,46,47,48,49,50,51,],[48,48,48,48,48,48,48,48,48,48,48,]),'function_call':([32,35,42,43,44,45,46,47,48,49,50,51,53,55,60,105,106,107,109,111,114,115,116,117,118,119,120,121,123,125,126,127,128,129,130,131,133,134,181,184,188,189,197,217,224,],[49,87,49,49,49,49,49,49,49,49,49,49,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'expression':([32,35,42,43,44,45,46,47,48,49,50,51,53,55,60,105,106,107,109,111,123,127,128,129,130,131,181,184,188,189,197,217,224,],[50,86,50,50,50,50,50,50,50,50,50,50,108,110,113,142,143,146,148,151,165,168,169,170,171,172,146,151,205,206,214,222,225,]),'special_functions':([32,42,43,44,45,46,47,48,49,50,51,],[51,51,51,51,51,51,51,51,51,51,51,]),'non_conditional_loop':([32,42,43,44,45,46,47,48,49,50,51,],[58,58,58,58,58,58,58,58,58,58,58,]),'conditional_loop':([32,42,43,44,45,46,47,48,49,50,51,],[59,59,59,59,59,59,59,59,59,59,59,]),'exp':([32,35,42,43,44,45,46,47,48,49,50,51,53,55,60,105,106,107,109,111,114,115,116,117,118,119,120,121,123,125,126,127,128,129,130,131,181,184,188,189,197,217,224,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,156,157,158,159,160,161,162,163,61,166,167,61,61,61,61,61,61,61,61,61,61,61,61,]),'expression1':([32,35,42,43,44,45,46,47,48,49,50,51,53,55,60,105,106,107,109,111,123,127,128,129,130,131,181,184,188,189,197,217,224,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'mean':([32,42,43,44,45,46,47,48,49,50,51,],[63,63,63,63,63,63,63,63,63,63,63,]),'median':([32,42,43,44,45,46,47,48,49,50,51,],[64,64,64,64,64,64,64,64,64,64,64,]),'mode':([32,42,43,44,45,46,47,48,49,50,51,],[65,65,65,65,65,65,65,65,65,65,65,]),'variance':([32,42,43,44,45,46,47,48,49,50,51,],[66,66,66,66,66,66,66,66,66,66,66,]),'standard_deviation':([32,42,43,44,45,46,47,48,49,50,51,],[67,67,67,67,67,67,67,67,67,67,67,]),'term':([32,35,42,43,44,45,46,47,48,49,50,51,53,55,60,105,106,107,109,111,114,115,116,117,118,119,120,121,123,125,126,127,128,129,130,131,133,134,181,184,188,189,197,217,224,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,173,174,70,70,70,70,70,70,70,]),'factor':([32,35,42,43,44,45,46,47,48,49,50,51,53,55,60,105,106,107,109,111,114,115,116,117,118,119,120,121,123,125,126,127,128,129,130,131,133,134,181,184,188,189,197,217,224,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'factor_prima_1':([32,35,42,43,44,45,46,47,48,49,50,51,53,55,60,105,106,107,109,111,114,115,116,117,118,119,120,121,123,125,126,127,128,129,130,131,133,134,181,184,188,189,197,217,224,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'varcte':([32,35,42,43,44,45,46,47,48,49,50,51,53,55,60,78,80,105,106,107,109,111,114,115,116,117,118,119,120,121,123,125,126,127,128,129,130,131,133,134,181,184,188,189,197,217,224,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,135,137,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'params':([40,196,],[90,213,]),'statements1':([42,43,44,45,46,47,48,49,50,51,],[93,96,97,98,99,100,101,102,103,104,]),'exp_1':([70,],[124,]),'term_2':([76,],[132,]),'function_call_1':([107,181,],[145,199,]),'writing_1':([111,184,],[150,202,]),'reading_1':([112,187,221,],[153,204,223,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID SEMI program_1','program',4,'p_program','parser.py',8),
  ('program_1 -> vars program_1','program_1',2,'p_program_1','parser.py',12),
  ('program_1 -> function program_1','program_1',2,'p_program_1','parser.py',13),
  ('program_1 -> main_block','program_1',1,'p_program_1','parser.py',14),
  ('vars -> LET vars_prima_1','vars',2,'p_vars','parser.py',18),
  ('vars_prima_1 -> ID COLON type SEMI','vars_prima_1',4,'p_vars_prima_1','parser.py',22),
  ('vars_prima_1 -> ID COMMA vars_prima_1','vars_prima_1',3,'p_vars_prima_1','parser.py',23),
  ('type -> INT type_1','type',2,'p_type','parser.py',27),
  ('type -> FLOAT type_1','type',2,'p_type','parser.py',28),
  ('type -> CHAR type_1','type',2,'p_type','parser.py',29),
  ('type -> BOOL type_1','type',2,'p_type','parser.py',30),
  ('type_1 -> LBRACKET expression RBRACKET','type_1',3,'p_type_1','parser.py',33),
  ('type_1 -> epsilon','type_1',1,'p_type_1','parser.py',34),
  ('function -> FUNCTION ID COLON return_type LPAREN params RPAREN block','function',8,'p_function','parser.py',37),
  ('function -> FUNCTION ID COLON return_type LPAREN RPAREN block','function',7,'p_function','parser.py',38),
  ('main_block -> MAIN LPAREN RPAREN block','main_block',4,'p_main_block','parser.py',41),
  ('block -> LBRACE statements RBRACE','block',3,'p_block','parser.py',44),
  ('return_type -> VOID','return_type',1,'p_return_type','parser.py',48),
  ('return_type -> type','return_type',1,'p_return_type','parser.py',49),
  ('params -> ID COLON type COMMA params','params',5,'p_params','parser.py',52),
  ('params -> ID COLON type','params',3,'p_params','parser.py',53),
  ('statements -> assignment statements1','statements',2,'p_statements','parser.py',56),
  ('statements -> vars statements1','statements',2,'p_statements','parser.py',57),
  ('statements -> condition statements1','statements',2,'p_statements','parser.py',58),
  ('statements -> writing statements1','statements',2,'p_statements','parser.py',59),
  ('statements -> reading statements1','statements',2,'p_statements','parser.py',60),
  ('statements -> repetition statements1','statements',2,'p_statements','parser.py',61),
  ('statements -> return statements1','statements',2,'p_statements','parser.py',62),
  ('statements -> function_call statements1','statements',2,'p_statements','parser.py',63),
  ('statements -> expression statements1','statements',2,'p_statements','parser.py',64),
  ('statements -> special_functions statements1','statements',2,'p_statements','parser.py',65),
  ('special_functions -> mean','special_functions',1,'p_special_functions','parser.py',69),
  ('special_functions -> median','special_functions',1,'p_special_functions','parser.py',70),
  ('special_functions -> mode','special_functions',1,'p_special_functions','parser.py',71),
  ('special_functions -> variance','special_functions',1,'p_special_functions','parser.py',72),
  ('special_functions -> standard_deviation','special_functions',1,'p_special_functions','parser.py',73),
  ('statements1 -> statements','statements1',1,'p_statements1','parser.py',76),
  ('statements1 -> epsilon','statements1',1,'p_statements1','parser.py',77),
  ('assignment -> ID EQUALS expression SEMI','assignment',4,'p_assignment','parser.py',81),
  ('assignment -> ID LBRACKET expression RBRACKET EQUALS expression SEMI','assignment',7,'p_assignment','parser.py',82),
  ('condition -> IF LPAREN expression RPAREN block','condition',5,'p_condition','parser.py',85),
  ('condition -> IF LPAREN expression RPAREN block ELSE block','condition',7,'p_condition','parser.py',86),
  ('expression -> exp','expression',1,'p_expression','parser.py',90),
  ('expression -> expression1','expression',1,'p_expression','parser.py',91),
  ('expression1 -> exp LT exp','expression1',3,'p_expression1','parser.py',96),
  ('expression1 -> exp LE exp','expression1',3,'p_expression1','parser.py',97),
  ('expression1 -> exp GT exp','expression1',3,'p_expression1','parser.py',98),
  ('expression1 -> exp GE exp','expression1',3,'p_expression1','parser.py',99),
  ('expression1 -> exp EQ exp','expression1',3,'p_expression1','parser.py',100),
  ('expression1 -> exp NE exp','expression1',3,'p_expression1','parser.py',101),
  ('expression1 -> exp AND exp','expression1',3,'p_expression1','parser.py',102),
  ('expression1 -> exp OR exp','expression1',3,'p_expression1','parser.py',103),
  ('exp -> term','exp',1,'p_exp','parser.py',107),
  ('exp -> term exp_1','exp',2,'p_exp','parser.py',108),
  ('exp_1 -> PLUS exp','exp_1',2,'p_exp_1','parser.py',111),
  ('exp_1 -> MINUS exp','exp_1',2,'p_exp_1','parser.py',112),
  ('term -> factor','term',1,'p_term','parser.py',115),
  ('term -> factor term_2','term',2,'p_term','parser.py',116),
  ('term_2 -> TIMES term','term_2',2,'p_term_2','parser.py',119),
  ('term_2 -> DIVIDE term','term_2',2,'p_term_2','parser.py',120),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor','parser.py',123),
  ('factor -> LBRACKET expression RBRACKET','factor',3,'p_factor','parser.py',124),
  ('factor -> function_call','factor',1,'p_factor','parser.py',125),
  ('factor -> factor_prima_1','factor',1,'p_factor','parser.py',126),
  ('factor_prima_1 -> PLUS varcte','factor_prima_1',2,'p_factor_prima_1','parser.py',129),
  ('factor_prima_1 -> MINUS varcte','factor_prima_1',2,'p_factor_prima_1','parser.py',130),
  ('factor_prima_1 -> varcte','factor_prima_1',1,'p_factor_prima_1','parser.py',131),
  ('varcte -> ID','varcte',1,'p_varcte','parser.py',134),
  ('varcte -> CTEI','varcte',1,'p_varcte','parser.py',135),
  ('varcte -> CTEF','varcte',1,'p_varcte','parser.py',136),
  ('varcte -> CTEC','varcte',1,'p_varcte','parser.py',137),
  ('varcte -> TRUE','varcte',1,'p_varcte','parser.py',138),
  ('varcte -> FALSE','varcte',1,'p_varcte','parser.py',139),
  ('writing -> PRINT LPAREN writing_1 RPAREN SEMI','writing',5,'p_writing','parser.py',142),
  ('writing_1 -> expression COMMA writing_1','writing_1',3,'p_writing_1','parser.py',145),
  ('writing_1 -> expression','writing_1',1,'p_writing_1','parser.py',146),
  ('writing_1 -> CTESTRING','writing_1',1,'p_writing_1','parser.py',147),
  ('writing_1 -> CTESTRING COMMA','writing_1',2,'p_writing_1','parser.py',148),
  ('reading -> READ LPAREN reading_1 RPAREN SEMI','reading',5,'p_reading','parser.py',151),
  ('reading_1 -> ID COMMA reading_1','reading_1',3,'p_reading_1','parser.py',154),
  ('reading_1 -> ID LBRACKET expression RBRACKET COMMA reading_1','reading_1',6,'p_reading_1','parser.py',155),
  ('reading_1 -> ID','reading_1',1,'p_reading_1','parser.py',156),
  ('reading_1 -> ID LBRACKET expression RBRACKET','reading_1',4,'p_reading_1','parser.py',157),
  ('repetition -> non_conditional_loop','repetition',1,'p_repetition','parser.py',160),
  ('repetition -> conditional_loop','repetition',1,'p_repetition','parser.py',161),
  ('conditional_loop -> WHILE LPAREN expression RPAREN DO block','conditional_loop',6,'p_conditional_loop','parser.py',164),
  ('non_conditional_loop -> FOR LPAREN ID EQUALS expression TO expression BY expression RPAREN block','non_conditional_loop',11,'p_non_conditional_loop','parser.py',167),
  ('return -> RETURN expression SEMI','return',3,'p_return','parser.py',170),
  ('function_call -> ID LPAREN RPAREN SEMI','function_call',4,'p_function_call','parser.py',173),
  ('function_call -> ID LPAREN function_call_1 RPAREN SEMI','function_call',5,'p_function_call','parser.py',174),
  ('function_call -> ID LPAREN function_call_1 RPAREN','function_call',4,'p_function_call','parser.py',175),
  ('function_call -> ID LPAREN RPAREN','function_call',3,'p_function_call','parser.py',176),
  ('function_call_1 -> expression','function_call_1',1,'p_function_call_1','parser.py',179),
  ('function_call_1 -> expression COMMA function_call_1','function_call_1',3,'p_function_call_1','parser.py',180),
  ('mean -> MEAN LPAREN expression RPAREN SEMI','mean',5,'p_mean','parser.py',183),
  ('median -> MEDIAN LPAREN expression RPAREN SEMI','median',5,'p_median','parser.py',186),
  ('mode -> MODE LPAREN expression RPAREN SEMI','mode',5,'p_mode','parser.py',189),
  ('variance -> VARIANCE LPAREN expression RPAREN SEMI','variance',5,'p_variance','parser.py',192),
  ('standard_deviation -> STDEV LPAREN expression RPAREN SEMI','standard_deviation',5,'p_standard_deviation','parser.py',195),
  ('epsilon -> <empty>','epsilon',0,'p_epsilon','parser.py',198),
]
